/* Border width for callouts within a card. Including coupon callout areas on product cards. */
export const borderWidthContentCardCallout = "1px";
/* Border width for controls. */
export const borderWidthControl = "1px";
/* Border width for horizontal rules. */
export const borderWidthRule = "1px";
/* Border width for tag drawable backgrounds. */
export const borderWidthTag = "1px";
/* Border style for callouts within a card. Including coupon callout area on product cards. */
export const borderStyleContentCardCallout = "dashed";
/* Border style for controls. */
export const borderStyleControl = "solid";
/* Border style for image views. */
export const borderStyleImage = "solid";
/* Tablet portrait, phablets and larger. */
export const breakpointContainerApp600AndUp = "37.5rem";
/* Tablet landscape, small desktops and larger. */
export const breakpointContainerApp900AndUp = "56.25rem";
/* Typical modern desktops and larger. */
export const breakpointContainerApp1200AndUp = "75rem";
/* Wide-screen desktops and larger. */
export const breakpointContainerApp1800AndUp = "112.5rem";
/* 0 pixels */
export const elevation0 = "0";
/* 2 pixels */
export const elevation2 = "0.125rem";
/* 4 pixels */
export const elevation4 = "0.25rem";
/* 8 pixels */
export const elevation8 = "0.50rem";
/* 12 pixels */
export const elevation12 = "0.75rem";
/* 16 pixels */
export const elevation16 = "1.00rem";
/* Default font stack for web only; `null` Prevents the CSS `font-family` string from being passed to Android/iOS build chains. */
export const fontFamily = "-apple-system, BlinkMacSystemFont, Roboto, Segoe UI, system-ui, Helvetica Neue, Ubuntu, sans-serif";
/* The line height for extra large headings: 1.25 */
export const fontLineHeightTextHeadingExtraLarge = "1.25";
/* The line height for large headings: 1.2 */
export const fontLineHeightTextHeadingLarge = "1.2";
/* The line height for medium headings: 1.111 */
export const fontLineHeightTextHeadingMedium = "1.111111111111111";
/* The line height for small headings: 1.25 */
export const fontLineHeightTextHeadingSmall = "1.25";
/* The line height for large body text: 1.5 */
export const fontLineHeightTextBodyLarge = "1.5";
/* The line height for medium body text: 1.481 */
export const fontLineHeightTextBodyMedium = "1.481481481481481";
/* The line height for small body text: 1.667 */
export const fontLineHeightTextBodySmall = "1.666666666666667";
/* The line height for extra small body text: 1.6 */
export const fontLineHeightTextBodyExtraSmall = "1.6";
/* The line height for controls. Matches body-large. */
export const fontLineHeightControl = "1.5";
/* Used sparingly as an attention grabber in heroes and large banners. Restricted to use-cases identified by UX/Design. */
export const fontSizeTextHeadingExtraLarge = "2.00rem";
/* Primary headings used for a page's main content section(s). */
export const fontSizeTextHeadingLarge = "1.250rem";
/* Secondary headings used for supplementary content on detail pages. */
export const fontSizeTextHeadingMedium = "1.125rem";
/* Subheadings within smaller sections such as cards. */
export const fontSizeTextHeadingSmall = "1.00rem";
/* Long form body copy used in larger text areas including detail pages for Product or Recipe. */
export const fontSizeTextBodyLarge = "1.00rem";
/* Base font size used for most body copy. */
export const fontSizeTextBodyMedium = "0.844rem";
/* Supplementary body text. */
export const fontSizeTextBodySmall = "0.750rem";
/* Used sparingly for fine print or other use cases. Restricted to use-cases identified by UX/Design. */
export const fontSizeTextBodyExtraSmall = "0.625rem";
/* The font size for controls. Matches body-medium. */
export const fontSizeControl = "0.844rem";
/* Larger headings look best with lighter weight. */
export const fontWeightTextHeadingExtraLarge = "400";
/* Larger headings look best with lighter weight. */
export const fontWeightTextHeadingLarge = "400";
/* Larger headings look best with lighter weight. */
export const fontWeightTextHeadingMedium = "400";
/* Smallest heading looks best with heavier weight. */
export const fontWeightTextHeadingSmall = "500";
/* Weight used for most body copy. */
export const fontWeightTextBody = "400";
/* Used sparingly for emphasized text within regular body copy. */
export const fontWeightTextBodyBold = "500";
/* Controls are always bold. */
export const fontWeightControl = "500";
/* Static ink color. Special use-case: this color doesn't belong to any semantic group because it may be considered as the lightest option (0-weight) among any of them. */
export const inkColorWhite = "rgb(255, 255, 255)";
/* Inverse Ink */
export const inkColorDefault50 = "rgb(248, 250, 251)";
export const inkColorDefault100 = "rgb(242, 244, 245)";
export const inkColorDefault200 = "rgb(234, 236, 237)";
export const inkColorDefault300 = "rgb(219, 221, 222)";
export const inkColorDefault400 = "rgb(184, 185, 187)";
export const inkColorDefault500 = "rgb(153, 154, 155)";
export const inkColorDefault600 = "rgb(112, 113, 114)";
/* Subdued Ink */
export const inkColorDefault700 = "rgb(92, 93, 95)";
export const inkColorDefault800 = "rgb(62, 63, 64)";
/* Default Ink (base theme choice) */
export const inkColorDefault900 = "rgb(29, 30, 31)";
export const inkColorBrand50 = "rgb(227, 242, 251)";
export const inkColorBrand100 = "rgb(187, 223, 246)";
export const inkColorBrand200 = "rgb(145, 203, 240)";
export const inkColorBrand300 = "rgb(102, 182, 234)";
export const inkColorBrand400 = "rgb(69, 167, 231)";
export const inkColorBrand500 = "rgb(35, 152, 228)";
export const inkColorBrand600 = "rgb(25, 139, 215)";
export const inkColorBrand700 = "rgb(11, 121, 197)";
/* Brand Ink (base theme choice) */
export const inkColorBrand800 = "rgb(0, 104, 179)";
export const inkColorBrand900 = "rgb(0, 75, 148)";
export const inkColorPositive50 = "rgb(233, 245, 230)";
export const inkColorPositive100 = "rgb(201, 231, 193)";
export const inkColorPositive200 = "rgb(167, 216, 153)";
export const inkColorPositive300 = "rgb(131, 201, 111)";
export const inkColorPositive400 = "rgb(103, 190, 78)";
export const inkColorPositive500 = "rgb(75, 178, 41)";
export const inkColorPositive600 = "rgb(65, 163, 32)";
export const inkColorPositive700 = "rgb(52, 145, 19)";
/* Positive Ink (base theme choice) */
export const inkColorPositive800 = "rgb(37, 128, 3)";
export const inkColorPositive900 = "rgb(0, 98, 0)";
export const inkColorNegative50 = "rgb(255, 234, 236)";
export const inkColorNegative100 = "rgb(255, 202, 205)";
export const inkColorNegative200 = "rgb(237, 149, 144)";
export const inkColorNegative300 = "rgb(226, 107, 102)";
export const inkColorNegative400 = "rgb(233, 73, 63)";
export const inkColorNegative500 = "rgb(236, 57, 32)";
export const inkColorNegative600 = "rgb(222, 44, 33)";
export const inkColorNegative700 = "rgb(204, 33, 28)";
/* Negative Ink (base theme choice) */
export const inkColorNegative800 = "rgb(192, 26, 20)";
export const inkColorNegative900 = "rgb(177, 3, 5)";
export const inkColorNeutral50 = "rgb(227, 242, 251)";
/* Info Message */
export const inkColorNeutral100 = "rgb(187, 223, 246)";
export const inkColorNeutral200 = "rgb(145, 203, 240)";
export const inkColorNeutral300 = "rgb(102, 182, 234)";
export const inkColorNeutral400 = "rgb(69, 167, 231)";
export const inkColorNeutral500 = "rgb(35, 152, 228)";
export const inkColorNeutral600 = "rgb(25, 139, 215)";
export const inkColorNeutral700 = "rgb(11, 121, 197)";
/* Neutral Ink (base theme choice) */
export const inkColorNeutral800 = "rgb(0, 104, 179)";
export const inkColorNeutral900 = "rgb(0, 75, 148)";
export const inkColorSpecial50 = "rgb(244, 228, 249)";
export const inkColorSpecial100 = "rgb(226, 189, 241)";
export const inkColorSpecial200 = "rgb(207, 144, 233)";
export const inkColorSpecial300 = "rgb(187, 98, 224)";
export const inkColorSpecial400 = "rgb(172, 59, 217)";
export const inkColorSpecial500 = "rgb(156, 0, 209)";
export const inkColorSpecial600 = "rgb(140, 4, 203)";
export const inkColorSpecial700 = "rgb(117, 5, 196)";
/* Special Ink (base theme choice) */
export const inkColorSpecial800 = "rgb(95, 5, 190)";
export const inkColorSpecial900 = "rgb(40, 5, 181)";
export const inkColorCallout50 = "rgb(255, 248, 225)";
export const inkColorCallout100 = "rgb(255, 235, 178)";
export const inkColorCallout200 = "rgb(255, 223, 129)";
export const inkColorCallout300 = "rgb(255, 212, 77)";
export const inkColorCallout400 = "rgb(255, 200, 37)";
/* Callout Ink (base theme choice) */
export const inkColorCallout500 = "rgb(255, 191, 0)";
export const inkColorCallout600 = "rgb(255, 177, 0)";
export const inkColorCallout700 = "rgb(255, 158, 0)";
export const inkColorCallout800 = "rgb(255, 141, 0)";
export const inkColorCallout900 = "rgb(255, 109, 0)";
/* Mobile line length maximum. */
export const lineLengthTextMobileMaximum = "24.25rem";
/* Desktop line length minimum. */
export const lineLengthTextDesktopMinimum = "17.75rem";
/* Desktop line length maximum. */
export const lineLengthTextDesktopMaximum = "33rem";
/* Opacity level for disabled controls. */
export const opacityDisabled = "0.4";
export const radius4 = "0.25rem";
export const radius8 = "0.50rem";
export const radius16 = "0.25rem";
export const radius20 = "0.50rem";
export const radiusFull = "625rem";
/* The corner radius for cards. */
export const radiusContentCard = "0.50rem";
/* Border radius for coupon callout area on product cards. */
export const radiusContentCardCallout = "0.50rem";
/* Border radius for the Global Alert card. */
export const radiusAlertGlobal = "0.50rem";
/* Border radius for the Message card. */
export const radiusMessage = "0.50rem";
/* Border radius for the Message card when placed in a form. */
export const radiusMessageForm = "0.25rem";
/* The default corner radius for controls. */
export const radiusControl = "0.25rem";
/* The corner radius for standard buttons. */
export const radiusControlButton = "1.25rem";
/* The corner radius for compact buttons. */
export const radiusControlButtonCompact = "1.00rem";
/* The corner radius for checkboxes. */
export const radiusControlSelectionCheckbox = "0.25rem";
/* The corner radius for the Favorite component. */
export const radiusControlSelectionFavorite = "1.25rem";
/* The corner radius for the Toggle component. */
export const radiusControlSelectionToggle = "1.25rem";
/* The corner radius for the Toggle switch. */
export const radiusControlSelectionToggleSwitch = "625rem";
/* The corner radius for images. */
export const radiusImage = "0.25rem";
export const size0 = "0";
export const size1 = "1px";
export const size2 = "0.125rem";
export const size4 = "0.25rem";
export const size8 = "0.50rem";
export const size12 = "0.75rem";
export const size16 = "1.00rem";
export const size20 = "1.25rem";
export const size24 = "1.50rem";
export const size32 = "2.00rem";
export const size40 = "2.50rem";
export const size48 = "3.00rem";
export const size96 = "6.00rem";
export const size144 = "9.00rem";
export const sizeFull = "100%";
/* Height of a gradient tag on a card. */
export const sizeContentCardTagHeight = "1.50rem";
/* 16 pixel internal padding for card. */
export const sizeContentCardPadding16 = "1.00rem";
/* 24 pixel internal padding for card. */
export const sizeContentCardPadding24 = "1.50rem";
/* 32 pixel internal padding for card. */
export const sizeContentCardPadding32 = "2.00rem";
/* Standard button height. */
export const sizeControlButtonStandardHeight = "2.50rem";
/* Compact button height. */
export const sizeControlButtonCompactHeight = "2.00rem";
/* Minimum button width for both standard and compact buttons. */
export const sizeControlButtonMinimumWidth = "4.00rem";
/* Standard field height. */
export const sizeControlFieldStandardHeight = "2.50rem";
/* Compact field height. */
export const sizeControlFieldCompactHeight = "2.00rem";
/* Checkbox and RadioButton height / width. */
export const sizeControlSelection = "1.50rem";
/* Favorite height / width. */
export const sizeControlSelectionFavorite = "2.00rem";
/* Toggle component width. */
export const sizeControlSelectionToggleWidth = "3.00rem";
/* Height / width of toggle switch. */
export const sizeControlSelectionToggleSwitch = "1.00rem";
/* Stepper input field width. */
export const sizeControlSelectionStepperInputWidth = "1.50rem";
/* The size of icons that reside inside the Global Alert component. */
export const sizeAlertIcon = "2.00rem";
/* Height of the Global Alert card. */
export const sizeAlertGlobalHeight = "2.50rem";
/* The width of icons that reside inside the Message component. */
export const sizeMessageIcon = "1.25rem";
/* Height of the Message card. */
export const sizeMessageHeight = "2.00rem";
/* If an icon is placed inline with text, the height and width of the icon should match the line height of the text. Use 1.667em (20px) when an icon is paired with Body Small text. */
export const sizeImageIconInlineSmall = "1.666666666666667em";
/* If an icon is placed inline with text, the height and width of the icon should match the line height of the text. Use 1.481em (20px) when an icon is paired with Body Medium text. */
export const sizeImageIconInlineMedium = "1.481481481481481em";
/* If an icon is placed inline with text, the height and width of the icon should match the line height of the text. Use 1.5em (24px) when an icon is paired with Body Large text. */
export const sizeImageIconInlineLarge = "1.5em";
/* Use utility extra small icons in cases when icons are not directly associated with text. */
export const sizeImageIconUtilityExtraSmall = "1.00rem";
/* Use 1.25rem (20px) when placing an icon to the left of Body Small text. */
export const sizeImageIconUtilitySmall = "1.25rem";
/* Most common icon size. Use 1.5rem (24px) inside most components including, but not limited to buttons, forms, and messages. Typically appears paired with Body Medium text. */
export const sizeImageIconUtilityMedium = "1.50rem";
/* Use 2rem (32px) for actions inside of navigation menus on mobile devices. Also used when appearing to the left of Body Large text. */
export const sizeImageIconUtilityLarge = "2.00rem";
/* Use 3rem (48px) for display purposes. Use in moderation. If you would like a visual aid larger than this size, consider an accent icon. */
export const sizeImageIconUtilityExtraLarge = "3.00rem";
/* Deprecated. Use utility-extra-large. */
export const sizeImageIconDisplay = "3.00rem";
/* Use icons at 48px by 48px for linear list or grids. */
export const sizeImageIconAccentSmall = "3.00rem";
/* Use icons at 96px by 96px when a use case calls for a medium size. */
export const sizeImageIconAccentMedium = "6.00rem";
/* Use icons at 144px by 144px for onboarding screens and landing pages. Text paired with these icons should be aligned to the center and appear above or below the icon. */
export const sizeImageIconAccentLarge = "9.00rem";
/* 80 pixels. */
export const space80 = "5.00rem";
/* 72 pixels. */
export const space72 = "4.50rem";
/* 64 pixels. */
export const space64 = "4.00rem";
/* 56 pixels. */
export const space56 = "3.50rem";
/* 48 pixels. */
export const space48 = "3.00rem";
/* 40 pixels. */
export const space40 = "2.50rem";
/* 32 pixels. */
export const space32 = "2.00rem";
/* 24 pixels. */
export const space24 = "1.50rem";
/* 16 pixels. */
export const space16 = "1.00rem";
/* 12 pixels. */
export const space12 = "0.75rem";
/* 8 pixels. */
export const space8 = "0.50rem";
/* Minor instances where optical alignment (less than the minimum 8) may be necessary so objects don't feel visually off. Restricted to use-cases identified by UX/Design. */
export const space4 = "0.25rem";
/* Horizontal spacing between the inner content and the borders of the Global Alert card. */
export const spaceAlertGlobalHorizontal = "1.00rem";
/* Default padding for cards */
export const spaceCardDefault = "1.00rem";
/* Horizontal spacing between the inner content and the borders of the Message card. */
export const spaceMessageHorizontal = "1.00rem";
/* Amount of space between message text and icon. */
export const spaceMessageBetweenTextAndIcon = "0.50rem";
/* Amount of space between message text and link. */
export const spaceMessageBetweenTextAndLink = "0.50rem";
/* Amount of space between an external link and an 'external' icon. */
export const spaceTextLinkBetweenLinkAndIcon = "0.25rem";
/* Minimum amount of space above any link (expect an 'inline' link). */
export const spaceTextLinkAbove = "0.50rem";
/* The space between the inner and outer radio button circle */
export const spaceRadioPadding = "0.125rem";
/* The space between the Toggle container border and the toggle switch. */
export const spaceTogglePadding = "0.1875rem";
/* Amount of space between Stepper input text and bottom border. */
export const spaceStepperInputPaddingBottom = "0.25rem";
/* Horizontal spacing between Stepper input and increment/decrement buttons. */
export const spaceStepperInputHorizontal = "1.00rem";
/* The horizontal padding on fields. */
export const spaceFieldPaddingHorizontal = "1.00rem";
/* The padding on a field for an icon. */
export const spaceFieldPaddingIcon = "3.00rem";
/* Static surface color. Special use-case: this color doesn't belong to any semantic group because it may be considered as the lightest option (0-weight) among any of them. */
export const surfaceColorWhite = "rgb(255, 255, 255)";
/* Default Surface (base theme choice) */
export const surfaceColorDefault50 = "rgb(248, 250, 251)";
export const surfaceColorDefault100 = "rgb(242, 244, 245)";
export const surfaceColorDefault200 = "rgb(234, 236, 237)";
/* Foundation Surface */
export const surfaceColorDefault300 = "rgb(219, 221, 222)";
export const surfaceColorDefault400 = "rgb(184, 185, 187)";
export const surfaceColorDefault500 = "rgb(153, 154, 155)";
export const surfaceColorDefault600 = "rgb(112, 113, 114)";
export const surfaceColorDefault700 = "rgb(92, 93, 95)";
export const surfaceColorDefault800 = "rgb(62, 63, 64)";
export const surfaceColorDefault900 = "rgb(29, 30, 31)";
export const surfaceColorBrand50 = "rgb(227, 242, 251)";
export const surfaceColorBrand100 = "rgb(187, 223, 246)";
export const surfaceColorBrand200 = "rgb(145, 203, 240)";
export const surfaceColorBrand300 = "rgb(102, 182, 234)";
export const surfaceColorBrand400 = "rgb(69, 167, 231)";
export const surfaceColorBrand500 = "rgb(35, 152, 228)";
export const surfaceColorBrand600 = "rgb(25, 139, 215)";
export const surfaceColorBrand700 = "rgb(11, 121, 197)";
/* Brand Surface (base theme choice) */
export const surfaceColorBrand800 = "rgb(0, 104, 179)";
export const surfaceColorBrand900 = "rgb(0, 75, 148)";
export const surfaceColorPositive50 = "rgb(233, 245, 230)";
/* Success Message */
export const surfaceColorPositive100 = "rgb(201, 231, 193)";
export const surfaceColorPositive200 = "rgb(167, 216, 153)";
export const surfaceColorPositive300 = "rgb(131, 201, 111)";
export const surfaceColorPositive400 = "rgb(103, 190, 78)";
export const surfaceColorPositive500 = "rgb(75, 178, 41)";
export const surfaceColorPositive600 = "rgb(65, 163, 32)";
export const surfaceColorPositive700 = "rgb(52, 145, 19)";
/* Positive Surface (base theme choice) */
export const surfaceColorPositive800 = "rgb(37, 128, 3)";
export const surfaceColorPositive900 = "rgb(0, 98, 0)";
export const surfaceColorNeutral50 = "rgb(227, 242, 251)";
/* Info Message */
export const surfaceColorNeutral100 = "rgb(187, 223, 246)";
export const surfaceColorNeutral200 = "rgb(145, 203, 240)";
export const surfaceColorNeutral300 = "rgb(102, 182, 234)";
export const surfaceColorNeutral400 = "rgb(69, 167, 231)";
export const surfaceColorNeutral500 = "rgb(35, 152, 228)";
export const surfaceColorNeutral600 = "rgb(25, 139, 215)";
export const surfaceColorNeutral700 = "rgb(11, 121, 197)";
/* Neutral Surface (base theme choice) */
export const surfaceColorNeutral800 = "rgb(0, 104, 179)";
export const surfaceColorNeutral900 = "rgb(0, 75, 148)";
export const surfaceColorNegative50 = "rgb(255, 234, 236)";
/* Error Message */
export const surfaceColorNegative100 = "rgb(255, 202, 205)";
export const surfaceColorNegative200 = "rgb(237, 149, 144)";
export const surfaceColorNegative300 = "rgb(226, 107, 102)";
export const surfaceColorNegative400 = "rgb(233, 73, 63)";
export const surfaceColorNegative500 = "rgb(236, 57, 32)";
export const surfaceColorNegative600 = "rgb(222, 44, 33)";
export const surfaceColorNegative700 = "rgb(204, 33, 28)";
/* Negative Surface (base theme choice) */
export const surfaceColorNegative800 = "rgb(192, 26, 20)";
export const surfaceColorNegative900 = "rgb(177, 3, 5)";
export const surfaceColorSpecial50 = "rgb(244, 228, 249)";
export const surfaceColorSpecial100 = "rgb(226, 189, 241)";
export const surfaceColorSpecial200 = "rgb(207, 144, 233)";
export const surfaceColorSpecial300 = "rgb(187, 98, 224)";
export const surfaceColorSpecial400 = "rgb(172, 59, 217)";
export const surfaceColorSpecial500 = "rgb(156, 0, 209)";
export const surfaceColorSpecial600 = "rgb(140, 4, 203)";
export const surfaceColorSpecial700 = "rgb(117, 5, 196)";
/* Special Surface (base theme choice) */
export const surfaceColorSpecial800 = "rgb(95, 5, 190)";
export const surfaceColorSpecial900 = "rgb(40, 5, 181)";
export const surfaceColorCallout50 = "rgb(255, 248, 225)";
/* Warning Message */
export const surfaceColorCallout100 = "rgb(255, 235, 178)";
export const surfaceColorCallout200 = "rgb(255, 223, 129)";
export const surfaceColorCallout300 = "rgb(255, 212, 77)";
export const surfaceColorCallout400 = "rgb(255, 200, 37)";
/* Callout Surface (base theme choice) */
export const surfaceColorCallout500 = "rgb(255, 191, 0)";
export const surfaceColorCallout600 = "rgb(255, 177, 0)";
export const surfaceColorCallout700 = "rgb(255, 158, 0)";
export const surfaceColorCallout800 = "rgb(255, 141, 0)";
export const surfaceColorCallout900 = "rgb(255, 109, 0)";
/* When a product has a sale or a fee has a waiver, we strike-through the original listed price shown. */
export const textDecorationTextStruck = "line-through";
/* All links except 'Implied' links are underlined. */
export const textDecorationTextLink = "underline";
/* Implied links are not underlined. */
export const textDecorationTextLinkImplied = "none";