{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Workspace\\\\React\\\\status-viewer\\\\src\\\\components\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Table } from \"semantic-ui-react\";\nimport \"../resultsGrid.css\";\nimport \"kds-react/kds-reset.css\";\nimport \"kds-react/kds-styles.css\";\nimport \"kds-react/kds-utils.css\";\nimport service from \"../apis/service\";\n\nconst Grid = props => {\n  _s();\n\n  const first = \"<<\";\n  const back = \"<\";\n  const next = \">\";\n  const last = \">>\";\n  let backButton = null;\n  let firstButton = null;\n  let lastPageBtn = null;\n  let nextButton = null;\n  let pgLast = '';\n  let perPageItems = \"\";\n  let totalPages = ''; // const initialPage = useRef(1);\n\n  const [gridData, setGridData] = useState(null);\n  const [gridHook, setGridHook] = useState({});\n  const [activePage, setActivePage] = useState(\"1\"); //const activePageRef= useRef(1);\n  //   activePageRef.current = activePage;\n  //const [pgNbr, setPgNbr] = useState(1);\n\n  const [loading, setLoading] = useState(false);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  if (gridData !== null && gridData.totalPages !== '') {\n    totalPages = gridData.totalPages;\n  }\n\n  useEffect(() => {\n    setGridHook({ ...props.girdJson\n    });\n  }, [props.girdJson]); // useEffect(() =>{\n  //    console.log(\"useeffectactivepage\",activePage)\n  //  },[activePage])\n  //let textInput = React.createRef();\n\n  useEffect(() => {\n    setPostsPerPage(postsPerPage);\n  }, [postsPerPage]);\n  useEffect(() => {\n    console.log(\"In use effect setting the hook\");\n    console.log(gridHook);\n\n    const fetchPosts = async () => {\n      // setLoading(true);\n      const response = await service.post('/hierarchyRoles', gridHook);\n      console.log(\"response\", response);\n      setGridData(response.data);\n      setActivePage(response.data.pageRequest.pageNumber);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, [gridHook]); //console.log(\"gridData\",gridData.totalElements)\n\n  const changePage = direction => {\n    if (direction === 'back') {\n      setActivePage(activePage - 1);\n    } else if (direction === 'next') {\n      setActivePage(activePage + 1);\n    } else if (direction === 'first') {\n      setActivePage(1);\n    } else if (direction === 'last') {\n      setActivePage(Math.ceil(gridData.totalPages));\n    }\n\n    console.log(\"activepageref\", activePage);\n    setTimeout(function () {\n      console.log(\"activepageref in set timeout\", activePage);\n      let pageRequestDirect = {\n        \"pageNumber\": activePage,\n        \"pageSize\": postsPerPage\n      };\n      setGridHook({ ...gridHook,\n        pageRequest: pageRequestDirect\n      });\n    }.bind(this), 9000);\n  };\n\n  const pageSelectHandler = e => {\n    console.log(\"e.target.value\", e.target.value);\n    console.log(\"gridHook.pageRequest.pageNumber\", postsPerPage); // console.log(\"gridData.totalPages\",gridData.totalPages);\n\n    pgLast = gridData.totalPages;\n    console.log(\"lastpg\", pgLast);\n    console.log(\"gridData.totalElements\", gridData.totalElements);\n\n    if (e.target.value > pgLast) {\n      console.log(\"if pagesekect\");\n      setActivePage(1);\n    } else if (e.target.value <= pgLast) {\n      console.log(\"pageselect else if\");\n      setActivePage(e.target.value);\n    }\n\n    let pageRequestSelect = {\n      \"pageNumber\": e.target.value,\n      \"pageSize\": postsPerPage\n    };\n    setGridHook({ ...gridHook,\n      pageRequest: pageRequestSelect\n    }); // if(e.target.value > pgLast){\n    //     console.log(\"if pagesekect\")\n    //     setActivePage(1);\n    // }\n    // else if (activePage<= pgLast) {\n\n    console.log(\"pageselect else if\", e.target.value);\n    setActivePage(e.target.value); //}\n    //props.gridJson.pageRequest.pageNumber === activePage\n    //fetchPo\n\n    console.log(\"gridData.totalElements\", gridData.totalElements);\n  };\n\n  const itemsPerPageHandler = e => {\n    console.log(\"activePage\", activePage);\n\n    if (activePage > totalPages) {\n      //setPgNbr(1);\n      setActivePage(1);\n    } else {\n      //setPgNbr(activePage)\n      console.log(\"else\");\n      setActivePage(activePage);\n    } //console.log(\"pgnbr\",pgNbr)\n\n\n    console.log(\"pgLast\", totalPages);\n    console.log(e.target.value); //perPageItems = e.target.value;\n\n    setPostsPerPage(e.target.value); //console.log(\"postsperpage\",postsPerPage);\n\n    let pageRequest = {\n      \"pageNumber\": activePage,\n      \"pageSize\": e.target.value\n    };\n    setGridHook({ ...gridHook,\n      pageRequest: pageRequest\n    });\n  };\n\n  if (activePage > 1) {\n    backButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => changePage('back'),\n        children: back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 22\n    }, this);\n    firstButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => changePage('first'),\n        children: first\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }, this);\n  } else {\n    backButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: event => event.preventDefault(),\n        children: back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 22\n    }, this);\n    firstButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: event => event.preventDefault(),\n        children: first\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }, this);\n  }\n\n  if (gridData !== null && gridData.totalElements - 1 > activePage * gridData.numberOfElements) {\n    nextButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => changePage('next'),\n        children: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 22\n    }, this);\n    lastPageBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => changePage('last'),\n        children: last\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }, this);\n  } else {\n    nextButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: event => event.preventDefault(),\n        children: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 22\n    }, this);\n    lastPageBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: event => event.preventDefault(),\n        children: last\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.girdJson !== null && gridData !== null && gridData.results.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Published GTIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Inner Pack Item ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Sales Variant (SV) Item ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Item Hierarchy Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Role Update Date and Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Venus Reason Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Venus IMF Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: gridData.results.map(post => {\n          return /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.publishedGtin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.innerPackItemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.salesVariantItemIdList.join(',')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.itemHierarchyStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.roleUpdateDateAndTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.venusReasonCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.venusImfNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this) : null, props.girdJson !== null && gridData !== null && gridData.results.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footerTitle\",\n      children: [\"Items/Page\", /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"itemPage\",\n        type: \"search\",\n        name: \"operators111\",\n        id: \"operators111\",\n        onChange: itemsPerPageHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"10\",\n          selected: true,\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"20\",\n          value: \"20\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"50\",\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"100\",\n          value: \"100\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this), firstButton, backButton, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"pg-txt\",\n        value: activePage,\n        onChange: e => pageSelectHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), \" of \", totalPages, nextButton, lastPageBtn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Grid, \"awYIKeZ8O/hrTiNkl7qISYIacek=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Workspace/React/status-viewer/src/components/Grid.js"],"names":["React","useState","useEffect","useRef","Table","service","Grid","props","first","back","next","last","backButton","firstButton","lastPageBtn","nextButton","pgLast","perPageItems","totalPages","gridData","setGridData","gridHook","setGridHook","activePage","setActivePage","loading","setLoading","postsPerPage","setPostsPerPage","girdJson","console","log","fetchPosts","response","post","data","pageRequest","pageNumber","changePage","direction","Math","ceil","setTimeout","pageRequestDirect","bind","pageSelectHandler","e","target","value","totalElements","pageRequestSelect","itemsPerPageHandler","event","preventDefault","numberOfElements","results","length","map","publishedGtin","innerPackItemId","salesVariantItemIdList","join","itemHierarchyStatus","roleUpdateDateAndTime","venusReasonCode","venusImfNumber"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport {Table} from \"semantic-ui-react\";\r\nimport \"../resultsGrid.css\"\r\nimport \"kds-react/kds-reset.css\"\r\nimport \"kds-react/kds-styles.css\"\r\nimport \"kds-react/kds-utils.css\"\r\nimport service from \"../apis/service\";\r\n\r\nconst Grid = (props) => {\r\n\r\n    const first = \"<<\";\r\n    const back = \"<\";\r\n    const next = \">\";\r\n    const last = \">>\";\r\n    let backButton = null;\r\n    let firstButton = null;\r\n    let lastPageBtn = null;\r\n    let nextButton = null;\r\n    let pgLast = '';\r\n    let perPageItems = \"\";\r\n    let totalPages = ''\r\n    // const initialPage = useRef(1);\r\n    const [gridData, setGridData] = useState(null);\r\n    const [gridHook, setGridHook] = useState({});\r\n    const [activePage, setActivePage] = useState(\"1\");\r\n    //const activePageRef= useRef(1);\r\n    //   activePageRef.current = activePage;\r\n    //const [pgNbr, setPgNbr] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n    if(gridData !== null && gridData.totalPages !== ''){\r\n        totalPages = gridData.totalPages;\r\n    }\r\n\r\n    useEffect(() =>{\r\n        setGridHook({...props.girdJson})\r\n    },[props.girdJson])\r\n\r\n// useEffect(() =>{\r\n//    console.log(\"useeffectactivepage\",activePage)\r\n//  },[activePage])\r\n//let textInput = React.createRef();\r\n    useEffect(() =>{\r\n        setPostsPerPage(postsPerPage)\r\n    },[postsPerPage])\r\n    useEffect(() => {\r\n\r\n        console.log(\"In use effect setting the hook\")\r\n        console.log(gridHook)\r\n\r\n        const fetchPosts = async () => {\r\n            // setLoading(true);\r\n            const response = await service.post('/hierarchyRoles', gridHook);\r\n            console.log(\"response\",response)\r\n            setGridData(response.data)\r\n            setActivePage(response.data.pageRequest.pageNumber);\r\n            setLoading(false);\r\n        }\r\n        fetchPosts();\r\n\r\n    }, [gridHook]);\r\n\r\n    //console.log(\"gridData\",gridData.totalElements)\r\n\r\n    const changePage = (direction) => {\r\n        if (direction === 'back') {\r\n            setActivePage(activePage - 1)\r\n        } else if (direction === 'next') {\r\n            setActivePage(activePage + 1)\r\n        } else if (direction === 'first') {\r\n            setActivePage(1)\r\n        } else if (direction === 'last') {\r\n            setActivePage(Math.ceil(gridData.totalPages))\r\n        }\r\n        console.log(\"activepageref\",activePage)\r\n        setTimeout(\r\n\r\n            function() {\r\n                console.log(\"activepageref in set timeout\",activePage)\r\n                let pageRequestDirect= {\r\n                    \"pageNumber\": activePage,\r\n                    \"pageSize\": postsPerPage\r\n                }\r\n                setGridHook({...gridHook,pageRequest:pageRequestDirect});\r\n            }\r\n                .bind(this),\r\n            9000\r\n        );\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const pageSelectHandler = (e) =>{\r\n        console.log(\"e.target.value\",e.target.value);\r\n        console.log(\"gridHook.pageRequest.pageNumber\",postsPerPage)\r\n        // console.log(\"gridData.totalPages\",gridData.totalPages);\r\n        pgLast = gridData.totalPages;\r\n        console.log(\"lastpg\",pgLast);\r\n        console.log(\"gridData.totalElements\",gridData.totalElements);\r\n        if(e.target.value > pgLast){\r\n            console.log(\"if pagesekect\")\r\n            setActivePage(1);\r\n        }\r\n        else if (e.target.value<= pgLast) {\r\n            console.log(\"pageselect else if\")\r\n            setActivePage(e.target.value);\r\n        }\r\n\r\n        let pageRequestSelect= {\r\n            \"pageNumber\": e.target.value,\r\n            \"pageSize\": postsPerPage\r\n        }\r\n        setGridHook({...gridHook,pageRequest:pageRequestSelect});\r\n// if(e.target.value > pgLast){\r\n//     console.log(\"if pagesekect\")\r\n//     setActivePage(1);\r\n// }\r\n// else if (activePage<= pgLast) {\r\n        console.log(\"pageselect else if\",e.target.value )\r\n        setActivePage(e.target.value);\r\n//}\r\n        //props.gridJson.pageRequest.pageNumber === activePage\r\n        //fetchPo\r\n        console.log(\"gridData.totalElements\",gridData.totalElements);\r\n    }\r\n\r\n    const itemsPerPageHandler =(e)=>{\r\n        console.log(\"activePage\",activePage)\r\n        if(activePage > totalPages){\r\n            //setPgNbr(1);\r\n            setActivePage(1);\r\n        }else{\r\n            //setPgNbr(activePage)\r\n            console.log(\"else\")\r\n            setActivePage(activePage);\r\n        }\r\n\r\n        //console.log(\"pgnbr\",pgNbr)\r\n        console.log(\"pgLast\",totalPages)\r\n        console.log(e.target.value);\r\n        //perPageItems = e.target.value;\r\n        setPostsPerPage(e.target.value);\r\n\r\n        //console.log(\"postsperpage\",postsPerPage);\r\n        let pageRequest= {\r\n            \"pageNumber\": activePage,\r\n            \"pageSize\": e.target.value\r\n        }\r\n        setGridHook({...gridHook,pageRequest:pageRequest});\r\n    }\r\n\r\n    if (activePage > 1) {\r\n        backButton = <li><a onClick={() => changePage('back')}>{back}</a></li>\r\n        firstButton = <li><a onClick={() => changePage('first')}>{first}</a></li>\r\n    }else {\r\n        backButton = <li><a onClick={ (event) => event.preventDefault()} >{back}</a></li>\r\n        firstButton = <li><a onClick={ (event) => event.preventDefault()}>{first}</a></li>\r\n    }\r\n    if (gridData !== null && gridData.totalElements - 1 > activePage * gridData.numberOfElements) {\r\n        nextButton = <li><a onClick={() => changePage('next')}>{next}</a></li>\r\n        lastPageBtn = <li><a onClick={() => changePage('last')}>{last}</a></li>\r\n    }else {\r\n        nextButton = <li><a onClick={ (event) => event.preventDefault()}>{next}</a></li>\r\n        lastPageBtn = <li><a onClick={ (event) => event.preventDefault()}>{last}</a></li>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(props.girdJson !== null && gridData !== null && gridData.results.length > 0) ?\r\n\r\n                <Table>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Published GTIN</Table.HeaderCell>\r\n                            <Table.HeaderCell>Inner Pack Item ID</Table.HeaderCell>\r\n                            <Table.HeaderCell>Sales Variant (SV) Item ID</Table.HeaderCell>\r\n                            <Table.HeaderCell>Item Hierarchy Status</Table.HeaderCell>\r\n                            <Table.HeaderCell>Role Update Date and Time</Table.HeaderCell>\r\n                            <Table.HeaderCell>Venus Reason Code</Table.HeaderCell>\r\n                            <Table.HeaderCell>Venus IMF Number</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        {gridData.results.map((post) => {\r\n                            return (\r\n                                <Table.Row>\r\n                                    <Table.Cell>{post.publishedGtin}</Table.Cell>\r\n                                    <Table.Cell>{post.innerPackItemId}</Table.Cell>\r\n                                    <Table.Cell>{post.salesVariantItemIdList.join(',')}</Table.Cell>\r\n                                    <Table.Cell>{post.itemHierarchyStatus}</Table.Cell>\r\n                                    <Table.Cell>{post.roleUpdateDateAndTime}</Table.Cell>\r\n                                    <Table.Cell>{post.venusReasonCode}</Table.Cell>\r\n                                    <Table.Cell>{post.venusImfNumber}</Table.Cell>\r\n                                </Table.Row>\r\n                            )\r\n                        })\r\n                        }\r\n                    </Table.Body>\r\n                </Table>\r\n                : null\r\n            }\r\n\r\n            {(props.girdJson !== null && gridData !== null && gridData.results.length > 0) ?\r\n                <div className=\"footerTitle\">\r\n                    Items/Page\r\n                    <select className=\"itemPage\" type=\"search\" name=\"operators111\" id=\"operators111\" onChange={itemsPerPageHandler}>\r\n                        <option id=\"10\" selected value=\"10\">10</option>\r\n                        <option id=\"20\" value=\"20\">20</option>\r\n                        <option id=\"50\" value=\"50\">50</option>\r\n                        <option id=\"100\" value=\"100\">100</option>\r\n                    </select>\r\n                    {firstButton}\r\n                    {backButton}\r\n                    <input type='text' className=\"pg-txt\" value={activePage} onChange={(e)=>pageSelectHandler(e)} /> of {totalPages}\r\n                    {nextButton}\r\n                    {lastPageBtn}\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Grid;"]},"metadata":{},"sourceType":"module"}