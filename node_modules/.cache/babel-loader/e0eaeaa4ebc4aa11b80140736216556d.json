{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Workspace\\\\React\\\\status-viewer\\\\src\\\\components\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table } from \"semantic-ui-react\";\nimport \"../resultsGrid.css\";\nimport \"kds-react/kds-reset.css\";\nimport \"kds-react/kds-styles.css\";\nimport \"kds-react/kds-utils.css\";\nimport axios from 'axios';\nimport service from \"../apis/service\";\n\nconst Grid = props => {\n  _s();\n\n  const first = \"<<\";\n  const back = \"<\";\n  const next = \">\";\n  const last = \">>\";\n  let backButton = null;\n  let firstButton = null;\n  let lastPageBtn = null;\n  let nextButton = null;\n  console.log(\"In Grid\");\n  console.log(props.girdJson);\n  const [gridData, setGridData] = useState([]);\n  const [gridJsonHook, setGridJsonHook] = useState(null);\n  useEffect(() => {\n    axios.post(\"https://eis-hierarchy-status-service-dev.cfcdcinternaltest.kroger.com/hierarchyRoles\", props.girdJson).then(response => {\n      setGridData(response.data);\n      console.log(\"RESPONSE from display\", response.data);\n      console.log(\"Grid data\");\n      console.log(gridData);\n      console.log(\"Grid data total elements\");\n      console.log(gridData.numberOfElements);\n    });\n  }, [props.girdJson]);\n  /*    const changePage= (direction) => {\r\n          if (direction === 'back') {\r\n              setActivePage(activePage - 1)\r\n          }\r\n          else if (direction === 'next') {\r\n              setActivePage(activePage + 1)\r\n          }\r\n          else if (direction === 'first') {\r\n              setActivePage(1)\r\n          }\r\n          else if (direction === 'last') {\r\n              setActivePage(Math.ceil(posts.length/postsPerPage))\r\n          }\r\n        }\r\n        if(activePage > 1){\r\n            backButton =  <li><a onClick={() => changePage('back')}>{back}</a></li>\r\n          firstButton =<li><a onClick={() => changePage('first')}>{first}</a></li>\r\n      }\r\n      if( totalPosts -1 > activePage * postsPerPage){\r\n          nextButton =<li><a onClick={() => changePage('next')} >{next}</a></li>\r\n          lastPageBtn = <li><a onClick={() => changePage('last')}>{last}</a></li>\r\n      }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Grid, \"bXIvy9Keeo6ofU06TUnqmr/Ck7g=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Workspace/React/status-viewer/src/components/Grid.js"],"names":["React","useState","useEffect","Table","axios","service","Grid","props","first","back","next","last","backButton","firstButton","lastPageBtn","nextButton","console","log","girdJson","gridData","setGridData","gridJsonHook","setGridJsonHook","post","then","response","data","numberOfElements"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,OAAO,oBAAP;AACA,OAAO,yBAAP;AACA,OAAO,0BAAP;AACA,OAAO,yBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAMC,KAAK,GAAG,IAAd;AACA,QAAMC,IAAI,GAAG,GAAb;AACA,QAAMC,IAAI,GAAG,GAAb;AACA,QAAMC,IAAI,GAAG,IAAb;AACA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,WAAW,GAAG,IAAlB;AACA,MAAIC,WAAW,GAAG,IAAlB;AACA,MAAIC,UAAU,GAAG,IAAjB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,QAAlB;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,IAAD,CAAhD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AAEZE,IAAAA,KAAK,CAACmB,IAAN,CAAY,sFAAZ,EAAoGhB,KAAK,CAACW,QAA1G,EAAoHM,IAApH,CAA0HC,QAAD,IAAa;AAClIL,MAAAA,WAAW,CAACK,QAAQ,CAACC,IAAV,CAAX;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCQ,QAAQ,CAACC,IAA9C;AAEAV,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACQ,gBAArB;AACH,KATD;AAWH,GAbQ,EAaN,CAACpB,KAAK,CAACW,QAAP,CAbM,CAAT;AAcA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMI,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CA5GD;;GAAMZ,I;;KAAAA,I;AA8GN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Table} from \"semantic-ui-react\";\r\nimport \"../resultsGrid.css\"\r\nimport \"kds-react/kds-reset.css\"\r\nimport \"kds-react/kds-styles.css\"\r\nimport \"kds-react/kds-utils.css\"\r\nimport axios from 'axios'\r\nimport service from \"../apis/service\";\r\n\r\nconst Grid = (props) => {\r\n\r\n    const first = \"<<\";\r\n    const back = \"<\";\r\n    const next = \">\";\r\n    const last = \">>\";\r\n    let backButton = null;\r\n    let firstButton = null;\r\n    let lastPageBtn = null;\r\n    let nextButton = null;\r\n\r\n    console.log(\"In Grid\")\r\n    console.log(props.girdJson)\r\n\r\n    const [gridData, setGridData] = useState([]);\r\n    const [gridJsonHook, setGridJsonHook] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios.post (\"https://eis-hierarchy-status-service-dev.cfcdcinternaltest.kroger.com/hierarchyRoles\", props.girdJson).then((response)=> {\r\n            setGridData(response.data)\r\n            console.log(\"RESPONSE from display\", response.data)\r\n\r\n            console.log(\"Grid data\")\r\n            console.log(gridData)\r\n\r\n            console.log(\"Grid data total elements\")\r\n            console.log(gridData.numberOfElements)\r\n        } );\r\n\r\n    }, [props.girdJson]);\r\n    /*    const changePage= (direction) => {\r\n            if (direction === 'back') {\r\n                setActivePage(activePage - 1)\r\n            }\r\n            else if (direction === 'next') {\r\n                setActivePage(activePage + 1)\r\n            }\r\n            else if (direction === 'first') {\r\n                setActivePage(1)\r\n            }\r\n            else if (direction === 'last') {\r\n                setActivePage(Math.ceil(posts.length/postsPerPage))\r\n            }\r\n\r\n        }\r\n\r\n        if(activePage > 1){\r\n\r\n            backButton =  <li><a onClick={() => changePage('back')}>{back}</a></li>\r\n            firstButton =<li><a onClick={() => changePage('first')}>{first}</a></li>\r\n        }\r\n        if( totalPosts -1 > activePage * postsPerPage){\r\n            nextButton =<li><a onClick={() => changePage('next')} >{next}</a></li>\r\n            lastPageBtn = <li><a onClick={() => changePage('last')}>{last}</a></li>\r\n        }*/\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*<Table singleLine>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Published GTIN</Table.HeaderCell>\r\n                        <Table.HeaderCell>Inner Pack Item ID</Table.HeaderCell>\r\n                        <Table.HeaderCell>Sales Variant (SV) Item ID</Table.HeaderCell>\r\n                        <Table.HeaderCell>Item Hierarchy Status</Table.HeaderCell>\r\n                        <Table.HeaderCell>Role Update Date and Time</Table.HeaderCell>\r\n                        <Table.HeaderCell>Venus Reason Code</Table.HeaderCell>\r\n                        <Table.HeaderCell>Venus IMF Number</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n\r\n                    {gridData.results !== null ?gridData.results.map((post) => {\r\n                        return (\r\n                            <Table.Row>\r\n                                <Table.Cell>{post.publishedGtin}</Table.Cell>\r\n                                <Table.Cell>{post.innerPackItemId}</Table.Cell>\r\n                                <Table.Cell>{post.salesVariantItemIdList.join(',')}</Table.Cell>\r\n                                <Table.Cell>{post.itemHierarchyStatus}</Table.Cell>\r\n                                <Table.Cell>{post.roleUpdateDateAndTime}</Table.Cell>\r\n                                <Table.Cell>{post.venusReasonCode}</Table.Cell>\r\n                                <Table.Cell>{post.venusImfNumber}</Table.Cell>\r\n                            </Table.Row>\r\n                        )\r\n                    }) : null\r\n                    }\r\n                </Table.Body>\r\n            </Table>*/}\r\n            {/*            <div className=\"footerTitle\">\r\n                Items/Page\r\n                <select className=\"itemPage\" type=\"search\" name=\"operators111\" id=\"operators111\">\r\n                    <option id=\"10\" selected value=\"10\">10</option>\r\n                    <option id=\"20\" value=\"20\">20</option>\r\n                    <option id=\"50\" value=\"50\">50</option>\r\n                    <option id=\"100\" value=\"100\">100</option>\r\n                </select>\r\n                {firstButton}\r\n                {backButton}\r\n                Page 1 of 157\r\n                {nextButton}\r\n                {lastPageBtn}\r\n            </div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Grid;"]},"metadata":{},"sourceType":"module"}