{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Workspace\\\\React\\\\status-viewer\\\\src\\\\components\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table } from \"semantic-ui-react\";\nimport \"../resultsGrid.css\";\nimport \"kds-react/kds-reset.css\";\nimport \"kds-react/kds-styles.css\";\nimport \"kds-react/kds-utils.css\";\nimport service from \"../apis/service\";\n\nconst Grid = props => {\n  _s();\n\n  const first = \"<<\";\n  const back = \"<\";\n  const next = \">\";\n  const last = \">>\";\n  let backButton = null;\n  let firstButton = null;\n  let lastPageBtn = null;\n  let nextButton = null;\n  let pgLast = '';\n  const [gridData, setGridData] = useState(null);\n  const [gridHook, setGridHook] = useState({});\n  const [activePage, setActivePage] = useState(null);\n  const [pgNbr, setPgNbr] = useState(1);\n  useEffect(() => {\n    setGridHook({ ...props.girdJson\n    });\n    console.log(\"In use effect setting the hook\");\n    console.log(gridHook);\n\n    const fetchPosts = async () => {\n      const response = await service.post('/hierarchyRoles', props.girdJson);\n      setGridData(response.data);\n      setPgNbr(response.data.pageRequest.pageNumber);\n    };\n\n    fetchPosts();\n  }, [props.girdJson]);\n\n  const changePage = direction => {\n    if (direction === 'back') {\n      setActivePage(activePage - 1);\n    } else if (direction === 'next') {\n      setActivePage(activePage + 1);\n    } else if (direction === 'first') {\n      setActivePage(1);\n    } else if (direction === 'last') {\n      setActivePage(Math.ceil(gridData.totalPages / gridData.numberOfElements));\n    }\n\n    if (activePage > 1) {\n      backButton = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => changePage('back'),\n          children: back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }, this);\n      firstButton = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => changePage('first'),\n          children: first\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this);\n    }\n\n    if (gridData.totalElements - 1 > activePage * gridData.numberOfElements) {\n      nextButton = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => changePage('next'),\n          children: next\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }, this);\n      lastPageBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => changePage('last'),\n          children: last\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this);\n    }\n  };\n\n  const pageSelectHandler = e => {\n    console.log(\"e.target.value\", e.target.value);\n    setPgNbr(e.target.value);\n    pgLast = gridData.totalPages;\n\n    if (pgNbr > pgLast) {\n      setPgNbr(1);\n      setActivePage(1);\n    }\n\n    if (gridData.totalElements > 0 && pgNbr <= pgLast) {\n      setActivePage(pgNbr);\n    } //props.gridJson.pageRequest.pageNumber === activePage\n    //fetchPo\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.girdJson !== null && gridData !== null && gridData.results.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      singleLine: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Published GTIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Inner Pack Item ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Sales Variant (SV) Item ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Item Hierarchy Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Role Update Date and Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Venus Reason Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Venus IMF Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: gridData.results.map(post => {\n          return /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.publishedGtin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.innerPackItemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.salesVariantItemIdList.join(',')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.itemHierarchyStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.roleUpdateDateAndTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.venusReasonCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.venusImfNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this) : null, props.girdJson !== null && gridData !== null && gridData.results.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footerTitle\",\n      children: [\"Items/Page\", /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"itemPage\",\n        type: \"search\",\n        name: \"operators111\",\n        id: \"operators111\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"10\",\n          selected: true,\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"20\",\n          value: \"20\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"50\",\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"100\",\n          value: \"100\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), firstButton, backButton, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"pg-txt\",\n        value: pgNbr,\n        onChange: pageSelectHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), \" of \", gridData.totalPages, nextButton, lastPageBtn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Grid, \"pch0iqaaoZf8TtWrYg5dArq8COk=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Workspace/React/status-viewer/src/components/Grid.js"],"names":["React","useState","useEffect","Table","service","Grid","props","first","back","next","last","backButton","firstButton","lastPageBtn","nextButton","pgLast","gridData","setGridData","gridHook","setGridHook","activePage","setActivePage","pgNbr","setPgNbr","girdJson","console","log","fetchPosts","response","post","data","pageRequest","pageNumber","changePage","direction","Math","ceil","totalPages","numberOfElements","totalElements","pageSelectHandler","e","target","value","results","length","map","publishedGtin","innerPackItemId","salesVariantItemIdList","join","itemHierarchyStatus","roleUpdateDateAndTime","venusReasonCode","venusImfNumber"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Table} from \"semantic-ui-react\";\r\nimport \"../resultsGrid.css\"\r\nimport \"kds-react/kds-reset.css\"\r\nimport \"kds-react/kds-styles.css\"\r\nimport \"kds-react/kds-utils.css\"\r\nimport service from \"../apis/service\";\r\n\r\nconst Grid = (props) => {\r\n\r\n    const first = \"<<\";\r\n    const back = \"<\";\r\n    const next = \">\";\r\n    const last = \">>\";\r\n    let backButton = null;\r\n    let firstButton = null;\r\n    let lastPageBtn = null;\r\n    let nextButton = null;\r\n    let pgLast = ''\r\n\r\n\r\n    const [gridData, setGridData] = useState(null);\r\n    const [gridHook, setGridHook] = useState({});\r\n    const [activePage, setActivePage] = useState(null);\r\n    const [pgNbr, setPgNbr] = useState(1);\r\n\r\n    useEffect(() => {\r\n\r\n        setGridHook({...props.girdJson})\r\n        console.log(\"In use effect setting the hook\")\r\n        console.log(gridHook)\r\n\r\n        const fetchPosts = async () => {\r\n            const response = await service.post('/hierarchyRoles', props.girdJson);\r\n            setGridData(response.data)\r\n            setPgNbr(response.data.pageRequest.pageNumber)\r\n        }\r\n        fetchPosts();\r\n\r\n    }, [props.girdJson]);\r\n\r\n    const changePage = (direction) => {\r\n        if (direction === 'back') {\r\n            setActivePage(activePage - 1)\r\n        } else if (direction === 'next') {\r\n            setActivePage(activePage + 1)\r\n        } else if (direction === 'first') {\r\n            setActivePage(1)\r\n        } else if (direction === 'last') {\r\n            setActivePage(Math.ceil(gridData.totalPages / gridData.numberOfElements))\r\n        }\r\n\r\n        if (activePage > 1) {\r\n            backButton = <li><a onClick={() => changePage('back')}>{back}</a></li>\r\n            firstButton = <li><a onClick={() => changePage('first')}>{first}</a></li>\r\n        }\r\n        if (gridData.totalElements - 1 > activePage * gridData.numberOfElements) {\r\n            nextButton = <li><a onClick={() => changePage('next')}>{next}</a></li>\r\n            lastPageBtn = <li><a onClick={() => changePage('last')}>{last}</a></li>\r\n        }\r\n    }\r\n\r\n    const pageSelectHandler = (e) =>{\r\n\r\n        console.log(\"e.target.value\",e.target.value);\r\n        setPgNbr(e.target.value);\r\n        pgLast = gridData.totalPages;\r\n\r\n        if(pgNbr > pgLast){\r\n            setPgNbr(1);\r\n            setActivePage(1);\r\n        }\r\n        if (gridData.totalElements > 0 && pgNbr<= pgLast) {\r\n            setActivePage(pgNbr);\r\n        }\r\n\r\n        //props.gridJson.pageRequest.pageNumber === activePage\r\n        //fetchPo\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(props.girdJson !== null && gridData !== null && gridData.results.length > 0) ?\r\n\r\n                <Table singleLine>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Published GTIN</Table.HeaderCell>\r\n                            <Table.HeaderCell>Inner Pack Item ID</Table.HeaderCell>\r\n                            <Table.HeaderCell>Sales Variant (SV) Item ID</Table.HeaderCell>\r\n                            <Table.HeaderCell>Item Hierarchy Status</Table.HeaderCell>\r\n                            <Table.HeaderCell>Role Update Date and Time</Table.HeaderCell>\r\n                            <Table.HeaderCell>Venus Reason Code</Table.HeaderCell>\r\n                            <Table.HeaderCell>Venus IMF Number</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        {gridData.results.map((post) => {\r\n                            return (\r\n                                <Table.Row>\r\n                                    <Table.Cell>{post.publishedGtin}</Table.Cell>\r\n                                    <Table.Cell>{post.innerPackItemId}</Table.Cell>\r\n                                    <Table.Cell>{post.salesVariantItemIdList.join(',')}</Table.Cell>\r\n                                    <Table.Cell>{post.itemHierarchyStatus}</Table.Cell>\r\n                                    <Table.Cell>{post.roleUpdateDateAndTime}</Table.Cell>\r\n                                    <Table.Cell>{post.venusReasonCode}</Table.Cell>\r\n                                    <Table.Cell>{post.venusImfNumber}</Table.Cell>\r\n                                </Table.Row>\r\n                            )\r\n                        })\r\n                        }\r\n                    </Table.Body>\r\n                </Table>\r\n                : null\r\n            }\r\n\r\n            {(props.girdJson !== null && gridData !== null && gridData.results.length > 0) ?\r\n                <div className=\"footerTitle\">\r\n                    Items/Page\r\n                    <select className=\"itemPage\" type=\"search\" name=\"operators111\" id=\"operators111\">\r\n                        <option id=\"10\" selected value=\"10\">10</option>\r\n                        <option id=\"20\" value=\"20\">20</option>\r\n                        <option id=\"50\" value=\"50\">50</option>\r\n                        <option id=\"100\" value=\"100\">100</option>\r\n                    </select>\r\n                    {firstButton}\r\n                    {backButton}\r\n                    <input type='text' className=\"pg-txt\" value={pgNbr} onChange={pageSelectHandler} /> of {gridData.totalPages}\r\n                    {nextButton}\r\n                    {lastPageBtn}\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Grid;"]},"metadata":{},"sourceType":"module"}