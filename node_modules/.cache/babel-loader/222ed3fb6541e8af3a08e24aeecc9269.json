{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Workspace\\\\React\\\\status-viewer\\\\src\\\\components\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table } from \"semantic-ui-react\";\nimport \"../resultsGrid.css\";\nimport \"kds-react/kds-reset.css\";\nimport \"kds-react/kds-styles.css\";\nimport \"kds-react/kds-utils.css\";\nimport service from \"../apis/service\";\nimport NoRecordsFound from \"./NoRecordsFound\";\n\nconst Grid = props => {\n  _s();\n\n  const first = \"<<\";\n  const back = \"<\";\n  const next = \">\";\n  const last = \">>\";\n  let backButton;\n  let firstButton;\n  let lastPageBtn;\n  let nextButton;\n  let pgLast = '';\n  let totalPages = '';\n  const [gridData, setGridData] = useState(null);\n  const [gridHook, setGridHook] = useState({});\n  const [activePage, setActivePage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  if (gridData !== null && gridData.totalPages !== '') {\n    totalPages = gridData.totalPages;\n  }\n\n  useEffect(() => {\n    setGridHook({ ...props.girdJson\n    });\n  }, [props.girdJson]);\n  useEffect(() => {\n    setPostsPerPage(postsPerPage);\n  }, [postsPerPage]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await service.post('/hierarchyRoles', gridHook); //console.log(\"Grid useEffect response:\",response)\n\n      setGridData(response.data);\n      setActivePage(response.data.pageRequest.pageNumber);\n    };\n\n    fetchPosts();\n  }, [gridHook]);\n\n  const changePage = direction => {\n    let newPage = 1;\n\n    if (direction === 'back') {\n      newPage = Math.ceil(activePage - 1);\n    } else if (direction === 'next') {\n      newPage = Math.ceil(activePage + 1);\n    } else if (direction === 'first') {\n      newPage = 1;\n    } else if (direction === 'last') {\n      newPage = gridData.totalPages;\n    }\n\n    setActivePage(newPage);\n    let pageRequestChangePage = {\n      \"pageNumber\": newPage,\n      \"pageSize\": postsPerPage\n    }; //console.log(\"In changePage set timeout:: new pageRequest:\",pageRequestChangePage)\n\n    setGridHook({ ...gridHook,\n      pageRequest: pageRequestChangePage\n    });\n  };\n\n  const pageSelectHandler = e => {\n    pgLast = gridData.totalPages;\n\n    if (e.target.value > pgLast) {\n      setActivePage(1);\n    } else if (e.target.value <= pgLast) {\n      setActivePage(e.target.value);\n    }\n\n    let pageRequestSelect = {\n      \"pageNumber\": e.target.value,\n      \"pageSize\": postsPerPage\n    }; //console.log(\"In pageSelectHandler:: new pageRequest:\", pageRequestSelect)\n\n    setGridHook({ ...gridHook,\n      pageRequest: pageRequestSelect\n    });\n    setActivePage(e.target.value);\n  };\n\n  const itemsPerPageHandler = e => {\n    if (activePage > totalPages) {\n      setActivePage(1);\n    } else {\n      setActivePage(activePage);\n    }\n\n    setPostsPerPage(e.target.value);\n    let pageRequest = {\n      \"pageNumber\": activePage,\n      \"pageSize\": e.target.value\n    }; //console.log(\"itemsPerPageHandler:: new pageRequest:\", pageRequest)\n\n    setGridHook({ ...gridHook,\n      pageRequest: pageRequest\n    });\n  };\n\n  if (activePage > 1) {\n    backButton = /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => changePage('back'),\n      children: back\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 22\n    }, this);\n    firstButton = /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => changePage('first'),\n      children: first\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }, this);\n  } else {\n    backButton = /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: event => event.preventDefault(),\n      children: back\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 22\n    }, this);\n    firstButton = /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: event => event.preventDefault(),\n      children: first\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }, this);\n  }\n\n  if (gridData !== null && gridData.totalElements - 1 > activePage * gridData.numberOfElements) {\n    nextButton = /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => changePage('next'),\n      children: next\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 22\n    }, this);\n    lastPageBtn = /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => changePage('last'),\n      children: last\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }, this);\n  } else {\n    nextButton = /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: event => event.preventDefault(),\n      children: next\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 22\n    }, this);\n    lastPageBtn = /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: event => event.preventDefault(),\n      children: last\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.girdJson !== null && gridData !== null && gridData.results.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      singleLine: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            name: \"pubGtin\",\n            children: [\"Published GTIN \", /*#__PURE__*/_jsxDEV(\"svg\", {\n              focusable: \"false\",\n              fill: \"currentColor\",\n              width: \"1.2em\",\n              height: \"1.2em\",\n              viewBox: \"-2 -2 16 16\",\n              \"data-name\": \"Icon\",\n              \"data-testid\": \"sort.svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M8.003 13.992a1.171 1.171 0 01-.831-.344l-3.174-3.174a.425.425 0 11.602-.6l3.173 3.174a.326.326 0 00.46 0L11.4 9.88a.425.425 0 11.602.6l-3.168 3.168a1.171 1.171 0 01-.831.344zM4.3 6.248a.425.425 0 01-.301-.726l3.17-3.17a1.176 1.176 0 011.663 0l3.169 3.17a.425.425 0 11-.602.6L8.23 2.952a.326.326 0 00-.459 0l-3.17 3.172a.426.426 0 01-.301.124z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            className: \"idColumns\",\n            children: \"Inner Pack Item ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            className: \"idColumns\",\n            children: \"Sales Variant Item ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            className: \"statusAndTime\",\n            children: \"Item Hierarchy Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            className: \"statusAndTime\",\n            children: \"Role Update Date and Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            name: \"reasonCode\",\n            children: \"Venus Reason Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            className: \"idColumns\",\n            children: \"Venus IMF Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            name: \"version\",\n            children: [\"Version \", /*#__PURE__*/_jsxDEV(\"svg\", {\n              focusable: \"false\",\n              fill: \"currentColor\",\n              width: \"1.2em\",\n              height: \"1.2em\",\n              viewBox: \"-2 -2 16 16\",\n              \"data-name\": \"Icon\",\n              \"data-testid\": \"sort.svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M8.003 13.992a1.171 1.171 0 01-.831-.344l-3.174-3.174a.425.425 0 11.602-.6l3.173 3.174a.326.326 0 00.46 0L11.4 9.88a.425.425 0 11.602.6l-3.168 3.168a1.171 1.171 0 01-.831.344zM4.3 6.248a.425.425 0 01-.301-.726l3.17-3.17a1.176 1.176 0 011.663 0l3.169 3.17a.425.425 0 11-.602.6L8.23 2.952a.326.326 0 00-.459 0l-3.17 3.172a.426.426 0 01-.301.124z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: gridData.results.map((post, i) => {\n          return /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.publishedGtin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.innerPackItemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"salesVariant\",\n                children: post.salesVariantItemIdList.join(' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.itemHierarchyStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.roleUpdateDateAndTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.venusReasonCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.venusImfNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: post.version\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this)\n    /*If 0 results are returned, display No Records Found grid*/\n    :\n    /*#__PURE__*/\n    _jsxDEV(NoRecordsFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }, this), props.girdJson !== null && gridData !== null && gridData.results.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footerTitle\",\n      children: [\"Items/Page\", /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"itemPage\",\n        type: \"search\",\n        name: \"operators111\",\n        id: \"operators111\",\n        onChange: itemsPerPageHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"10\",\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"20\",\n          value: \"20\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"50\",\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"100\",\n          value: \"100\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), firstButton, backButton, \"Page\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"currentPage\",\n        className: \"pg-txt\",\n        value: activePage,\n        onChange: e => pageSelectHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), \" of \", totalPages, nextButton, lastPageBtn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Grid, \"e0r6ZFzaDBVYmmfbU1vowP2q4k4=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Workspace/React/status-viewer/src/components/Grid.js"],"names":["React","useState","useEffect","Table","service","NoRecordsFound","Grid","props","first","back","next","last","backButton","firstButton","lastPageBtn","nextButton","pgLast","totalPages","gridData","setGridData","gridHook","setGridHook","activePage","setActivePage","postsPerPage","setPostsPerPage","girdJson","fetchPosts","response","post","data","pageRequest","pageNumber","changePage","direction","newPage","Math","ceil","pageRequestChangePage","pageSelectHandler","e","target","value","pageRequestSelect","itemsPerPageHandler","event","preventDefault","totalElements","numberOfElements","results","length","map","i","publishedGtin","innerPackItemId","salesVariantItemIdList","join","itemHierarchyStatus","roleUpdateDateAndTime","venusReasonCode","venusImfNumber","version"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Table} from \"semantic-ui-react\";\r\nimport \"../resultsGrid.css\"\r\nimport \"kds-react/kds-reset.css\"\r\nimport \"kds-react/kds-styles.css\"\r\nimport \"kds-react/kds-utils.css\"\r\nimport service from \"../apis/service\";\r\nimport NoRecordsFound from \"./NoRecordsFound\";\r\n\r\nconst Grid = (props) => {\r\n\r\n    const first = \"<<\";\r\n    const back = \"<\";\r\n    const next = \">\";\r\n    const last = \">>\";\r\n\r\n    let backButton;\r\n    let firstButton;\r\n    let lastPageBtn;\r\n    let nextButton;\r\n    let pgLast = ''\r\n    let totalPages = ''\r\n\r\n\r\n    const [gridData, setGridData] = useState(null);\r\n    const [gridHook, setGridHook] = useState({});\r\n    const [activePage, setActivePage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n    if(gridData !== null && gridData.totalPages !== ''){\r\n        totalPages = gridData.totalPages;\r\n    }\r\n\r\n    useEffect(() =>{\r\n        setGridHook({...props.girdJson})\r\n    },[props.girdJson])\r\n\r\n    useEffect(() =>{\r\n        setPostsPerPage(postsPerPage)\r\n    },[postsPerPage])\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchPosts = async () => {\r\n            const response = await service.post('/hierarchyRoles', gridHook);\r\n            //console.log(\"Grid useEffect response:\",response)\r\n            setGridData(response.data)\r\n            setActivePage(response.data.pageRequest.pageNumber)\r\n        }\r\n        fetchPosts();\r\n\r\n    }, [gridHook]);\r\n\r\n    const changePage = (direction) => {\r\n        let newPage = 1\r\n        if (direction === 'back') {\r\n            newPage = Math.ceil(activePage - 1)\r\n        } else if (direction === 'next') {\r\n            newPage = Math.ceil(activePage + 1)\r\n        } else if (direction === 'first') {\r\n            newPage = 1\r\n        } else if (direction === 'last') {\r\n            newPage = gridData.totalPages\r\n        }\r\n        setActivePage(newPage)\r\n        let pageRequestChangePage= {\r\n            \"pageNumber\": newPage,\r\n            \"pageSize\": postsPerPage\r\n        }\r\n\r\n        //console.log(\"In changePage set timeout:: new pageRequest:\",pageRequestChangePage)\r\n        setGridHook({...gridHook,pageRequest:pageRequestChangePage});\r\n    }\r\n\r\n    const pageSelectHandler = (e) =>{\r\n        pgLast = gridData.totalPages;\r\n\r\n        if(e.target.value > pgLast){\r\n            setActivePage(1);\r\n        }\r\n        else if (e.target.value<= pgLast) {\r\n            setActivePage(e.target.value);\r\n        }\r\n\r\n        let pageRequestSelect= {\r\n            \"pageNumber\": e.target.value,\r\n            \"pageSize\": postsPerPage\r\n        }\r\n        //console.log(\"In pageSelectHandler:: new pageRequest:\", pageRequestSelect)\r\n        setGridHook({...gridHook,pageRequest:pageRequestSelect});\r\n        setActivePage(e.target.value);\r\n    }\r\n\r\n    const itemsPerPageHandler =(e)=>{\r\n        if(activePage > totalPages){\r\n            setActivePage(1);\r\n        }else{\r\n            setActivePage(activePage);\r\n        }\r\n\r\n        setPostsPerPage(e.target.value);\r\n\r\n        let pageRequest= {\r\n            \"pageNumber\": activePage,\r\n            \"pageSize\": e.target.value\r\n        }\r\n        //console.log(\"itemsPerPageHandler:: new pageRequest:\", pageRequest)\r\n        setGridHook({...gridHook,pageRequest:pageRequest});\r\n    }\r\n\r\n    if (activePage > 1) {\r\n        backButton = <p onClick={() => changePage('back')}>{back}</p>\r\n        firstButton = <p onClick={() => changePage('first')}>{first}</p>\r\n\r\n    } else {\r\n        backButton = <p onClick={ (event) => event.preventDefault()} >{back}</p>\r\n        firstButton = <p onClick={ (event) => event.preventDefault()}>{first}</p>\r\n    }\r\n    if (gridData !== null && gridData.totalElements - 1 > activePage * gridData.numberOfElements) {\r\n        nextButton = <p onClick={() => changePage('next')}>{next}</p>\r\n        lastPageBtn = <p onClick={() => changePage('last')}>{last}</p>\r\n\r\n    } else {\r\n        nextButton = <p onClick={ (event) => event.preventDefault()}>{next}</p>\r\n        lastPageBtn = <p onClick={ (event) => event.preventDefault()}>{last}</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(props.girdJson !== null && gridData !== null && gridData.results.length > 0) ?\r\n\r\n                <Table singleLine>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell name=\"pubGtin\">Published GTIN <svg\r\n                                focusable=\"false\" fill=\"currentColor\" width=\"1.2em\" height=\"1.2em\" viewBox=\"-2 -2 16 16\"\r\n                                data-name=\"Icon\" data-testid=\"sort.svg\">\r\n                                <path\r\n                                    d=\"M8.003 13.992a1.171 1.171 0 01-.831-.344l-3.174-3.174a.425.425 0 11.602-.6l3.173 3.174a.326.326 0 00.46 0L11.4 9.88a.425.425 0 11.602.6l-3.168 3.168a1.171 1.171 0 01-.831.344zM4.3 6.248a.425.425 0 01-.301-.726l3.17-3.17a1.176 1.176 0 011.663 0l3.169 3.17a.425.425 0 11-.602.6L8.23 2.952a.326.326 0 00-.459 0l-3.17 3.172a.426.426 0 01-.301.124z\"></path>\r\n                            </svg>\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell className=\"idColumns\">Inner Pack Item ID</Table.HeaderCell>\r\n                            <Table.HeaderCell className=\"idColumns\">Sales Variant Item ID</Table.HeaderCell>\r\n                            <Table.HeaderCell className=\"statusAndTime\">Item Hierarchy Status</Table.HeaderCell>\r\n                            <Table.HeaderCell className=\"statusAndTime\">Role Update Date and Time</Table.HeaderCell>\r\n                            <Table.HeaderCell name=\"reasonCode\">Venus Reason Code</Table.HeaderCell>\r\n                            <Table.HeaderCell className=\"idColumns\">Venus IMF Number</Table.HeaderCell>\r\n                            <Table.HeaderCell name=\"version\">Version <svg\r\n                                focusable=\"false\" fill=\"currentColor\" width=\"1.2em\" height=\"1.2em\" viewBox=\"-2 -2 16 16\"\r\n                                data-name=\"Icon\" data-testid=\"sort.svg\">\r\n                                <path\r\n                                    d=\"M8.003 13.992a1.171 1.171 0 01-.831-.344l-3.174-3.174a.425.425 0 11.602-.6l3.173 3.174a.326.326 0 00.46 0L11.4 9.88a.425.425 0 11.602.6l-3.168 3.168a1.171 1.171 0 01-.831.344zM4.3 6.248a.425.425 0 01-.301-.726l3.17-3.17a1.176 1.176 0 011.663 0l3.169 3.17a.425.425 0 11-.602.6L8.23 2.952a.326.326 0 00-.459 0l-3.17 3.172a.426.426 0 01-.301.124z\"></path>\r\n                            </svg></Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        {gridData.results.map((post, i) => {\r\n                            return (\r\n                                <Table.Row key={i}>\r\n                                    <Table.Cell>{post.publishedGtin}</Table.Cell>\r\n                                    <Table.Cell>{post.innerPackItemId}</Table.Cell>\r\n                                    <Table.Cell><div className=\"salesVariant\">{post.salesVariantItemIdList.join(' ')}</div></Table.Cell>\r\n                                    <Table.Cell>{post.itemHierarchyStatus}</Table.Cell>\r\n                                    <Table.Cell>{post.roleUpdateDateAndTime}</Table.Cell>\r\n                                    <Table.Cell>{post.venusReasonCode}</Table.Cell>\r\n                                    <Table.Cell>{post.venusImfNumber}</Table.Cell>\r\n                                    <Table.Cell>{post.version}</Table.Cell>\r\n                                </Table.Row>\r\n                            )\r\n                        })\r\n                        }\r\n                    </Table.Body>\r\n                </Table>\r\n                /*If 0 results are returned, display No Records Found grid*/\r\n                : <NoRecordsFound />\r\n            }\r\n\r\n            {(props.girdJson !== null && gridData !== null && gridData.results.length > 0) ?\r\n                <div className=\"footerTitle\">\r\n                    Items/Page\r\n                    <select className=\"itemPage\" type=\"search\" name=\"operators111\" id=\"operators111\" onChange={itemsPerPageHandler}>\r\n                        <option id=\"10\" value=\"10\">10</option>\r\n                        <option id=\"20\" value=\"20\">20</option>\r\n                        <option id=\"50\" value=\"50\">50</option>\r\n                        <option id=\"100\" value=\"100\">100</option>\r\n                    </select>\r\n\r\n                    {firstButton}\r\n                    {backButton}\r\n                    Page\r\n                    <input type='currentPage' className=\"pg-txt\" value={activePage} onChange={(e)=>pageSelectHandler(e)} /> of {totalPages}\r\n                    {nextButton}\r\n                    {lastPageBtn}\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Grid;"]},"metadata":{},"sourceType":"module"}