{"ast":null,"code":"/* eslint-disable */\n\n/***********************************************************************************************\n  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE\n\n  Generated on: Wed Dec 09 2020 21:14:13 GMT+0000 (Coordinated Universal Time)\n************************************************************************************************/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar _extends = _interopDefault(require('@babel/runtime/helpers/extends'));\n\nvar _objectWithoutProperties = _interopDefault(require('@babel/runtime/helpers/objectWithoutProperties'));\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar cx = _interopDefault(require('classnames'));\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar LoadingSpinner = require('../LoadingSpinner/LoadingSpinner.js');\n/** We need to instantiate kinds and buttonTypes here and reference them in\n * proptypes for react-docgen to properly build props json output.\n */\n\n\nvar kinds = ['primary', 'primary-inverse', 'secondary', 'secondary-inverse', 'tertiary', 'tertiary-inverse', 'primary-positive', 'primary-positive-inverse', 'secondary-positive', 'tertiary-positive', 'primary-negative', 'primary-negative-inverse', 'secondary-negative', 'tertiary-negative', 'cancel'];\nvar kindModifiers = {\n  primary: 'primary',\n  'primary-inverse': 'primaryInverse',\n  secondary: 'secondary',\n  'secondary-inverse': 'secondaryInverse',\n  tertiary: 'tertiary',\n  'tertiary-inverse': 'tertiaryInverse',\n  'primary-positive': 'primaryPositive',\n  'primary-positive-inverse': 'primaryPositiveInverse',\n  'secondary-positive': 'secondaryPositive',\n  'tertiary-positive': 'tertiaryPositive',\n  'primary-negative': 'primaryNegative',\n  'primary-negative-inverse': 'primaryNegativeInverse',\n  'secondary-negative': 'secondaryNegative',\n  'tertiary-negative': 'tertiaryNegative',\n  cancel: 'cancel',\n\n  /* mapping old kinds for backwards compatibility */\n  destructive: 'primaryNegative',\n  'destructive-secondary': 'secondaryNegative',\n  favorable: 'primaryPositive',\n  'favorable-secondary': 'secondaryPositive'\n};\nvar ignoredChildren = [false, undefined, null, ''];\n\nfunction getDataNameOfTheFirstChild(el) {\n  return typeof el.type === 'function' && el.type(el.props) && el.type(el.props).props && el.type(el.props).props['data-name'];\n}\n\nfunction isKDSIcon(child) {\n  if (React__default.isValidElement(child)) {\n    return getDataNameOfTheFirstChild(child) === 'Icon';\n  }\n\n  return false;\n}\n\nfunction getTruthyChildrenAsArray(children) {\n  return React.Children.toArray(children).filter(function (v) {\n    return !ignoredChildren.includes(v);\n  });\n}\n\nfunction hasIconOnly(childrenArr) {\n  return childrenArr.length === 1 && isKDSIcon(childrenArr[0]);\n}\n\nfunction hasLeadingIcon(childrenArr) {\n  return childrenArr.length > 1 && isKDSIcon(childrenArr[0]);\n}\n\nfunction hasTrailingIcon(childrenArr) {\n  return childrenArr.length > 1 && isKDSIcon(childrenArr[childrenArr.length - 1]);\n}\n/**\n * Buttons make common actions immediately visible and easy to perform with one click or tap.\n *\n * > **Note:** `<Button />` renders a button with all props spread on, like so: `<button {...props} />`.\n * So you can pass any relevant props such as: `disabled`, `onClick`, `name`, `value`, etc.\n */\n\n\nvar Button = function Button(_ref, ref) {\n  var children = _ref.children,\n      compact = _ref.compact,\n      kind = _ref.kind,\n      indeterminate = _ref.indeterminate,\n      buttonProps = _objectWithoutProperties(_ref, [\"children\", \"compact\", \"kind\", \"indeterminate\"]);\n\n  var childrenArr = getTruthyChildrenAsArray(children);\n  var classes = cx('kds-Button', \"kds-Button--\".concat(kindModifiers[kind] || kindModifiers['primary'])\n  /* Default to 'primary' */\n  , {\n    'kds-Button--compact': compact,\n    'kds-Button--hasIconOnly': hasIconOnly(childrenArr),\n    'kds-Button--indeterminate': indeterminate\n  }, buttonProps.className);\n\n  var renderChildren = function renderChildren() {\n    return React__default.Children.map(children, function (child) {\n      return isKDSIcon(child) ? React__default.cloneElement(child, {\n        size: compact ? 'utility-s' : 'utility-m',\n        className: cx(child.props.className, {\n          'kds-Button-icon': !hasIconOnly(childrenArr),\n          'kds-Button-icon--first': hasLeadingIcon(childrenArr),\n          'kds-Button-icon--last': hasTrailingIcon(childrenArr)\n        })\n      }) : child;\n    });\n  };\n\n  var indeterminateProps = indeterminate ? {\n    disabled: indeterminate,\n    role: 'progressbar',\n    'aria-valuetext': 'loading'\n  } : {};\n  return React__default.createElement(\"button\", _extends({\n    ref: ref\n  }, indeterminateProps, buttonProps, {\n    className: classes\n  }), renderChildren(), indeterminate && React__default.createElement(LoadingSpinner.default, {\n    size: \"xs\",\n    className: \"kds-Button-LoadingSpinner kds-Button-LoadingSpinner--\".concat(kindModifiers[kind]),\n    label: \"\"\n  }));\n}; // we do this because forwardRef render functions do not support propTypes or defaultProps.\n\n\nvar ButtonWithForwardRef = React__default.forwardRef(Button);\nButtonWithForwardRef.displayName = 'Button';\nButtonWithForwardRef.propTypes = {\n  /** Determines the button appearance based on connotations for various situations. */\n  kind: PropTypes.oneOf(kinds),\n\n  /** Compact button size. Used when space is limited. */\n  compact: PropTypes.bool,\n\n  /** Displays a loading spinner instead of button text. Used when button is in an indeterminate state. */\n  indeterminate: PropTypes.bool\n};\nButtonWithForwardRef.defaultProps = {\n  kind: 'primary',\n  compact: false,\n  indeterminate: false\n};\nexports.default = ButtonWithForwardRef;\nexports.kinds = kinds;","map":{"version":3,"sources":["kds-react/src/components/Button/Button.js"],"names":["kinds","kindModifiers","primary","secondary","tertiary","cancel","destructive","favorable","ignoredChildren","el","React","getDataNameOfTheFirstChild","childrenArr","isKDSIcon","Button","children","compact","kind","indeterminate","buttonProps","getTruthyChildrenAsArray","classes","cx","hasIconOnly","renderChildren","size","className","child","hasLeadingIcon","hasTrailingIcon","indeterminateProps","disabled","role","ref","LoadingSpinner","ButtonWithForwardRef","PropTypes","bool"],"mappings":"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","sourcesContent":["import React, { Children } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner'\n\n/** We need to instantiate kinds and buttonTypes here and reference them in\n * proptypes for react-docgen to properly build props json output.\n */\nexport const kinds = [\n  'primary',\n  'primary-inverse',\n  'secondary',\n  'secondary-inverse',\n  'tertiary',\n  'tertiary-inverse',\n  'primary-positive',\n  'primary-positive-inverse',\n  'secondary-positive',\n  'tertiary-positive',\n  'primary-negative',\n  'primary-negative-inverse',\n  'secondary-negative',\n  'tertiary-negative',\n  'cancel'\n]\n\nconst kindModifiers = {\n  primary: 'primary',\n  'primary-inverse': 'primaryInverse',\n  secondary: 'secondary',\n  'secondary-inverse': 'secondaryInverse',\n  tertiary: 'tertiary',\n  'tertiary-inverse': 'tertiaryInverse',\n  'primary-positive': 'primaryPositive',\n  'primary-positive-inverse': 'primaryPositiveInverse',\n  'secondary-positive': 'secondaryPositive',\n  'tertiary-positive': 'tertiaryPositive',\n  'primary-negative': 'primaryNegative',\n  'primary-negative-inverse': 'primaryNegativeInverse',\n  'secondary-negative': 'secondaryNegative',\n  'tertiary-negative': 'tertiaryNegative',\n  cancel: 'cancel',\n\n  /* mapping old kinds for backwards compatibility */\n  destructive: 'primaryNegative',\n  'destructive-secondary': 'secondaryNegative',\n  favorable: 'primaryPositive',\n  'favorable-secondary': 'secondaryPositive'\n}\n\nconst ignoredChildren = [false, undefined, null, '']\n\nfunction getDataNameOfTheFirstChild (el) {\n  return (\n    typeof el.type === 'function' &&\n    el.type(el.props) &&\n    el.type(el.props).props &&\n    el.type(el.props).props['data-name']\n  )\n}\n\nfunction isKDSIcon (child) {\n  if (React.isValidElement(child)) {\n    return getDataNameOfTheFirstChild(child) === 'Icon'\n  }\n  return false\n}\n\nfunction getTruthyChildrenAsArray (children) {\n  return Children.toArray(children).filter(v => !ignoredChildren.includes(v))\n}\n\nfunction hasIconOnly (childrenArr) {\n  return childrenArr.length === 1 && isKDSIcon(childrenArr[0])\n}\n\nfunction hasLeadingIcon (childrenArr) {\n  return childrenArr.length > 1 && isKDSIcon(childrenArr[0])\n}\n\nfunction hasTrailingIcon (childrenArr) {\n  return (\n    childrenArr.length > 1 && isKDSIcon(childrenArr[childrenArr.length - 1])\n  )\n}\n\n/**\n * Buttons make common actions immediately visible and easy to perform with one click or tap.\n *\n * > **Note:** `<Button />` renders a button with all props spread on, like so: `<button {...props} />`.\n * So you can pass any relevant props such as: `disabled`, `onClick`, `name`, `value`, etc.\n */\nconst Button = (\n  { children, compact, kind, indeterminate, ...buttonProps },\n  ref\n) => {\n  const childrenArr = getTruthyChildrenAsArray(children)\n\n  const classes = cx(\n    'kds-Button',\n    `kds-Button--${kindModifiers[kind] ||\n      kindModifiers['primary']}` /* Default to 'primary' */,\n    {\n      'kds-Button--compact': compact,\n      'kds-Button--hasIconOnly': hasIconOnly(childrenArr),\n      'kds-Button--indeterminate': indeterminate\n    },\n    buttonProps.className\n  )\n\n  const renderChildren = () =>\n    React.Children.map(children, child =>\n      isKDSIcon(child)\n        ? React.cloneElement(child, {\n          size: compact ? 'utility-s' : 'utility-m',\n          className: cx(child.props.className, {\n            'kds-Button-icon': !hasIconOnly(childrenArr),\n            'kds-Button-icon--first': hasLeadingIcon(childrenArr),\n            'kds-Button-icon--last': hasTrailingIcon(childrenArr)\n          })\n        })\n        : child\n    )\n\n  const indeterminateProps = indeterminate\n    ? {\n      disabled: indeterminate,\n      role: 'progressbar',\n      'aria-valuetext': 'loading'\n    }\n    : {}\n\n  return (\n    <button\n      ref={ref}\n      {...indeterminateProps}\n      {...buttonProps}\n      className={classes}\n    >\n      {renderChildren()}\n      {indeterminate && (\n        <LoadingSpinner\n          size=\"xs\"\n          className={`kds-Button-LoadingSpinner kds-Button-LoadingSpinner--${kindModifiers[kind]}`}\n          label=\"\"\n        />\n      )}\n    </button>\n  )\n}\n\n// we do this because forwardRef render functions do not support propTypes or defaultProps.\nconst ButtonWithForwardRef = React.forwardRef(Button)\n\nButtonWithForwardRef.displayName = 'Button'\n\nButtonWithForwardRef.propTypes = {\n  /** Determines the button appearance based on connotations for various situations. */\n  kind: PropTypes.oneOf(kinds),\n  /** Compact button size. Used when space is limited. */\n  compact: PropTypes.bool,\n  /** Displays a loading spinner instead of button text. Used when button is in an indeterminate state. */\n  indeterminate: PropTypes.bool\n}\n\nButtonWithForwardRef.defaultProps = {\n  kind: 'primary',\n  compact: false,\n  indeterminate: false\n}\n\nexport default ButtonWithForwardRef\n"]},"metadata":{},"sourceType":"script"}