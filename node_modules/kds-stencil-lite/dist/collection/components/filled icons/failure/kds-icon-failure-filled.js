import { Component, Prop, Element, h } from "@stencil/core";
import { Fragment } from "../../../utils/fragment";
/**
 * Filled icons inherit most of their behavior from standard [KDS icons](/stencil/components/Icon) with one key difference:
 *
 * The color of the paths and the fill of the icon are static and cannot be changed via a `color` prop.
 *
 */
export class KdsIconFailureFilled {
    render() {
        const paths = (h(Fragment, null,
            h("circle", { class: "kds-FilledIcon-failure", cx: "8", cy: "8", r: "5.75" }),
            h("path", { d: "M8,14.12A6.12,6.12,0,1,1,14.12,8,6.12,6.12,0,0,1,8,14.12ZM8,2.62A5.38,5.38,0,1,0,13.38,8,5.39,5.39,0,0,0,8,2.62Z" }),
            h("path", { d: "M8.53,8l1.89-1.89a.39.39,0,0,0,0-.53.37.37,0,0,0-.53,0L8,7.47,6.11,5.58a.37.37,0,0,0-.53,0,.39.39,0,0,0,0,.53L7.47,8,5.58,9.89a.38.38,0,0,0,.27.64.38.38,0,0,0,.26-.11L8,8.53l1.89,1.89a.38.38,0,0,0,.26.11.38.38,0,0,0,.27-.64Z" })));
        return h("kds-icon", { class: "kds-FilledIcon", size: this.size, paths: paths });
    }
    static get is() { return "kds-icon-failure-filled"; }
    static get originalStyleUrls() { return {
        "$": ["kds-icon-failure-filled.css"]
    }; }
    static get styleUrls() { return {
        "$": ["kds-icon-failure-filled.css"]
    }; }
    static get properties() { return {
        "size": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
                "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "KDS designated sizes."
            },
            "attribute": "size",
            "reflect": false
        }
    }; }
    static get elementRef() { return "hostEl"; }
}
