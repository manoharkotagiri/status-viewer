import { Component, Prop, Element, h } from "@stencil/core";
import { Fragment } from "../../../utils/fragment";
/**
 * Filled icons inherit most of their behavior from standard [KDS icons](/stencil/components/Icon) with one key difference:
 *
 * The color of the paths and the fill of the icon are static and cannot be changed via a `color` prop.
 *
 */
export class KdsIconWarningFilled {
    render() {
        const paths = (h(Fragment, null,
            h("path", { class: "kds-FilledIcon-warning", d: "M2.09,11.84l5-8.75a1,1,0,0,1,1.74,0l5,8.75a1,1,0,0,1-.86,1.5H3A1,1,0,0,1,2.09,11.84Z" }),
            h("path", { d: "M13.05,13.71H3a1.37,1.37,0,0,1-1.19-2.06L6.81,2.91a1.37,1.37,0,0,1,2.38,0l5.05,8.74a1.37,1.37,0,0,1-1.19,2.06ZM2.41,12a.62.62,0,0,0,0,.62A.61.61,0,0,0,3,13h10.1a.61.61,0,0,0,.54-.31.62.62,0,0,0,0-.62L8.54,3.28a.64.64,0,0,0-1.08,0Z" }),
            h("path", { d: "M8.63,6.69,8.38,9.22a.38.38,0,0,1-.76,0L7.38,6.69A.61.61,0,0,1,7.94,6a.64.64,0,0,1,.69.56Z" }),
            h("circle", { class: "cls-3", cx: "8", cy: "11.01", r: "0.6" })));
        return h("kds-icon", { class: "kds-FilledIcon", size: this.size, paths: paths });
    }
    static get is() { return "kds-icon-warning-filled"; }
    static get originalStyleUrls() { return {
        "$": ["kds-icon-warning-filled.css"]
    }; }
    static get styleUrls() { return {
        "$": ["kds-icon-warning-filled.css"]
    }; }
    static get properties() { return {
        "size": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
                "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "KDS designated sizes."
            },
            "attribute": "size",
            "reflect": false
        }
    }; }
    static get elementRef() { return "hostEl"; }
}
