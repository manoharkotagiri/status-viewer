import { Component, Prop, Element, h } from "@stencil/core";
import { Fragment } from "../../../utils/fragment";
/**
 * Filled icons inherit most of their behavior from standard [KDS icons](/stencil/components/Icon) with one key difference:
 *
 * The color of the paths and the fill of the icon are static and cannot be changed via a `color` prop.
 *
 */
export class KdsIconRecallFilled {
    render() {
        const paths = (h(Fragment, null,
            h("rect", { class: "kds-FilledIcon-recall", x: "3.28", y: "3.28", width: "9.44", height: "9.44", rx: "1.64", transform: "translate(8 -3.31) rotate(45)" }),
            h("path", { d: "M8.62,5.39,8.38,8.65a.38.38,0,0,1-.76,0L7.38,5.39a.62.62,0,1,1,1.24-.1A.17.17,0,0,1,8.62,5.39Z" }),
            h("circle", { cx: "8", cy: "10.63", r: "0.6" }),
            h("path", { d: "M8,14.37a2,2,0,0,1-1.43-.59L2.22,9.43A2,2,0,0,1,1.63,8a2,2,0,0,1,.59-1.42L6.57,2.22a2.08,2.08,0,0,1,2.86,0l4.35,4.35A2,2,0,0,1,14.37,8a2,2,0,0,1-.59,1.42L9.43,13.78A2,2,0,0,1,8,14.37Zm0-12a1.22,1.22,0,0,0-.89.37L2.75,7.11a1.27,1.27,0,0,0,0,1.79L7.1,13.25a1.31,1.31,0,0,0,1.79,0l4.36-4.36A1.26,1.26,0,0,0,13.62,8a1.31,1.31,0,0,0-.37-.9L8.9,2.75A1.26,1.26,0,0,0,8,2.38Z" })));
        return h("kds-icon", { class: "kds-FilledIcon", size: this.size, paths: paths });
    }
    static get is() { return "kds-icon-recall-filled"; }
    static get originalStyleUrls() { return {
        "$": ["kds-icon-recall-filled.css"]
    }; }
    static get styleUrls() { return {
        "$": ["kds-icon-recall-filled.css"]
    }; }
    static get properties() { return {
        "size": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
                "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": "KDS designated sizes."
            },
            "attribute": "size",
            "reflect": false
        }
    }; }
    static get elementRef() { return "hostEl"; }
}
