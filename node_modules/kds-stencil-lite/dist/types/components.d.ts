/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
import { JsxElement, } from "typescript";
export namespace Components {
    interface KdsIcon {
        /**
          * KDS designated colors.
         */
        "color"?: "subdued" | "supportive" | "inverse" | "interactive" | "destructive" | "favorable" | "destructive-inverse" | "favorable-inverse" | "neutral-inverse" | "callout-inverse";
        /**
          * @Private render prop used for generated icons.
         */
        "paths": JsxElement;
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconErrorFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconFailureFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconInfoFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconRecallFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconSuccessFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconWarningFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsTooltippable {
        /**
          * Sets how the tooltip will align with it's attached element.
         */
        "align": "center" | "left" | "right";
        /**
          * Sets the side a tooltip will appear relative to it's attached element.
         */
        "side": "top" | "bottom" | "left" | "right";
        /**
          * Sets the text that will render inside the tooltip.
         */
        "tooltipText": string;
        /**
          * Determines if the tooltip acts as a label or description of the tooltipped element and sets proper aria attributes.
         */
        "tooltipType": "label" | "description";
    }
}
declare global {
    interface HTMLKdsIconElement extends Components.KdsIcon, HTMLStencilElement {
    }
    var HTMLKdsIconElement: {
        prototype: HTMLKdsIconElement;
        new (): HTMLKdsIconElement;
    };
    interface HTMLKdsIconErrorFilledElement extends Components.KdsIconErrorFilled, HTMLStencilElement {
    }
    var HTMLKdsIconErrorFilledElement: {
        prototype: HTMLKdsIconErrorFilledElement;
        new (): HTMLKdsIconErrorFilledElement;
    };
    interface HTMLKdsIconFailureFilledElement extends Components.KdsIconFailureFilled, HTMLStencilElement {
    }
    var HTMLKdsIconFailureFilledElement: {
        prototype: HTMLKdsIconFailureFilledElement;
        new (): HTMLKdsIconFailureFilledElement;
    };
    interface HTMLKdsIconInfoFilledElement extends Components.KdsIconInfoFilled, HTMLStencilElement {
    }
    var HTMLKdsIconInfoFilledElement: {
        prototype: HTMLKdsIconInfoFilledElement;
        new (): HTMLKdsIconInfoFilledElement;
    };
    interface HTMLKdsIconRecallFilledElement extends Components.KdsIconRecallFilled, HTMLStencilElement {
    }
    var HTMLKdsIconRecallFilledElement: {
        prototype: HTMLKdsIconRecallFilledElement;
        new (): HTMLKdsIconRecallFilledElement;
    };
    interface HTMLKdsIconSuccessFilledElement extends Components.KdsIconSuccessFilled, HTMLStencilElement {
    }
    var HTMLKdsIconSuccessFilledElement: {
        prototype: HTMLKdsIconSuccessFilledElement;
        new (): HTMLKdsIconSuccessFilledElement;
    };
    interface HTMLKdsIconWarningFilledElement extends Components.KdsIconWarningFilled, HTMLStencilElement {
    }
    var HTMLKdsIconWarningFilledElement: {
        prototype: HTMLKdsIconWarningFilledElement;
        new (): HTMLKdsIconWarningFilledElement;
    };
    interface HTMLKdsTooltippableElement extends Components.KdsTooltippable, HTMLStencilElement {
    }
    var HTMLKdsTooltippableElement: {
        prototype: HTMLKdsTooltippableElement;
        new (): HTMLKdsTooltippableElement;
    };
    interface HTMLElementTagNameMap {
        "kds-icon": HTMLKdsIconElement;
        "kds-icon-error-filled": HTMLKdsIconErrorFilledElement;
        "kds-icon-failure-filled": HTMLKdsIconFailureFilledElement;
        "kds-icon-info-filled": HTMLKdsIconInfoFilledElement;
        "kds-icon-recall-filled": HTMLKdsIconRecallFilledElement;
        "kds-icon-success-filled": HTMLKdsIconSuccessFilledElement;
        "kds-icon-warning-filled": HTMLKdsIconWarningFilledElement;
        "kds-tooltippable": HTMLKdsTooltippableElement;
    }
}
declare namespace LocalJSX {
    interface KdsIcon {
        /**
          * KDS designated colors.
         */
        "color"?: "subdued" | "supportive" | "inverse" | "interactive" | "destructive" | "favorable" | "destructive-inverse" | "favorable-inverse" | "neutral-inverse" | "callout-inverse";
        /**
          * @Private render prop used for generated icons.
         */
        "paths"?: JsxElement;
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconErrorFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconFailureFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconInfoFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconRecallFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconSuccessFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsIconWarningFilled {
        /**
          * KDS designated sizes.
         */
        "size"?: "xs" | "s" | "m" | "l" | "xl";
    }
    interface KdsTooltippable {
        /**
          * Sets how the tooltip will align with it's attached element.
         */
        "align"?: "center" | "left" | "right";
        /**
          * Sets the side a tooltip will appear relative to it's attached element.
         */
        "side"?: "top" | "bottom" | "left" | "right";
        /**
          * Sets the text that will render inside the tooltip.
         */
        "tooltipText"?: string;
        /**
          * Determines if the tooltip acts as a label or description of the tooltipped element and sets proper aria attributes.
         */
        "tooltipType": "label" | "description";
    }
    interface IntrinsicElements {
        "kds-icon": KdsIcon;
        "kds-icon-error-filled": KdsIconErrorFilled;
        "kds-icon-failure-filled": KdsIconFailureFilled;
        "kds-icon-info-filled": KdsIconInfoFilled;
        "kds-icon-recall-filled": KdsIconRecallFilled;
        "kds-icon-success-filled": KdsIconSuccessFilled;
        "kds-icon-warning-filled": KdsIconWarningFilled;
        "kds-tooltippable": KdsTooltippable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "kds-icon": LocalJSX.KdsIcon & JSXBase.HTMLAttributes<HTMLKdsIconElement>;
            "kds-icon-error-filled": LocalJSX.KdsIconErrorFilled & JSXBase.HTMLAttributes<HTMLKdsIconErrorFilledElement>;
            "kds-icon-failure-filled": LocalJSX.KdsIconFailureFilled & JSXBase.HTMLAttributes<HTMLKdsIconFailureFilledElement>;
            "kds-icon-info-filled": LocalJSX.KdsIconInfoFilled & JSXBase.HTMLAttributes<HTMLKdsIconInfoFilledElement>;
            "kds-icon-recall-filled": LocalJSX.KdsIconRecallFilled & JSXBase.HTMLAttributes<HTMLKdsIconRecallFilledElement>;
            "kds-icon-success-filled": LocalJSX.KdsIconSuccessFilled & JSXBase.HTMLAttributes<HTMLKdsIconSuccessFilledElement>;
            "kds-icon-warning-filled": LocalJSX.KdsIconWarningFilled & JSXBase.HTMLAttributes<HTMLKdsIconWarningFilledElement>;
            "kds-tooltippable": LocalJSX.KdsTooltippable & JSXBase.HTMLAttributes<HTMLKdsTooltippableElement>;
        }
    }
}
