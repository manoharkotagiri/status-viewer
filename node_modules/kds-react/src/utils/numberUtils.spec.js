import { wrappingModulus, clamp } from './numberUtils'

describe('numberUtils', () => {
  describe('wrappingModulus', () => {
    it('should wrap to end for negative numbers', () => {
      expect(wrappingModulus(-1, 10)).toBe(9)
      expect(wrappingModulus(-2, 10)).toBe(8)
    })
    it('should wrap to beginning for positive numbers', () => {
      expect(wrappingModulus(10, 10)).toBe(0)
      expect(wrappingModulus(11, 10)).toBe(1)
    })
  })
  describe('clamp', () => {
    it('returns number if it is inside of the clamp range', () => {
      expect(clamp(5, 0, 10)).toBe(5)
    })

    it('returns lower bound if number is lower than lower bound of clamp range', () => {
      expect(clamp(-5, 0, 10)).toBe(0)
    })

    it('returns upper bound if number is higher than upper bound of clamp range', () => {
      expect(clamp(15, 0, 10)).toBe(10)
    })

    it('returns NaN when there are fewer than 3 args', () => {
      expect(clamp()).toBeNaN()
      expect(clamp(0)).toBeNaN()
      expect(clamp(0, -1)).toBeNaN()
    })

    it('returns the upper bound if the lower bound is higher than the upper bound', () => {
      expect(clamp(0, 1, -1)).toBe(-1)
    })
  })
})
