import React, { Component } from 'react'

export const deprecatedComponent = (DeprecatedComponent, options = {}) => {
  const isDev = process.env.NODE_ENV === 'development'
  const {
    logLevel = 0, // 0 => 'warn', 1 => 'error'
    useInstead = 'another component',
    removeInDev = false,
    message = `Please update immediately to use ${useInstead} from kds-react http://design.kroger.com/#/react/components`
  } = options
  const log = console[logLevel === 1 ? 'error' : 'warn']

  return isDev
    ? class extends Component {
      componentDidMount () {
        if (!removeInDev) {
          log(
            `[Deprecation] kds-react's ${DeprecatedComponent.name} component is deprecated and will soon be removed.`,
            message
          )
        }
      }

      render () {
        if (removeInDev) {
          throw Error(
            `[Deprecation] kds-react's ${DeprecatedComponent.name} component has been deprecated and is no longer available to use. ${message}`
          )
        }

        return <DeprecatedComponent {...this.props} />
      }
    }
    : DeprecatedComponent
}
