import React from 'react'

export const isComponentWithName = (el, name) => {
  if (typeof name === 'string') {
    return React.isValidElement(el) && name === getDisplayName(el)
  }
  const validRegEx = name instanceof RegExp ? name : new RegExp(name)
  return React.isValidElement(el) && validRegEx.test(getDisplayName(el))
}

export const getDisplayName = el => {
  if (React.isValidElement(el)) {
    return el.type.displayName || el.type.name || 'Component'
  }
  return ''
}

export const isClassComponent = el =>
  // React.Component subclasses have this flag
  Boolean(el.type.prototype) && Boolean(el.type.prototype.isReactComponent)

export const getDataName = el => {
  !isClassComponent(el) /* To prevent calling class as a function */ &&
    typeof el.type === 'function' &&
    el.type(el.props) &&
    el.type(el.props).props &&
    el.type(el.props).props['data-name']
}
