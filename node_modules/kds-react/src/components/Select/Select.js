import React from 'react'
import PropTypes from 'prop-types'
import cx from 'classnames'
import { LabelContext } from '../Label/Label'

/**
 * `<Select />` lets users choose from a list of items. Use them for things like:
 * - selecting an item from a list of 3&ndash;15 items
 *
 * > **Note:** `<Select />` renders a `<select>` with all props spread on, like so: `<select {...props} />`.
 * So you can pass any native props such as `id`, `className`, `aria-*` attributes, etc.
 */

const Select = ({ compact, ...selectProps }, ref) => (
  <LabelContext.ReverseProvider
    value={{ disabled: selectProps.disabled, hasField: true }}
  >
    <select
      ref={ref}
      {...selectProps}
      className={cx(
        'kds-Select',
        {
          'kds-Select--compact': compact
        },
        selectProps.className
      )}
    />
  </LabelContext.ReverseProvider>
)

// we do this because forwardRef render functions do not support propTypes or defaultProps
const SelectWithForwardRef = React.forwardRef(Select)

SelectWithForwardRef.displayName = 'Select'

SelectWithForwardRef.propTypes = {
  /** Compact select size. */
  compact: PropTypes.bool
}

SelectWithForwardRef.defaultProps = {
  compact: false
}

export default SelectWithForwardRef
