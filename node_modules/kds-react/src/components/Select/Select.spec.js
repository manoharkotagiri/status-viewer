import React from 'react'
import Select from './Select'
import { render } from 'react-testing-library'
import { selectContract } from 'kds-web-e-commerce-theme'
import { getPermutationsAsArray } from '../../utils/generateComponents'

describe('<Select />', () => {
  it('renders a <select> with proper classes', () => {
    const { container } = render(<Select className="extraClass" />)

    expect(container.firstChild.className).toBe('kds-Select extraClass')
  })

  it('renders a <select> with compact class when compact prop is set', () => {
    const { container } = render(<Select compact />)

    expect(container.firstChild).toHaveClass('kds-Select--compact')
  })

  it('renders <option> inside of a <select>', () => {
    const { container } = render(
      <Select>
        <option>One</option>
        <option>Two</option>
        <option>Three</option>
        <option>Four</option>
        <option>Five</option>
      </Select>
    )

    expect(container.querySelectorAll('option')).toHaveLength(5)
  })

  describe('contract test', () => {
    const AllPossibleComponentStates = getPermutationsAsArray(Select, {
      className: [undefined, 'customClass'],
      disabled: [undefined, true],
      compact: [true, false]
    })

    AllPossibleComponentStates.forEach(({ jsx, props }) => {
      it(`validates with Props: ${JSON.stringify(props)}`, () => {
        const { container } = render(jsx)

        expect(container).toMatchSnapshot()
        expect(selectContract.validateHTML(container.innerHTML)).toBeTruthy()
      })
    })
  })
})
