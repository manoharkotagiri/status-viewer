import React from 'react'
import PropTypes from 'prop-types'
import Button from '../../Button/Button'
import FormField from '../FormField/FormField'
import { IconEye, IconEyeSlash } from '../../Icon'
import { generateUniqueString } from '../../../utils/generationUtils'

/**
 * `FormPassword` lets users enter a password for submission via a form.
 *
 * > **Note:** `<FormPassword />` renders a `<FormField />` with most props spread on.
 * For more details, see the [FormField](./formfield) component.
 *
 * The `type` of password input is over-written to `password` when the masked state is true and `text` when the masked state is false.
 * The `masked` state is toggled by clicking the icon in the `input`.
 *
 * It comes with accessible form features:
 *
 * - label and description
 * - validation messaging
 * - aria attributes
 *
 * **Requires *custom-event* polyfill for custom validations to work in IE11** [See Polyfills](./polyfills)
 */

class FormPassword extends React.Component {
  state = {
    masked: true,
    id: generateUniqueString()
  }

  toggleMasked = () => {
    this.setState({ masked: !this.state.masked })
  }

  render () {
    const { masked, id } = this.state
    return (
      <FormField
        id={id}
        {...this.props}
        type={masked ? 'password' : 'text'}
        button={
          <Button
            onClick={this.toggleMasked}
            aria-label={masked ? 'Show Password' : 'Hide Password'}
            aria-live="polite"
            aria-controls={id}
          >
            {masked ? <IconEyeSlash /> : <IconEye />}
          </Button>
        }
      />
    )
  }
}

FormPassword.defaultProps = {
  label: 'Password'
}

FormPassword.propTypes = {
  /** The label for the password field. */
  label: PropTypes.string
}

export default FormPassword
