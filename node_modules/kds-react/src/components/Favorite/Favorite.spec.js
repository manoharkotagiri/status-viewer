import React from 'react'
import Favorite from './Favorite'
import { render, fireEvent } from 'react-testing-library'

describe('Favorite component', () => {
  it('renders a Favorite component', () => {
    const { container } = render(<Favorite what="Kroger Cereal" />)

    expect(container.firstChild).toMatchInlineSnapshot(`
<button
  aria-label="Save Kroger Cereal to my favorites."
  aria-pressed="false"
  class="kds-Favorite"
>
  <svg
    class="MOCK kds-Icon kds-IconFavoriteSolid kds-Favorite-icon kds-Icon--utilityMedium"
    data-name="Icon"
    stroke-linejoin="round"
    stroke-width=".75"
  >
    <path />
  </svg>
</button>
`)
  })

  it('renders a Favorite component with a custom className passed in', () => {
    const { container } = render(
      <Favorite what="Kroger Cereal" className="myFav" />
    )

    expect(container.firstChild).toHaveClass('myFav')
  })

  it('appends className and modifies the aria-label and aria-pressed when Favorite component is "favorited" ', () => {
    const { container } = render(<Favorite favorited what="Kroger Cereal" />)

    expect(container.firstChild).toHaveClass('kds-Favorite--favorited')
    expect(container.firstChild).toHaveAttribute(
      'aria-label',
      'Remove Kroger Cereal from my favorites.'
    )
    expect(container.firstChild).toHaveAttribute('aria-pressed', 'true')
  })

  it('calls "onClick" handler if it is provided', () => {
    const clickMock = jest.fn()

    const { container } = render(
      <Favorite onClick={clickMock} what="Kroger Cereal" />
    )

    fireEvent.click(container.firstChild)

    expect(clickMock).toBeCalled()
  })
})
