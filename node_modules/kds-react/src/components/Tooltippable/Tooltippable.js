import React from 'react'
import { KdsTooltippable } from 'kds-stencil-react-lite'
import PropTypes from 'prop-types'

const renderTooltip = tooltipText => {
  if (typeof tooltipText === 'string') {
    return <span slot="tooltipText">{tooltipText}</span>
  } else if (React.isValidElement(tooltipText)) {
    return React.cloneElement(tooltipText, {
      slot: 'tooltipText'
    })
  } else {
    return undefined
  }
}

/**
 * A component used to attach a tooltip to an element. Tooltips allow users to get contextual help or information about specific components when hovering or focusing them.
 */

const Tooltippable = ({ tooltipText, ...props }) => (
  <KdsTooltippable {...props}>
    {props.children}
    {tooltipText && renderTooltip(tooltipText)}
  </KdsTooltippable>
)

Tooltippable.propTypes = {
  /** Sets the side a tooltip will appear relative to it's attached element. */
  side: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),
  /** Sets how the tooltip will align with it's attached element. */
  align: PropTypes.oneOf(['center', 'left', 'right']),
  /** An element or string to render inside the tooltip. */
  tooltipText: PropTypes.oneOfType([PropTypes.element, PropTypes.string])
    .isRequired,
  /** Determines if the tooltip acts as a label or description of the tooltipped element and sets proper aria attributes. */
  tooltipType: PropTypes.oneOf(['label', 'description']).isRequired
}

Tooltippable.defaultProps = {
  side: 'bottom',
  align: 'center'
}

export default Tooltippable
