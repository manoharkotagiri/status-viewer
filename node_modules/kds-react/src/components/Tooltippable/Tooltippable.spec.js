import React from 'react'
import Tooltippable from './Tooltippable'
import { render } from 'react-testing-library'

describe('Tooltip component wrapper', () => {
  beforeEach(() => {
    jest.useFakeTimers()
  })

  afterEach(() => {
    jest.clearAllTimers()
  })

  it('renders a Tooltippable component', async () => {
    const { container } = render(
      <Tooltippable
        tooltipText="Special offers like this remain on your card until they expire."
        data-testid="foo"
      >
        <span
          className="italic"
          style={{ textDecoration: 'underline dotted' }}
          tabIndex="0"
        >
          Why can't I remove this offer?
        </span>
      </Tooltippable>
    )

    expect(container.firstChild).toMatchSnapshot()
  })

  it('Applies a proper slot attribute to tooltipText element', () => {
    const tooltipText = <span>Foo</span>
    const { container } = render(
      <Tooltippable tooltipText={tooltipText}>
        <span
          className="italic"
          style={{ textDecoration: 'underline dotted' }}
          tabIndex="0"
        >
          Why can't I remove this offer?
        </span>
      </Tooltippable>
    )

    expect(container.querySelector('[slot="tooltipText"]'))
      .toMatchInlineSnapshot(`
<span
  slot="tooltipText"
>
  Foo
</span>
`)
  })

  it('Places tooltipText string prop inside of span with slot="tooltipText" attribute', () => {
    const tooltipText = 'Foo'
    const { container } = render(
      <Tooltippable tooltipText={tooltipText}>
        <span
          className="italic"
          style={{ textDecoration: 'underline dotted' }}
          tabIndex="0"
        >
          Why can't I remove this offer?
        </span>
      </Tooltippable>
    )

    expect(container.querySelector('[slot="tooltipText"]'))
      .toMatchInlineSnapshot(`
<span
  slot="tooltipText"
>
  Foo
</span>
`)
  })
})
