import React from 'react'
import { render } from 'react-testing-library'
import RadioButton from './RadioButton'
import { radioContract } from 'kds-web-e-commerce-theme'
import { getPermutationsAsArray } from '../../utils/generateComponents'

describe('<RadioButton />', () => {
  it('renders a <radio with proper classes', () => {
    const { container } = render(<RadioButton className="extraClass" />)

    expect(container.firstChild).toMatchInlineSnapshot(`
<input
  class="kds-RadioButton extraClass"
  type="radio"
/>
`)
    expect(radioContract.validateHTML(container.innerHTML)).toBeTruthy()
  })

  it('passes arbitrary props down to radio element', () => {
    const { container } = render(
      <RadioButton name="group" value="selected" checked onChange={() => {}} />
    )

    expect(container.firstChild).toMatchInlineSnapshot(`
<input
  checked=""
  class="kds-RadioButton"
  name="group"
  type="radio"
  value="selected"
/>
`)
    // TODO: actually look at blueprint
    expect(radioContract.validateHTML(container.innerHTML)).toBeTruthy()
  })

  describe('contract test', () => {
    const AllPossibleComponentStates = getPermutationsAsArray(RadioButton, {
      className: [undefined, 'customClass'],
      disabled: [undefined, true, false],
      checked: [true, false, undefined]
    })

    AllPossibleComponentStates.forEach(({ jsx, props }) => {
      it(`validates with Props: ${JSON.stringify(props)}`, () => {
        const { container } = render(jsx)

        expect(container).toMatchSnapshot()
        expect(radioContract.validateHTML(container.innerHTML)).toBeTruthy()
      })
    })
  })
})
