import React, { Fragment } from 'react'
import PropTypes from 'prop-types'
import cx from 'classnames'
import Text from '../Text/Text'

/**
 * Loading Indicators communicate the status of an activity happening in the background.
 * Use to provide the User feedback as they navigate and perform complex actions.
 *
 * > **Note:** `<LoadingSpinner>` either renders an outermost `<label>` or `<span>` with
 * props spread on, like `<label {...props} />`. A `<span>` is rendered when a falsy
 * value is passed to the `label` prop. So you can pass
 * [its native props](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement):
 * `id`, `className`, `aria-*` attributes, etc.
 */
const LoadingSpinner = ({ inverse, label, underlay, size, ...labelProps }) => (
  <Fragment>
    {Boolean(underlay) && <span className="kds-LoadingSpinner--underlayMask" />}
    <Text
      {...labelProps}
      className={cx(
        'kds-LoadingSpinner',
        `kds-LoadingSpinner--${size}`,
        inverse && 'kds-LoadingSpinner--inverse',
        underlay && 'kds-LoadingSpinner--underlayCard',
        labelProps.className
      )}
      size={size}
      tag={label ? 'label' : 'span'}
    >
      <progress
        className={cx(
          'kds-LoadingSpinner-spinner',
          `kds-LoadingSpinner-spinner--${size}`,
          inverse && 'kds-LoadingSpinner-spinner--inverse'
        )}
      />
      {label}
    </Text>
  </Fragment>
)

LoadingSpinner.propTypes = {
  /** Light color scheme for dark backgrounds. */
  inverse: PropTypes.bool,
  /** Indicates what the loading spinner is for. Used by assistive technology to improve accessibility. */
  label: PropTypes.string.isRequired,
  /**
   * Adds a rigid card backdrop and flexible semi-transparent layer over a loading section.
   * **Note:** The containing component must add the following styles: `position: relative`, and `overflow: hidden`.
   *
   * TODO: Remove ignore tag when underlay is fully implemented.
   * @ignore
   */
  // underlay: PropTypes.bool,
  /** Controls the spinner’s dimensions and its label’s font-size. */
  size: PropTypes.oneOf(['xs', 's', 'm', 'l'])
}

LoadingSpinner.defaultProps = {
  label: 'loading',
  size: 's'
}

export default LoadingSpinner
