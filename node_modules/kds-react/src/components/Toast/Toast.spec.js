import React from 'react'
import { render } from 'react-testing-library'
import Toast from './Toast'
import { toastContract } from 'kds-web-e-commerce-theme'
import { getPermutationsAsArray } from '../../utils/generateComponents'

describe('Toast component', () => {
  it('renders correct content', () => {
    const { container } = render(
      <Toast kind="success" heading="A toast to your health!">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
      </Toast>
    )

    expect(container).toMatchSnapshot()
  })

  it('renders a "success" Toast', () => {
    const { container } = render(
      <Toast kind="success" heading="A toast to your health!">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
      </Toast>
    )

    expect(container.querySelector('.kds-Icon')).toHaveClass('kds-IconSuccess')
  })

  it('renders an "info" Toast', () => {
    const { container } = render(
      <Toast kind="info" heading="Otto Frederick Rohwedder invented toast.">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras convallis
        porttitor sem.
      </Toast>
    )

    expect(container.querySelector('.kds-Icon')).toHaveClass('kds-IconInfo')
  })

  it('renders an "error" Toast', () => {
    const { container } = render(
      <Toast kind="error" heading="Out of toast puns.">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras convallis
        porttitor sem.
      </Toast>
    )

    expect(container.querySelector('.kds-Icon')).toHaveClass('kds-IconError')
  })

  it('renders a "warning" Toast', () => {
    const { container } = render(
      <Toast kind="warning" heading="You're toast!">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras convallis
        porttitor sem.
      </Toast>
    )

    expect(container.querySelector('.kds-Icon')).toHaveClass('kds-IconWarning')
  })

  describe('Passes contract tests for all possible states', () => {
    const fetchAndTestToasts = container => {
      const toasts = container.querySelectorAll('.kds-Toast')

      toasts.forEach(toastElement =>
        expect(toastContract.validateHTML(toastElement.outerHTML)).toBeTruthy()
      )
    }
    const commonToastOptions = {
      kind: ['success', 'warning', 'error', 'info'],
      heading: ['FOO'],
      children: [undefined, 'Message body']
    }

    const AllPossibleToastStates = [
      ...getPermutationsAsArray(Toast, {
        ...commonToastOptions
      })
    ]

    AllPossibleToastStates.forEach(({ jsx, props }) => {
      it(`with Props: ${JSON.stringify(props)}`, () => {
        const { container } = render(jsx)

        fetchAndTestToasts(container)
      })
    })
  })
})
