import React from 'react'
import Toggle from './Toggle'
import { render } from 'react-testing-library'
import { toggleContract } from 'kds-web-e-commerce-theme'
import { getPermutationsAsArray } from '../../utils/generateComponents'

describe('<Toggle />', () => {
  it('renders a checkbox with proper classes', () => {
    const { container } = render(<Toggle className="extraClass" />)

    expect(container.firstChild).toMatchInlineSnapshot(`
<input
  class="kds-Toggle extraClass"
  type="checkbox"
/>
`)
  })

  it('passes arbitrary props down to checkbox element', () => {
    const { container } = render(
      <Toggle name="checkbox" value="selected" checked onChange={() => {}} />
    )

    expect(container.firstChild).toMatchInlineSnapshot(`
<input
  checked=""
  class="kds-Toggle"
  name="checkbox"
  type="checkbox"
  value="selected"
/>
`)
  })

  describe('Passes contract tests for all possible states', () => {
    const fetchAndTestToggles = container => {
      const toggles = container.querySelectorAll('.kds-Toggle')

      toggles.forEach(toggleElement =>
        expect(
          toggleContract.validateHTML(toggleElement.outerHTML)
        ).toBeTruthy()
      )
    }
    const commonToggleOptions = {
      checked: [true, false],
      onChange: [() => {}]
    }

    const AllPossibleToggleStates = [
      ...getPermutationsAsArray(Toggle, {
        ...commonToggleOptions
      })
    ]

    AllPossibleToggleStates.forEach(({ jsx, props }) => {
      it(`with Props: ${JSON.stringify(props)}`, () => {
        const { container } = render(jsx)

        fetchAndTestToggles(container)
      })
    })
  })
})
