import React, { memo, forwardRef } from 'react'
import cx from 'classnames'
import { LabelContext } from '../Label/Label'

/**
 * Checkboxes should be used when a User needs to select multiple options within a list, or opt in/out of something.
 *
 * > **Note:** `<Checkbox>` renders an `<input>` with all props spread on, like so: `<input type="checkbox" {...props} />`.
 * You can pass [`HTMLInputElement`â€™s native props](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement#Properties) such as: `disabled`, `onChange`, `name`, `value`, etc.
 *
 * If adding a checkbox to a [`Form`](./form) then use [`FormCheckbox`](./formcheckbox).
 */

const Checkbox = (props, ref) => (
  <LabelContext.ReverseProvider value={{ hasRadioOrCheckbox: true }}>
    <input
      ref={ref}
      {...props}
      type="checkbox"
      className={cx('kds-Checkbox', props.className)}
    />
  </LabelContext.ReverseProvider>
)

// this MUST be in this order because forwardRef requires a render function, not a component
export default memo(forwardRef(Checkbox))
