import React from 'react'
import cx from 'classnames'
import PropTypes from 'prop-types'
import Visibility from '../Visibility/Visibility'
import Button from '../Button/Button'
import { IconCaretRight, IconEllipsis } from '../Icon/index'
import Menu from './_Menu'

/**
 * The breadcrumb menu is used by `Breadcrumb` for handling the visibility behavior of the `Menu` for intermediate/collapsed breadcrumbs.
 */
const BreadcrumbMenu = ({ children, className, inverse }) => (
  <Visibility.Container>
    {({ visible, hide, toggle, returnFocusRef }) => (
      <span
        className={cx(className, 'kds-BreadcrumbMenu relative inline-block')}
      >
        <li className="inline">
          <Button
            aria-label={`${visible ? 'Hide' : 'Show'} intermediate breadcrumbs`}
            kind={inverse ? 'tertiary-inverse' : 'tertiary'}
            onClick={toggle}
            ref={returnFocusRef}
          >
            <IconEllipsis color={inverse ? 'inverse' : 'supportive'} />
          </Button>
          <IconCaretRight
            color={inverse ? 'inverse' : 'supportive'}
            aria-hidden="true"
            className="mx-4"
          />
          <Visibility onEsc={hide} onClickOutside={hide} visible={visible}>
            <Menu onChildClick={hide}>{children}</Menu>
          </Visibility>
        </li>
      </span>
    )}
  </Visibility.Container>
)

BreadcrumbMenu.propTypes = {
  /** Links that are passed through to the menu */
  children: PropTypes.element,
  /** Pass utility classes to the container element */
  className: PropTypes.string,
  /** Set to true if the menu is placed on the brand surface background. */
  inverse: PropTypes.bool
}

export default BreadcrumbMenu
