/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Wed Dec 09 2020 21:14:13 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _extends = _interopDefault(require('@babel/runtime/helpers/extends'));
var _objectWithoutProperties = _interopDefault(require('@babel/runtime/helpers/objectWithoutProperties'));
var React = require('react');
var React__default = _interopDefault(React);

/**
 * Filled Icons are used inside data tables or paired with text for a subtle visual cue.
 *
 * Each `FilledIcon` is exported as a named component. e.g. `FilledIconError`, `FilledIconSuccess`, etc.
 * This allows you to import only the icons you'll use, which helps to keep bundle size low.
 *
 * Filled icons inherit most of their behavior from standard KDS icons with one key difference: The color of the paths and the fill of the icon are static and cannot be changed via a color prop.
 */

var FilledIcon = function FilledIcon(_ref) {
  var Icon = _ref.as,
      props = _objectWithoutProperties(_ref, ["as"]);

  return Icon ? React__default.createElement(Icon, _extends({
    "data-name": "FilledIcon"
  }, props)) : '';
};

exports.default = FilledIcon;
//# sourceMappingURL=FilledIcon.js.map
