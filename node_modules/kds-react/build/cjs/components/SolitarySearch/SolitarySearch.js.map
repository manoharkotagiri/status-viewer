{"version":3,"file":"SolitarySearch.js","sources":["kds-react/src/components/SolitarySearch/SolitarySearch.js"],"sourcesContent":["import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React, { useRef } from 'react'\nimport { callSafely } from '../../utils/functionUtils'\nimport { ofEnterKey } from '../../utils/keyboardUtils'\nimport Button from '../Button/Button'\nimport { IconSearch } from '../Icon/icons/Search'\nimport Input from '../Input/Input'\n\n/**\n * `<SolitarySearch />` allows the User to search by term. Pressing enter or interacting with the search button will submit the search term.\n * `<SolitarySearch />` should only be in a form by itself, and should not have sibling inputs.\n *\n * > **Note:** `<SolitarySearch />` renders an `<Input>` with all props spread on, like so: `<Input {...props} />`.\n * So you can pass any native props such as `id`, `className`, `aria-*` attributes, etc.\n *\n */\n\nconst SolitarySearch = (\n  { onSearch, compact, className, inverse, disabled = false, ...inputProps },\n  externalRef\n) => {\n  const internalRef = useRef()\n  const inputRef = externalRef || internalRef\n  const callback = e => {\n    callSafely(onSearch)(inputRef.current.value, e.nativeEvent)\n  }\n  const ariaLabel =\n    inputProps['aria-label'] || inputProps.placeholder || 'Search'\n\n  /**\n   * Enter Key on input is advised for accessibility\n   * https://www.w3.org/TR/WCAG20-TECHS/SCR29.html\n   */\n  return (\n    <div\n      className={cx(\n        'kds-SolitarySearch-wrapper flex w-full',\n        {\n          'kds-SolitarySearch-wrapper--inverse': inverse\n        },\n        className\n      )}\n    >\n      <Input\n        {...inputProps}\n        aria-label={ariaLabel}\n        disabled={disabled}\n        className=\"kds-SolitarySearch-input kds-Input--search min-w-0\"\n        compact={compact}\n        onKeyPress={ofEnterKey(callback)}\n        ref={inputRef}\n        type=\"search\"\n      />\n      <Button\n        aria-label={ariaLabel}\n        disabled={disabled}\n        className=\"kds-SolitarySearch-button\"\n        compact={compact}\n        kind=\"primary-inverse\"\n        onClick={callback}\n      >\n        <IconSearch className=\"-ml-1\" />\n      </Button>\n    </div>\n  )\n}\n\n// we do this because forwardRef render functions do not support propTypes or defaultProps\nconst SolitarySearchWithForwardRef = React.forwardRef(SolitarySearch)\n\nSolitarySearchWithForwardRef.displayName = 'SolitarySearch'\n\nSolitarySearchWithForwardRef.defaultProps = {\n  compact: false,\n  maxLength: 125,\n  inverse: false\n}\n\nSolitarySearchWithForwardRef.propTypes = {\n  /** Decreases the height. */\n  compact: PropTypes.bool,\n  maxLength: PropTypes.number,\n  /** Pass utility classes to the container element */\n  className: PropTypes.string,\n  /** To indicate if component applies inverse style */\n  inverse: PropTypes.bool,\n  /**\n   * A callback for when a search is performed; i.e. when the `Enter` key is pressed or the button is clicked\n   *\n   * @param { string } term The search term entered into the search input\n   * @param { Event } event The native event (e.g. `KeyboardEvent`, `MouseEvent`) that triggered the callback\n   */\n  onSearch: PropTypes.func\n}\n\nexport default SolitarySearchWithForwardRef\n"],"names":["SolitarySearch","externalRef","onSearch","compact","className","inverse","disabled","inputProps","internalRef","useRef","inputRef","callback","e","callSafely","current","value","nativeEvent","ariaLabel","placeholder","React","cx","Input","ofEnterKey","Button","IconSearch","SolitarySearchWithForwardRef","forwardRef","displayName","defaultProps","maxLength","propTypes","PropTypes","bool","number","string","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AASA;;;;;;;;;AASA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAErBC,WAFqB,EAGlB;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MAFSC,OAET,QAFSA,OAET;AAAA,MAFkBC,SAElB,QAFkBA,SAElB;AAAA,MAF6BC,OAE7B,QAF6BA,OAE7B;AAAA,2BAFsCC,QAEtC;AAAA,MAFsCA,QAEtC,8BAFiD,KAEjD;AAAA,MAF2DC,UAE3D;;AACH,MAAMC,WAAW,GAAGC,YAAM,EAA1B;AACA,MAAMC,QAAQ,GAAGT,WAAW,IAAIO,WAAhC;;AACA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC,EAAI;AACpBC,IAAAA,wBAAU,CAACX,QAAD,CAAV,CAAqBQ,QAAQ,CAACI,OAAT,CAAiBC,KAAtC,EAA6CH,CAAC,CAACI,WAA/C;AACD,GAFD;;AAGA,MAAMC,SAAS,GACbV,UAAU,CAAC,YAAD,CAAV,IAA4BA,UAAU,CAACW,WAAvC,IAAsD,QADxD;AAGA;;;;;AAIA,SACEC;AACE,IAAA,SAAS,EAAEC,EAAE,CACX,wCADW,EAEX;AACE,6CAAuCf;AADzC,KAFW,EAKXD,SALW;AADf,KASEe,6BAACE,aAAD,eACMd,UADN;AAEE,kBAAYU,SAFd;AAGE,IAAA,QAAQ,EAAEX,QAHZ;AAIE,IAAA,SAAS,EAAC,oDAJZ;AAKE,IAAA,OAAO,EAAEH,OALX;AAME,IAAA,UAAU,EAAEmB,wBAAU,CAACX,QAAD,CANxB;AAOE,IAAA,GAAG,EAAED,QAPP;AAQE,IAAA,IAAI,EAAC;AARP,KATF,EAmBES,6BAACI,cAAD;AACE,kBAAYN,SADd;AAEE,IAAA,QAAQ,EAAEX,QAFZ;AAGE,IAAA,SAAS,EAAC,2BAHZ;AAIE,IAAA,OAAO,EAAEH,OAJX;AAKE,IAAA,IAAI,EAAC,iBALP;AAME,IAAA,OAAO,EAAEQ;AANX,KAQEQ,6BAACK,iBAAD;AAAY,IAAA,SAAS,EAAC;AAAtB,IARF,CAnBF,CADF;AAgCD,CAhDD;;;AAmDA,IAAMC,4BAA4B,GAAGN,cAAK,CAACO,UAAN,CAAiB1B,cAAjB,CAArC;AAEAyB,4BAA4B,CAACE,WAA7B,GAA2C,gBAA3C;AAEAF,4BAA4B,CAACG,YAA7B,GAA4C;AAC1CzB,EAAAA,OAAO,EAAE,KADiC;AAE1C0B,EAAAA,SAAS,EAAE,GAF+B;AAG1CxB,EAAAA,OAAO,EAAE;AAHiC,CAA5C;AAMAoB,4BAA4B,CAACK,SAA7B,GAAyC;AACvC;AACA3B,EAAAA,OAAO,EAAE4B,SAAS,CAACC,IAFoB;AAGvCH,EAAAA,SAAS,EAAEE,SAAS,CAACE,MAHkB;;AAIvC;AACA7B,EAAAA,SAAS,EAAE2B,SAAS,CAACG,MALkB;;AAMvC;AACA7B,EAAAA,OAAO,EAAE0B,SAAS,CAACC,IAPoB;;AAQvC;;;;;;AAMA9B,EAAAA,QAAQ,EAAE6B,SAAS,CAACI;AAdmB,CAAzC;;"}