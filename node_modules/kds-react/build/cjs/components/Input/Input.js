/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Wed Dec 09 2020 21:14:13 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _extends = _interopDefault(require('@babel/runtime/helpers/extends'));
var _objectWithoutProperties = _interopDefault(require('@babel/runtime/helpers/objectWithoutProperties'));
var React = require('react');
var React__default = _interopDefault(React);
var cx = _interopDefault(require('classnames'));
var PropTypes = _interopDefault(require('prop-types'));
var Label = require('../Label/Label.js');

/**
 * `<Input />` lets users enter data for submission via a form.
 * Use them for entering text or numbers.
 *
 * > **Note:** `<Input />` renders an `<input>` with all props spread on, like so: `<input {...props} />`.
 * So you can pass any native props such as `id`, `className`, `aria-*` attributes, etc.
 *
 * If adding an input to a [`Form`](./form) then use [`FormField`](formfield).
 */

var Input = function Input(_ref, ref) {
  var compact = _ref.compact,
      inputProps = _objectWithoutProperties(_ref, ["compact"]);

  return React__default.createElement(Label.LabelContext.ReverseProvider, {
    value: {
      hasField: true
    }
  }, React__default.createElement("input", _extends({}, inputProps, {
    ref: ref,
    className: cx('kds-Input', compact && 'kds-Input--compact', inputProps.className)
  })));
}; // we do this because forwardRef render functions do not support propTypes or defaultProps.


var InputWithForwardRef = React__default.forwardRef(Input);
InputWithForwardRef.displayName = 'Input';
InputWithForwardRef.propTypes = {
  /** Decreases the height. */
  compact: PropTypes.bool.isRequired,

  /** Defines the max length of the input. Defaults to 125. */
  maxLength: PropTypes.number
};
InputWithForwardRef.defaultProps = {
  compact: false,
  maxLength: 125
};

exports.default = InputWithForwardRef;
//# sourceMappingURL=Input.js.map
