{"version":3,"file":"Breadcrumbs.js","sources":["kds-react/src/components/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport Text from '../Text/Text'\nimport BreadcrumbLink from './_BreadcrumbLink'\n\n/**\n * Breadcrumbs are used to show the User where they are inside the site's hierarchy and give them the ability to move to a higher level.\n */\n\nconst Breadcrumbs = ({ breadcrumbs, inverse, withRouter, className }) => {\n  return (\n    <nav\n      aria-labelledby=\"breadcrumb-heading\"\n      className={cx(className, 'kds-Breadcrumb')}\n    >\n      <h1 id=\"breadcrumb-heading\" className=\"screen-reader\">\n        Breadcrumb\n      </h1>\n      <ol className=\"list-reset\">\n        {breadcrumbs\n          .filter(b => b)\n          .map((breadcrumb, index) => {\n            const { component, title, url, ...linkProps } = breadcrumb\n            return index !== breadcrumbs.length - 1 ? (\n              <BreadcrumbLink\n                inverse={inverse}\n                withRouter={withRouter}\n                title={title}\n                url={url}\n                key={index}\n                component={component}\n                {...linkProps}\n              />\n            ) : (\n              <li className=\"inline\" key={url}>\n                <Text\n                  className={cx({ 'text-default-50': inverse })}\n                  size=\"l\"\n                  tabIndex=\"0\"\n                  aria-current=\"page\"\n                >\n                  {title}\n                </Text>\n              </li>\n            )\n          })}\n      </ol>\n    </nav>\n  )\n}\n\nBreadcrumbs.defaultProps = {\n  breadcrumbs: [],\n  inverse: false,\n  withRouter: false\n}\n\nBreadcrumbs.propTypes = {\n  /** An array of objects with the title, url, alternative link component, and any additional link props to use for each breadcrumb */\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      url: PropTypes.string,\n      component: PropTypes.element\n    })\n  ),\n  /** Set to true if the breadcrumb is placed on the brand surface background. */\n  inverse: PropTypes.bool,\n  /** Pass utility classes to the container element */\n  className: PropTypes.string,\n  /** Set to `true` if you want to use a React Router `NavLink`, else an anchor tag is used. */\n  withRouter: PropTypes.bool\n}\n\nexport default Breadcrumbs\n"],"names":["Breadcrumbs","breadcrumbs","inverse","withRouter","className","React","cx","filter","b","map","breadcrumb","index","component","title","url","linkProps","length","BreadcrumbLink","Text","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAMA;;;;AAIA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAqD;AAAA,MAAlDC,WAAkD,QAAlDA,WAAkD;AAAA,MAArCC,OAAqC,QAArCA,OAAqC;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACvE,SACEC;AACE,uBAAgB,oBADlB;AAEE,IAAA,SAAS,EAAEC,EAAE,CAACF,SAAD,EAAY,gBAAZ;AAFf,KAIEC;AAAI,IAAA,EAAE,EAAC,oBAAP;AAA4B,IAAA,SAAS,EAAC;AAAtC,kBAJF,EAOEA;AAAI,IAAA,SAAS,EAAC;AAAd,KACGJ,WAAW,CACTM,MADF,CACS,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GADV,EAEEC,GAFF,CAEM,UAACC,UAAD,EAAaC,KAAb,EAAuB;AAAA,QAClBC,SADkB,GACsBF,UADtB,CAClBE,SADkB;AAAA,QACPC,KADO,GACsBH,UADtB,CACPG,KADO;AAAA,QACAC,GADA,GACsBJ,UADtB,CACAI,GADA;AAAA,QACQC,SADR,4BACsBL,UADtB;;AAE1B,WAAOC,KAAK,KAAKV,WAAW,CAACe,MAAZ,GAAqB,CAA/B,GACLX,6BAACY,uBAAD;AACE,MAAA,OAAO,EAAEf,OADX;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGE,MAAA,KAAK,EAAEU,KAHT;AAIE,MAAA,GAAG,EAAEC,GAJP;AAKE,MAAA,GAAG,EAAEH,KALP;AAME,MAAA,SAAS,EAAEC;AANb,OAOMG,SAPN,EADK,GAWLV;AAAI,MAAA,SAAS,EAAC,QAAd;AAAuB,MAAA,GAAG,EAAES;AAA5B,OACET,6BAACa,YAAD;AACE,MAAA,SAAS,EAAEZ,EAAE,CAAC;AAAE,2BAAmBJ;AAArB,OAAD,CADf;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,QAAQ,EAAC,GAHX;AAIE,sBAAa;AAJf,OAMGW,KANH,CADF,CAXF;AAsBD,GA1BF,CADH,CAPF,CADF;AAuCD,CAxCD;;AA0CAb,WAAW,CAACmB,YAAZ,GAA2B;AACzBlB,EAAAA,WAAW,EAAE,EADY;AAEzBC,EAAAA,OAAO,EAAE,KAFgB;AAGzBC,EAAAA,UAAU,EAAE;AAHa,CAA3B;;"}