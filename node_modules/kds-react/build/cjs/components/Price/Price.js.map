{"version":3,"file":"Price.js","sources":["kds-react/src/components/Price/Price.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\n\n/**\n * Price is used to display any monetary value.\n */\nconst Price = ({\n  className,\n  compact,\n  inverse,\n  original,\n  originalProps,\n  quantity,\n  quantityProps,\n  relative,\n  relativePrefix,\n  relativePrefixProps,\n  relativePostfix,\n  relativePostfixProps,\n  value,\n  valueProps,\n  dangerouslyHideOriginalPrice,\n  dangerouslyRemoveHighlight,\n  ...props\n}) => {\n  const {\n    className: originalValueClassNameProp,\n    ...originalValueRestProps\n  } = originalProps\n  const {\n    className: quantityClassNameProp,\n    ...quantityRestProps\n  } = quantityProps\n  const {\n    className: relativePrefixClassNameProp,\n    ...relativePrefixRestProps\n  } = relativePrefixProps\n  const {\n    className: relativePostfixClassNameProp,\n    ...relativePostfixRestProps\n  } = relativePostfixProps\n  const { className: valueClassNameProp, ...valueRestProps } = valueProps\n  const hasRelativeCopy = relative || quantity\n  const minus = '−' // Use actual unicode minus so screen reader users hear proper word\n\n  /**\n   * @param {number | string} v - integer, or string representation of an integer\n   * @returns {number} Absolute value of numeric input */\n  const absoluteNum = v => Math.abs(Number(v))\n\n  /** Determines if the price is negative when passed an object\n   * @param {{\n   *   dollars: number,\n   *   cents: number,\n   *   showMinus: boolean=,\n   *   showOnlyCents: boolean=,\n   * }} v - value prop object\n   * @returns {boolean} True if price is negative, false otherwise\n   */\n  const hasNegativePrice = v =>\n    Number(v.dollars) < 0 || Number(v.cents) < 0 || v.showMinus\n\n  /** Takes whole price values and applies desired price formatting. This includes\n   *  adding the proper 'minus' character as needed by screen readers.\n   *\n   * @param {number | string} v - Price to be formatted\n   * @returns {string} Formatted display price as a string\n   */\n  const formatPrice = v =>\n    `${v < 0 ? minus : ''}${Math.abs(Number(v)).toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    })}`\n  /** Takes an object representation of Price as `dollars` and `cents`, and combines\n   *  it back into a single string.\n   *  combinePrice() does not use the actual 'minus' character. It is expected that\n   *  the return value will be passed on to formatPrice(), for actual formatting.\n   * @param {{\n   *   dollars: number,\n   *   cents: number,\n   *   showMinus: boolean=,\n   *   showOnlyCents: boolean=,\n   * }} v - Price, represented as individual `dollars` and `cents`\n   * @returns {string} price as a string\n   */\n  const combinePrice = v =>\n    `${hasNegativePrice(v) ? minus : ''}${absoluteNum(v.dollars)}.${\n      absoluteNum(v.cents) < 10 ? '0' : ''\n    }${absoluteNum(v.cents)}`\n\n  /** Takes an object representation of Price as `dollars` and `cents`, and\n   *  creates a string with the desired 'cents' price format. formatCentsOnly()\n   *  uses the actual 'minus' character.\n   * @param {{\n   *   dollars: number,\n   *   cents: number,\n   *   showMinus: boolean=,\n   *   showOnlyCents: boolean=,\n   * }} v - Price, represented as individual `dollars` and `cents`\n   * @returns {string} Formated price as a string\n   */\n  const formatCentsOnly = v =>\n    `${hasNegativePrice(v) ? minus : ''}${absoluteNum(v.cents)}`\n\n  /** Takes number and returns a comma-separated string.\n   * @param {number} n - Number to be formatted\n   * @returns {string} Formated price as a string\n   */\n  const formatWithCommas = n => n.toLocaleString('en-US')\n\n  // We ONLY want to enable the new Price styling when passed an object\n  const useAlternateStyle =\n    value && typeof value === 'object' && Object.keys(value).length\n\n  // ONLY enable the new cents styling when asked\n  const showOnlyCents =\n    useAlternateStyle && value && value.dollars === 0 && value.showOnlyCents\n\n  const curPrice = useAlternateStyle\n    ? showOnlyCents\n      ? formatCentsOnly(value) + '¢'\n      : formatPrice(combinePrice(value))\n    : formatPrice(value)\n  const oriPrice = original ? formatPrice(original) : ''\n\n  const priceClasses = cx(\n    'kds-Price',\n    {\n      'kds-Price--alternate': useAlternateStyle,\n      'kds-Price--inverse': inverse,\n      'kds-Price--compact': compact\n    },\n    className\n  )\n\n  const valueClasses = cx(\n    'kds-Price-promotional',\n    {\n      'kds-Price-promotional--plain':\n        dangerouslyRemoveHighlight || !oriPrice || inverse\n    },\n    valueClassNameProp\n  )\n  const singularValueClasses = cx('kds-Price-singular', valueClassNameProp)\n  const originalValueClasses = cx(\n    'kds-Price-original',\n    originalValueClassNameProp\n  )\n  const quantityClasses = cx('kds-Price-quantity', quantityClassNameProp)\n  const relativePrefixClasses = cx(\n    'kds-Price-relativePrefix',\n    relativePrefixClassNameProp\n  )\n  const relativePostfixClasses = cx(\n    'kds-Price-relativePostfix',\n    relativePostfixClassNameProp\n  )\n  const priceAriaLabel = `${original ? 'Sale: ' : ''}${\n    hasRelativeCopy ? `${relativePrefix} ` : ''\n  }${curPrice}${hasRelativeCopy ? ` ${relativePostfix}` : ''}${\n    original\n      ? ` discounted from ${oriPrice}${\n        hasRelativeCopy ? ` ${relativePostfix}` : ''\n      }`\n      : ''\n  }${quantity ? `. ${quantity}.` : ''}`\n\n  return (\n    <data\n      value={useAlternateStyle ? combinePrice(value) : value}\n      typeof=\"Price\"\n      className={priceClasses}\n      aria-label={priceAriaLabel}\n      {...props}\n    >\n      <meta name=\"priceCurrency\" content=\"USD\" />\n      {hasRelativeCopy && (\n        <span className={relativePrefixClasses} {...relativePrefixRestProps}>\n          {relativePrefix}&#x200b;\n        </span>\n      )}\n      {original || useAlternateStyle ? (\n        <>\n          {useAlternateStyle ? (\n            <mark\n              className={cx(valueClasses, 'kds-Price-promotional--decorated')}\n              {...valueRestProps}\n            >\n              <sup className=\"kds-Price-superscript\">\n                {showOnlyCents\n                  ? hasNegativePrice(value)\n                    ? `${minus}`\n                    : ''\n                  : hasNegativePrice(value)\n                    ? `${minus}$`\n                    : '$'}\n              </sup>\n              <span className=\"kds-Price-promotional-dropCaps\">\n                {showOnlyCents\n                  ? absoluteNum(value.cents)\n                  : formatWithCommas(absoluteNum(value.dollars))}\n              </span>\n              <sup className=\"kds-Price-superscript\">\n                {showOnlyCents ? (\n                  '¢'\n                ) : (\n                  <>\n                    <span className=\"screen-reader\">.</span>\n                    {/* !! Period added for benefit of screen reader users. Price read incorrectly by Voiceover otherwise */}\n                    {absoluteNum(value.cents) < 10\n                      ? `0${absoluteNum(value.cents)}`\n                      : `${absoluteNum(value.cents)}`}\n                  </>\n                )}\n              </sup>\n            </mark>\n          ) : (\n            <mark className={valueClasses} {...valueRestProps}>\n              {curPrice}\n            </mark>\n          )}\n          {!!oriPrice &&\n            (dangerouslyHideOriginalPrice ? (\n              <span className=\"screen-reader\">{oriPrice}</span>\n            ) : (\n              <>\n                <span className=\"screen-reader\"> discounted from </span>\n                <s className={originalValueClasses} {...originalValueRestProps}>\n                  {oriPrice}\n                </s>\n              </>\n            ))}\n        </>\n      ) : (\n        <span className={singularValueClasses} {...valueRestProps}>\n          {curPrice}\n        </span>\n      )}\n      {hasRelativeCopy && (\n        <span className={relativePostfixClasses} {...relativePostfixRestProps}>\n          &#x200b;{relativePostfix}&#x200b;\n        </span>\n      )}\n      {quantity && (\n        <small className={quantityClasses} {...quantityRestProps}>\n          {quantity}\n        </small>\n      )}\n    </data>\n  )\n}\n\nPrice.propTypes = {\n  /** The price. Additionally serves as the value in the case of a \"promotional\" price.\n   *  When an object is passed in as dollars and cents, then the \"promotional\"\n   *  price will be displayed using an alternate style.\n   */\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.shape({\n      dollars: PropTypes.number.isRequired,\n      cents: PropTypes.number.isRequired,\n      showMinus: PropTypes.bool,\n      showOnlyCents: PropTypes.bool\n    })\n  ]).isRequired,\n  /** The former price, displayed struck-through after the promotional price. */\n  original: PropTypes.number,\n  /** Props to set on the element which contains the original price.\n   * Intended as an escape hatch for highly custom implementations. */\n  originalProps: PropTypes.object,\n  /** Used when space is limited in the UI. */\n  compact: PropTypes.bool,\n  /** Indicates a relative price. Adds copy around the price to indicate that it is relative. */\n  relative: PropTypes.bool,\n  /** When used with `relative`, allows control over the text preceding the price. */\n  relativePrefix: PropTypes.string,\n  /** Props to set on the element which contains the text preceding the price.\n   * Intended as an escape hatch for highly custom implementations. */\n  relativePrefixProps: PropTypes.object,\n  /** When used with `relative`, allows control over the text succeeding the price. */\n  relativePostfix: PropTypes.string,\n  /** Props to set on the element which contains the text succeeding the price.\n   * Intended as an escape hatch for highly custom implementations. */\n  relativePostfixProps: PropTypes.object,\n  /** Quantity information for the price, displayed below the value.\n   * A price with quantity results in similar behavior to a relative price. */\n  quantity: PropTypes.string,\n  /** Props to set on the element which contains the text quantity information.\n   * Intended as an escape hatch for highly custom implementations. */\n  quantityProps: PropTypes.object,\n  /** Set to `true` if placed on a dark background.\n   * > ```Message { \"props\": { \"kind\": \"warning\" } }\n   * > Use with extreme caution so as to not violate the WCAG color contrast requirements.\n   * ``` */\n  inverse: PropTypes.string.bool,\n  /** Set to `true` to hide the highlight on \"promotional\" prices. Promotional highlight will be removed. */\n  dangerouslyRemoveHighlight: PropTypes.bool,\n  /** Set to `true` to hide original price.\n   * > ```Message { \"props\": { \"kind\": \"warning\" } }\n   * > Use with extreme caution so as to not violate the FTC requirements for discount communication to consumers.\n   * ``` */\n  dangerouslyHideOriginalPrice: PropTypes.bool\n}\n\nPrice.defaultProps = {\n  inverse: false,\n  relative: false,\n  relativePrefix: 'about',\n  relativePostfix: 'each',\n  originalProps: {},\n  quantityProps: {},\n  relativePrefixProps: {},\n  relativePostfixProps: {},\n  valueProps: {}\n}\n\nexport default React.memo(Price)\n"],"names":["Price","className","compact","inverse","original","originalProps","quantity","quantityProps","relative","relativePrefix","relativePrefixProps","relativePostfix","relativePostfixProps","value","valueProps","dangerouslyHideOriginalPrice","dangerouslyRemoveHighlight","props","originalValueClassNameProp","originalValueRestProps","quantityClassNameProp","quantityRestProps","relativePrefixClassNameProp","relativePrefixRestProps","relativePostfixClassNameProp","relativePostfixRestProps","valueClassNameProp","valueRestProps","hasRelativeCopy","minus","absoluteNum","v","Math","abs","Number","hasNegativePrice","dollars","cents","showMinus","formatPrice","toLocaleString","style","currency","combinePrice","formatCentsOnly","formatWithCommas","n","useAlternateStyle","Object","keys","length","showOnlyCents","curPrice","oriPrice","priceClasses","cx","valueClasses","singularValueClasses","originalValueClasses","quantityClasses","relativePrefixClasses","relativePostfixClasses","priceAriaLabel","React","defaultProps","memo"],"mappings":"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"}