/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Wed Dec 09 2020 21:14:13 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _extends = _interopDefault(require('@babel/runtime/helpers/extends'));
var React = require('react');
var React__default = _interopDefault(React);
var cx = _interopDefault(require('classnames'));
var Label = require('../Label/Label.js');

/**
 * Toggles are used when a user needs to turn something on or off, usually when managing settings.
 *
 * > **Note:** `<Toggle>` renders an `<input>` with all props spread on, like so: `<input type="checkbox" role="switch" {...props} />`.
 * You can pass [`HTMLInputElement`â€™s native props](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement#Properties) such as `disabled`, `onChange`, `name`, `value`, etc.
 *
 */

var Toggle = function Toggle(props) {
  return React__default.createElement(Label.LabelContext.ReverseProvider, {
    value: {
      hasRadioOrCheckbox: true
    }
  }, React__default.createElement("input", _extends({}, props, {
    type: "checkbox" // Not using `role=switch` until the browser bugs listed in #75 are fixed
    ,
    className: cx('kds-Toggle', props.className)
  })));
};

var Toggle$1 = React__default.memo(Toggle);

exports.default = Toggle$1;
//# sourceMappingURL=Toggle.js.map
