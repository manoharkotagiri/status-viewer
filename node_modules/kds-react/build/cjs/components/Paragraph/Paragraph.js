/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Wed Dec 09 2020 21:14:13 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _extends = _interopDefault(require('@babel/runtime/helpers/extends'));
var _objectWithoutProperties = _interopDefault(require('@babel/runtime/helpers/objectWithoutProperties'));
var React = require('react');
var React__default = _interopDefault(React);
var cx = _interopDefault(require('classnames'));

/**
 * `<Paragraph>` is used to render blocks of text for long-form reading, which here means one or more complete sentences.
 * For short texts — such as that which often appears in product, coupon, and recipe cards — consider using `<Text>`.
 *
 * Paragraph renders a `<p>` tag styled to meet [KDS typography standards](/react/style/typography), which includes applying `min-width` and `max-width` to control line-length for readability.
 *
 * > **Note:** `<Paragraph>` spreads on all provided props: `<p {...props} />`.
 * > So you can pass to it any props or attributes: `aria-*`, `className`, `id`, etc.
 */

var Paragraph = function Paragraph(_ref) {
  var size = _ref.size,
      pProps = _objectWithoutProperties(_ref, ["size"]);

  return React__default.createElement("p", _extends({}, pProps, {
    className: cx('kds-Paragraph', "kds-Paragraph--".concat(size), pProps.className)
  }));
};

Paragraph.defaultProps = {
  size: 'l'
};
var Paragraph$1 = React__default.memo(Paragraph);

exports.default = Paragraph$1;
//# sourceMappingURL=Paragraph.js.map
