{"version":3,"file":"FormField.js","sources":["kds-react/src/components/Form/FormField/FormField.js"],"sourcesContent":["import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {\n  getValueFromTarget,\n  valOrCamelCasedFallback\n} from '../../../utils/formUtils'\nimport { callAll, callSafely } from '../../../utils/functionUtils'\nimport { generateUniqueString } from '../../../utils/generationUtils'\nimport { IconInfo } from '../../Icon/'\nimport Input from '../../Input/Input'\nimport Label from '../../Label/Label'\nimport Link from '../../Link/Link'\nimport Message from '../../Message/Message'\nimport MessageGroup from '../../MessageGroup/MessageGroup'\nimport Paragraph from '../../Paragraph/Paragraph'\nimport * as prebuiltValidations from '../validations/_prebuiltValidations'\n\nconst MoreInfoLink = ({ linkText = 'More Info', content, id }) =>\n  content ? (\n    <Link\n      noRouter\n      onClick={() => alert(content)}\n      size=\"m\"\n      className=\"ml-8\"\n      aria-labelledby={id}\n    >\n      {linkText}\n      <IconInfo className=\"ml-4\" />\n      <span id={id} className=\"screen-reader\">\n        {linkText}, {content}\n      </span>\n    </Link>\n  ) : null\n\nconst getKinds = (target, validations, invalidKind) => {\n  // Evaluate the value once outside of the map for better perf\n  const value = getValueFromTarget(target)\n\n  return validations.map(({ validate }) => {\n    const valid = callSafely(validate)(value)\n\n    return valid ? 'success' : invalidKind\n  })\n}\n\nconst _shouldShowMessages = (showMessages, currentState, nextState) => {\n  const { focused, validationError } = {\n    ...currentState,\n    ...nextState\n  }\n\n  if (validationError) {\n    return true\n  }\n\n  if (showMessages === 'onFocus') {\n    return focused\n  }\n}\n\nconst ValidationMessages = ({\n  id,\n  shouldShowMessages,\n  validations,\n  messageKinds,\n  focused,\n  invalid,\n  shouldShowAdaAlert,\n  screenReaderMessages,\n  ...props\n}) =>\n  shouldShowMessages && validations.length > 0 ? (\n    <React.Fragment>\n      {/*\n       * These are the visual messages only, screenreader messaging is below.\n       * Note the aria-hidden=\"true\" attr on this MessageGroup\n       */}\n      <MessageGroup {...props} aria-hidden=\"true\">\n        {validations.map(({ text }, index) => {\n          const kind = messageKinds[index]\n\n          return (\n            <Message key={index} kind={kind}>\n              {text}\n            </Message>\n          )\n        })}\n      </MessageGroup>\n      {/*\n       * If we are focused on the input we want to have the messages screenread\n       * as an aria-describedby description. So we are rendering a div with an\n       * id that will be used within underlying Component's aria-describedby attribute.\n       */\n        focused && shouldShowMessages && (\n          <div id={id} data-testid={id} className=\"screen-reader\">\n            {screenReaderMessages}\n          </div>\n        )}\n      {/*\n       * If we are NOT focused on the input and it is invalid, we want to have\n       * the messages be \"alerted\" via aria-live=\"assertive\".\n       */\n        invalid && !focused && shouldShowAdaAlert && (\n          <div\n            id={`${id}-alert`}\n            aria-live=\"assertive\"\n            aria-relevant=\"all\"\n            aria-atomic=\"true\"\n            className=\"screen-reader\"\n          >\n            {screenReaderMessages}\n          </div>\n        )}\n    </React.Fragment>\n  ) : null\n\n/**\n * By default, `FormField` will add an [`Input`](./input) to a [`Form`](./form).\n * You can pass a component through the `as` prop, which will be rendered instead of `Input`, like so:\n * > `<FormField as={MyInputComponent}  {...props} />`.\n\n *\n * It comes with accessible form features:\n *\n * - label and description\n * - validation messaging\n * - aria attributes\n *\n * All additional props beyond what is specified below will be spread onto the underlying Input (or your custom component), like so:\n * > `<Input {...props} />`.\n *\n * **Requires *custom-event* polyfill for custom validations to work in IE11** [See Polyfills](./polyfills)\n */\nclass FormField extends React.Component {\n  id = `${generateUniqueString()}-input`\n\n  constructor (props) {\n    super(props)\n    const { required, validations } = props\n    const { addRequiredToValidations } = prebuiltValidations\n    this._validations = required\n      ? addRequiredToValidations(validations)\n      : validations\n\n    this.state = {\n      messageKinds: this._validations.map(() => 'info'),\n      focused: false,\n      validationError: false,\n      shouldShowMessages: false,\n      shouldShowAdaAlert: false\n    }\n\n    this.inputRef = props.inputRef || React.createRef()\n  }\n\n  componentDidMount () {\n    if (this.inputRef && this.inputRef.current) {\n      const el = this.inputRef.current\n      const oldFn = el.checkValidity.bind(el)\n      el.checkValidity = () => {\n        const messageKinds = getKinds(el, this._validations, 'error')\n        const validationError = messageKinds.some(kind => kind === 'error')\n        this.setState({\n          messageKinds,\n          validationError,\n          shouldShowMessages: _shouldShowMessages(\n            this.props.showMessages,\n            this.state,\n            {\n              validationError\n            }\n          )\n        })\n\n        return !validationError && oldFn()\n      }\n\n      el.restoreDefaultState = () => {\n        this.setState({\n          messageKinds: this._validations.map(() => 'info'),\n          focused: false,\n          shouldShowMessages: false,\n          shouldShowAdaAlert: false,\n          submitError: false\n        })\n      }\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    const shouldSetFocus =\n      typeof this.props.focusOn !== 'undefined'\n        ? !prevProps.focusOn && this.props.focusOn\n        : (!prevProps.serverMessages ||\n            prevProps.serverMessages.length === 0) &&\n          this.props.serverMessages &&\n          this.props.serverMessages.length > 0\n    const previousKinds = prevState.messageKinds\n    const messageKindsChanged =\n      this.state.messageKinds\n        .map((currentKind, index) => currentKind === previousKinds[index])\n        .filter(same => !same).length > 0\n\n    if (messageKindsChanged) {\n      const payload = {\n        messagesShown: this.state.shouldShowMessages && this.state.messageKinds\n      }\n      let validationEvent\n\n      try {\n        validationEvent = new CustomEvent('validation', {\n          bubbles: true,\n          detail: payload\n        })\n      } catch (e) {\n        throw new Error(\n          'KDS FormField validations error. You may need the custom-event polyfill http://design.kroger.com/#/react/components/polyfills'\n        )\n      }\n\n      this.inputRef.current.setAttribute(\n        'data-messagesShown',\n        JSON.stringify(\n          this.state.shouldShowMessages\n            ? this.state.messageKinds.map((kind, index) => ({\n              messageText: this._validations[index].text,\n              messageKind: kind\n            }))\n            : []\n        )\n      )\n      this.inputRef.current.dispatchEvent(validationEvent)\n    }\n\n    if (shouldSetFocus) {\n      setTimeout(() => {\n        this.inputRef.current.focus()\n      }, 0)\n    }\n  }\n\n  handleFocus = () => {\n    const { shouldShowMessages } = this.state\n    const nextMeta = { focused: true }\n\n    this.setState({\n      ...nextMeta,\n      shouldShowMessages:\n        shouldShowMessages ||\n        _shouldShowMessages(this.props.showMessages, this.state, nextMeta),\n      shouldShowAdaAlert: false\n    })\n  }\n\n  handleChange = event => {\n    const { validationError } = this.state\n    const messageKinds = getKinds(\n      event.target,\n      this._validations,\n      validationError ? 'error' : 'info'\n    )\n    const messageKindsChanged =\n      this.state.messageKinds\n        .map((currentKind, index) => currentKind === messageKinds[index])\n        .filter(same => !same).length > 0\n    if (messageKindsChanged) {\n      this.setState({ messageKinds })\n    }\n  }\n\n  handleBlur = event => {\n    this.setState({\n      focused: false\n    })\n    setTimeout(\n      () =>\n        this.setState(prevState => ({\n          ...prevState,\n          shouldShowAdaAlert: true\n        })),\n      250\n    )\n  }\n\n  render () {\n    let {\n      as: Component,\n      name,\n      label,\n      required: requiredProp,\n      validations,\n      showMessages,\n      className,\n      moreInfo,\n      helpText,\n      button,\n      inputRef,\n      serverMessages = [],\n      ...props\n    } = this.props\n\n    const {\n      messageKinds,\n      focused,\n      validationError,\n      shouldShowMessages,\n      shouldShowAdaAlert\n    } = this.state\n\n    const required = prebuiltValidations.contains(\n      this._validations,\n      prebuiltValidations.required\n    )\n\n    const serverError = serverMessages.length > 0\n    const invalid =\n      serverError ||\n      (validationError && messageKinds.some(kind => kind === 'error'))\n    const metaClasses = cx({\n      'is-invalid': invalid,\n      'is-focused': focused,\n      'is-required': required\n    })\n\n    const screenReaderMessages = (!validationError && serverError\n      ? serverMessages\n      : this._validations\n        .filter((_, i) => messageKinds[i] !== 'success')\n        .map(({ text }) => text)\n    ).join('. ')\n\n    const id = props.id || this.id\n    const helpTextId = helpText ? `${id}-helpText` : ''\n    const moreInfoId = moreInfo ? `${id}-moreInfo` : ''\n    const messagesId = shouldShowMessages || serverError ? `${id}-messages` : ''\n    /* Create a space-separated list of ids or an empty string.\n    // Order matters for AT users. Please preserve: help text, more info, validation messages */\n    const ariaDescribedbyIds = [helpTextId, moreInfoId, messagesId]\n      .join(' ')\n      .trim()\n\n    const IconButton = button && standardizeIconButton(button, id)\n\n    return (\n      <div\n        className={cx('kds-Form--field kds-FormField', metaClasses, className)}\n      >\n        {label && (\n          <span className=\"flex\">\n            <Label htmlFor={id} className=\"mb-8\">\n              {label}\n            </Label>\n            <MoreInfoLink id={moreInfoId} {...moreInfo} />\n          </span>\n        )}\n\n        {helpText && (\n          <Paragraph id={helpTextId} size=\"s\" className=\"-mt-4 mb-8\">\n            {helpText}\n          </Paragraph>\n        )}\n\n        <div className=\"kds-FormField-inputWrapper flex items-center\">\n          <Component\n            {...props}\n            ref={this.inputRef}\n            id={id}\n            name={valOrCamelCasedFallback(name, label)}\n            aria-describedby={ariaDescribedbyIds || null}\n            aria-invalid={invalid}\n            aria-required={required}\n            onFocus={callAll(this.handleFocus, this.props.onFocus)}\n            onChange={callAll(this.handleChange, this.props.onChange)}\n            onBlur={callAll(this.handleBlur, this.props.onBlur)}\n            className={cx(button && 'kds-FormField-input--withIconButton')}\n          />\n          {IconButton}\n        </div>\n        <ValidationMessages\n          id={messagesId}\n          shouldShowMessages={shouldShowMessages || serverError}\n          validations={\n            !validationError && serverError\n              ? serverMessages.map(text => ({ text }))\n              : this._validations\n          }\n          messageKinds={\n            !validationError && serverError\n              ? serverMessages.map(() => 'error')\n              : messageKinds\n          }\n          focused={focused}\n          invalid={invalid}\n          shouldShowAdaAlert={shouldShowAdaAlert}\n          screenReaderMessages={screenReaderMessages}\n        />\n      </div>\n    )\n  }\n}\n\nFormField.propTypes = {\n  /** The component to be rendered instead of Input. */\n  as: PropTypes.any,\n  /** Text for this field's label. Do **not** put a colon at the end of the label. */\n  label: PropTypes.string.isRequired,\n  /** Name for this field. Will be used as the key in the form data object passed to the `onSubmit` handler. Defaults to the value of the `label` prop. */\n  name: PropTypes.string,\n  /** If `true`, then this input will be required and show a message that it is required. */\n  required: PropTypes.bool,\n  /** An array of pre-built [`Form.validations`](./forminput#Validations) and/or [custom validations](./forminput#Custom%20Validations),\n   * where `text` is the message to show, and `validate` is a predicate to test for the validation's\n   * success state.\n   * **Requires *custom-event* polyfill to work in IE11** [See Polyfills](./polyfills) */\n  validations: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      validate: PropTypes.func.isRequired\n    })\n  ),\n  /** An additional event for which you'd like to show the validation messages. All validation messages will also be shown on *Form* submit by default. */\n  showMessages: PropTypes.oneOf(['onFocus']),\n  /** A list of server error messages to display to the user. **Must** clear on every submit, **Only** provide when server response returns with error */\n  serverMessages: PropTypes.arrayOf(PropTypes.string),\n  /** Sets focus on this field if there are any server error messages. **Only** provide to one field at a time in the form. */\n  focusOn: PropTypes.bool,\n  /** Text to accompany the input label for a more detailed description. */\n  helpText: PropTypes.string,\n  /** Adds a \"More Info\" link that shows a modal with content for long additional information. */\n  moreInfo: PropTypes.shape({\n    linkText: PropTypes.string,\n    content: PropTypes.string.isRequired\n  }),\n  /** Adds an Icon Button to the right side of the input.\n   * Should always be something like `<Button><Icon /></Button>` */\n  button: PropTypes.element,\n  /** Reference to the underlying input */\n  inputRef: PropTypes.ref\n}\n\nFormField.defaultProps = {\n  as: Input,\n  validations: []\n}\n\nfunction standardizeIconButton (button, inputId) {\n  const onlyButton = React.Children.only(button)\n  const onlyIcon = React.Children.only(button.props.children)\n\n  return React.cloneElement(onlyButton, {\n    ...onlyButton.props,\n    kind: 'tertiary',\n    type: 'button',\n    'aria-controls': inputId,\n    className: cx('kds-FormField-iconButton', onlyButton.props.className),\n    children: React.cloneElement(onlyIcon, {\n      ...onlyIcon.props,\n      size: 'm',\n      className: cx('kds-FormField-icon', onlyIcon.props.className),\n      color: 'interactive'\n    })\n  })\n}\n\nexport default FormField\n"],"names":["MoreInfoLink","linkText","content","id","React","Link","alert","IconInfo","getKinds","target","validations","invalidKind","value","getValueFromTarget","map","validate","valid","callSafely","_shouldShowMessages","showMessages","currentState","nextState","focused","validationError","ValidationMessages","shouldShowMessages","messageKinds","invalid","shouldShowAdaAlert","screenReaderMessages","props","length","MessageGroup","index","text","kind","Message","FormField","generateUniqueString","state","nextMeta","setState","event","_validations","messageKindsChanged","currentKind","filter","same","setTimeout","prevState","required","addRequiredToValidations","prebuiltValidations","inputRef","createRef","current","el","oldFn","checkValidity","bind","some","restoreDefaultState","submitError","prevProps","shouldSetFocus","focusOn","serverMessages","previousKinds","payload","messagesShown","validationEvent","CustomEvent","bubbles","detail","e","Error","setAttribute","JSON","stringify","messageText","messageKind","dispatchEvent","focus","Component","as","name","label","requiredProp","className","moreInfo","helpText","button","serverError","metaClasses","cx","_","i","join","helpTextId","moreInfoId","messagesId","ariaDescribedbyIds","trim","IconButton","standardizeIconButton","Label","Paragraph","valOrCamelCasedFallback","callAll","handleFocus","onFocus","handleChange","onChange","handleBlur","onBlur","defaultProps","Input","inputId","onlyButton","Children","only","onlyIcon","children","cloneElement","type","size","color"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,IAAMA,YAAY,GAAG,SAAfA,YAAe;AAAA,2BAAGC,QAAH;AAAA,MAAGA,QAAH,8BAAc,WAAd;AAAA,MAA2BC,OAA3B,QAA2BA,OAA3B;AAAA,MAAoCC,EAApC,QAAoCA,EAApC;AAAA,SACnBD,OAAO,GACLE,6BAACC,YAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,KAAK,CAACJ,OAAD,CAAX;AAAA,KAFX;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,SAAS,EAAC,MAJZ;AAKE,uBAAiBC;AALnB,KAOGF,QAPH,EAQEG,6BAACG,aAAD;AAAU,IAAA,SAAS,EAAC;AAApB,IARF,EASEH;AAAM,IAAA,EAAE,EAAED,EAAV;AAAc,IAAA,SAAS,EAAC;AAAxB,KACGF,QADH,QACeC,OADf,CATF,CADK,GAcH,IAfe;AAAA,CAArB;;AAiBA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAASC,WAAT,EAAsBC,WAAtB,EAAsC;AACrD;AACA,MAAMC,KAAK,GAAGC,4BAAkB,CAACJ,MAAD,CAAhC;AAEA,SAAOC,WAAW,CAACI,GAAZ,CAAgB,iBAAkB;AAAA,QAAfC,QAAe,SAAfA,QAAe;AACvC,QAAMC,KAAK,GAAGC,wBAAU,CAACF,QAAD,CAAV,CAAqBH,KAArB,CAAd;AAEA,WAAOI,KAAK,GAAG,SAAH,GAAeL,WAA3B;AACD,GAJM,CAAP;AAKD,CATD;;AAWA,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,YAAD,EAAeC,YAAf,EAA6BC,SAA7B,EAA2C;AAAA,gDAEhED,YAFgE,MAGhEC,SAHgE;AAAA,MAC7DC,OAD6D,yBAC7DA,OAD6D;AAAA,MACpDC,eADoD,yBACpDA,eADoD;;AAMrE,MAAIA,eAAJ,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,MAAIJ,YAAY,KAAK,SAArB,EAAgC;AAC9B,WAAOG,OAAP;AACD;AACF,CAbD;;AAeA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MACzBrB,EADyB,SACzBA,EADyB;AAAA,MAEzBsB,kBAFyB,SAEzBA,kBAFyB;AAAA,MAGzBf,WAHyB,SAGzBA,WAHyB;AAAA,MAIzBgB,YAJyB,SAIzBA,YAJyB;AAAA,MAKzBJ,OALyB,SAKzBA,OALyB;AAAA,MAMzBK,OANyB,SAMzBA,OANyB;AAAA,MAOzBC,kBAPyB,SAOzBA,kBAPyB;AAAA,MAQzBC,oBARyB,SAQzBA,oBARyB;AAAA,MAStBC,KATsB;;AAAA,SAWzBL,kBAAkB,IAAIf,WAAW,CAACqB,MAAZ,GAAqB,CAA3C,GACE3B,6BAACA,cAAD,CAAO,QAAP,QAKEA,6BAAC4B,oBAAD,eAAkBF,KAAlB;AAAyB,mBAAY;AAArC,MACGpB,WAAW,CAACI,GAAZ,CAAgB,iBAAWmB,KAAX,EAAqB;AAAA,QAAlBC,IAAkB,SAAlBA,IAAkB;AACpC,QAAMC,IAAI,GAAGT,YAAY,CAACO,KAAD,CAAzB;AAEA,WACE7B,6BAACgC,eAAD;AAAS,MAAA,GAAG,EAAEH,KAAd;AAAqB,MAAA,IAAI,EAAEE;AAA3B,OACGD,IADH,CADF;AAKD,GARA,CADH,CALF;AAgBG;;;;;AAKCZ,EAAAA,OAAO,IAAIG,kBAAX,IACErB;AAAK,IAAA,EAAE,EAAED,EAAT;AAAa,mBAAaA,EAA1B;AAA8B,IAAA,SAAS,EAAC;AAAxC,KACG0B,oBADH,CAtBN;AA0BG;;;;AAICF,EAAAA,OAAO,IAAI,CAACL,OAAZ,IAAuBM,kBAAvB,IACExB;AACE,IAAA,EAAE,YAAKD,EAAL,WADJ;AAEE,iBAAU,WAFZ;AAGE,qBAAc,KAHhB;AAIE,mBAAY,MAJd;AAKE,IAAA,SAAS,EAAC;AALZ,KAOG0B,oBAPH,CA/BN,CADF,GA2CI,IAtDqB;AAAA,CAA3B;AAwDA;;;;;;;;;;;;;;;;;;;IAiBMQ;;;;;;;AAGJ,qBAAaP,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,mEAFZQ,oCAAoB,EAER;;AAAA,kEAyGN,YAAM;AAAA,UACVb,kBADU,GACa,MAAKc,KADlB,CACVd,kBADU;AAElB,UAAMe,QAAQ,GAAG;AAAElB,QAAAA,OAAO,EAAE;AAAX,OAAjB;;AAEA,YAAKmB,QAAL,mBACKD,QADL;AAEEf,QAAAA,kBAAkB,EAChBA,kBAAkB,IAClBP,mBAAmB,CAAC,MAAKY,KAAL,CAAWX,YAAZ,EAA0B,MAAKoB,KAA/B,EAAsCC,QAAtC,CAJvB;AAKEZ,QAAAA,kBAAkB,EAAE;AALtB;AAOD,KApHmB;;AAAA,mEAsHL,UAAAc,KAAK,EAAI;AAAA,UACdnB,eADc,GACM,MAAKgB,KADX,CACdhB,eADc;AAEtB,UAAMG,YAAY,GAAGlB,QAAQ,CAC3BkC,KAAK,CAACjC,MADqB,EAE3B,MAAKkC,YAFsB,EAG3BpB,eAAe,GAAG,OAAH,GAAa,MAHD,CAA7B;AAKA,UAAMqB,mBAAmB,GACvB,MAAKL,KAAL,CAAWb,YAAX,CACGZ,GADH,CACO,UAAC+B,WAAD,EAAcZ,KAAd;AAAA,eAAwBY,WAAW,KAAKnB,YAAY,CAACO,KAAD,CAApD;AAAA,OADP,EAEGa,MAFH,CAEU,UAAAC,IAAI;AAAA,eAAI,CAACA,IAAL;AAAA,OAFd,EAEyBhB,MAFzB,GAEkC,CAHpC;;AAIA,UAAIa,mBAAJ,EAAyB;AACvB,cAAKH,QAAL,CAAc;AAAEf,UAAAA,YAAY,EAAZA;AAAF,SAAd;AACD;AACF,KApImB;;AAAA,iEAsIP,UAAAgB,KAAK,EAAI;AACpB,YAAKD,QAAL,CAAc;AACZnB,QAAAA,OAAO,EAAE;AADG,OAAd;;AAGA0B,MAAAA,UAAU,CACR;AAAA,eACE,MAAKP,QAAL,CAAc,UAAAQ,SAAS;AAAA,mCAClBA,SADkB;AAErBrB,YAAAA,kBAAkB,EAAE;AAFC;AAAA,SAAvB,CADF;AAAA,OADQ,EAMR,GANQ,CAAV;AAQD,KAlJmB;;AAAA,QAEVsB,QAFU,GAEgBpB,KAFhB,CAEVoB,QAFU;AAAA,QAEAxC,WAFA,GAEgBoB,KAFhB,CAEApB,WAFA;AAAA,QAGVyC,wBAHU,GAGmBC,6CAHnB;AAIlB,UAAKT,YAAL,GAAoBO,QAAQ,GACxBC,wBAAwB,CAACzC,WAAD,CADA,GAExBA,WAFJ;AAIA,UAAK6B,KAAL,GAAa;AACXb,MAAAA,YAAY,EAAE,MAAKiB,YAAL,CAAkB7B,GAAlB,CAAsB;AAAA,eAAM,MAAN;AAAA,OAAtB,CADH;AAEXQ,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,eAAe,EAAE,KAHN;AAIXE,MAAAA,kBAAkB,EAAE,KAJT;AAKXG,MAAAA,kBAAkB,EAAE;AALT,KAAb;AAQA,UAAKyB,QAAL,GAAgBvB,KAAK,CAACuB,QAAN,IAAkBjD,cAAK,CAACkD,SAAN,EAAlC;AAhBkB;AAiBnB;;;;wCAEoB;AAAA;;AACnB,UAAI,KAAKD,QAAL,IAAiB,KAAKA,QAAL,CAAcE,OAAnC,EAA4C;AAC1C,YAAMC,EAAE,GAAG,KAAKH,QAAL,CAAcE,OAAzB;AACA,YAAME,KAAK,GAAGD,EAAE,CAACE,aAAH,CAAiBC,IAAjB,CAAsBH,EAAtB,CAAd;;AACAA,QAAAA,EAAE,CAACE,aAAH,GAAmB,YAAM;AACvB,cAAMhC,YAAY,GAAGlB,QAAQ,CAACgD,EAAD,EAAK,MAAI,CAACb,YAAV,EAAwB,OAAxB,CAA7B;AACA,cAAMpB,eAAe,GAAGG,YAAY,CAACkC,IAAb,CAAkB,UAAAzB,IAAI;AAAA,mBAAIA,IAAI,KAAK,OAAb;AAAA,WAAtB,CAAxB;;AACA,UAAA,MAAI,CAACM,QAAL,CAAc;AACZf,YAAAA,YAAY,EAAZA,YADY;AAEZH,YAAAA,eAAe,EAAfA,eAFY;AAGZE,YAAAA,kBAAkB,EAAEP,mBAAmB,CACrC,MAAI,CAACY,KAAL,CAAWX,YAD0B,EAErC,MAAI,CAACoB,KAFgC,EAGrC;AACEhB,cAAAA,eAAe,EAAfA;AADF,aAHqC;AAH3B,WAAd;;AAYA,iBAAO,CAACA,eAAD,IAAoBkC,KAAK,EAAhC;AACD,SAhBD;;AAkBAD,QAAAA,EAAE,CAACK,mBAAH,GAAyB,YAAM;AAC7B,UAAA,MAAI,CAACpB,QAAL,CAAc;AACZf,YAAAA,YAAY,EAAE,MAAI,CAACiB,YAAL,CAAkB7B,GAAlB,CAAsB;AAAA,qBAAM,MAAN;AAAA,aAAtB,CADF;AAEZQ,YAAAA,OAAO,EAAE,KAFG;AAGZG,YAAAA,kBAAkB,EAAE,KAHR;AAIZG,YAAAA,kBAAkB,EAAE,KAJR;AAKZkC,YAAAA,WAAW,EAAE;AALD,WAAd;AAOD,SARD;AASD;AACF;;;uCAEmBC,WAAWd,WAAW;AAAA;;AACxC,UAAMe,cAAc,GAClB,OAAO,KAAKlC,KAAL,CAAWmC,OAAlB,KAA8B,WAA9B,GACI,CAACF,SAAS,CAACE,OAAX,IAAsB,KAAKnC,KAAL,CAAWmC,OADrC,GAEI,CAAC,CAACF,SAAS,CAACG,cAAX,IACCH,SAAS,CAACG,cAAV,CAAyBnC,MAAzB,KAAoC,CADtC,KAEA,KAAKD,KAAL,CAAWoC,cAFX,IAGA,KAAKpC,KAAL,CAAWoC,cAAX,CAA0BnC,MAA1B,GAAmC,CANzC;AAOA,UAAMoC,aAAa,GAAGlB,SAAS,CAACvB,YAAhC;AACA,UAAMkB,mBAAmB,GACvB,KAAKL,KAAL,CAAWb,YAAX,CACGZ,GADH,CACO,UAAC+B,WAAD,EAAcZ,KAAd;AAAA,eAAwBY,WAAW,KAAKsB,aAAa,CAAClC,KAAD,CAArD;AAAA,OADP,EAEGa,MAFH,CAEU,UAAAC,IAAI;AAAA,eAAI,CAACA,IAAL;AAAA,OAFd,EAEyBhB,MAFzB,GAEkC,CAHpC;;AAKA,UAAIa,mBAAJ,EAAyB;AACvB,YAAMwB,OAAO,GAAG;AACdC,UAAAA,aAAa,EAAE,KAAK9B,KAAL,CAAWd,kBAAX,IAAiC,KAAKc,KAAL,CAAWb;AAD7C,SAAhB;AAGA,YAAI4C,eAAJ;;AAEA,YAAI;AACFA,UAAAA,eAAe,GAAG,IAAIC,WAAJ,CAAgB,YAAhB,EAA8B;AAC9CC,YAAAA,OAAO,EAAE,IADqC;AAE9CC,YAAAA,MAAM,EAAEL;AAFsC,WAA9B,CAAlB;AAID,SALD,CAKE,OAAOM,CAAP,EAAU;AACV,gBAAM,IAAIC,KAAJ,CACJ,+HADI,CAAN;AAGD;;AAED,aAAKtB,QAAL,CAAcE,OAAd,CAAsBqB,YAAtB,CACE,oBADF,EAEEC,IAAI,CAACC,SAAL,CACE,KAAKvC,KAAL,CAAWd,kBAAX,GACI,KAAKc,KAAL,CAAWb,YAAX,CAAwBZ,GAAxB,CAA4B,UAACqB,IAAD,EAAOF,KAAP;AAAA,iBAAkB;AAC9C8C,YAAAA,WAAW,EAAE,MAAI,CAACpC,YAAL,CAAkBV,KAAlB,EAAyBC,IADQ;AAE9C8C,YAAAA,WAAW,EAAE7C;AAFiC,WAAlB;AAAA,SAA5B,CADJ,GAKI,EANN,CAFF;AAWA,aAAKkB,QAAL,CAAcE,OAAd,CAAsB0B,aAAtB,CAAoCX,eAApC;AACD;;AAED,UAAIN,cAAJ,EAAoB;AAClBhB,QAAAA,UAAU,CAAC,YAAM;AACf,UAAA,MAAI,CAACK,QAAL,CAAcE,OAAd,CAAsB2B,KAAtB;AACD,SAFS,EAEP,CAFO,CAAV;AAGD;AACF;;;6BA6CS;AAAA,wBAeJ,KAAKpD,KAfD;AAAA,UAEFqD,SAFE,eAENC,EAFM;AAAA,UAGNC,IAHM,eAGNA,IAHM;AAAA,UAINC,KAJM,eAINA,KAJM;AAAA,UAKIC,YALJ,eAKNrC,QALM;AAAA,UAMNxC,WANM,eAMNA,WANM;AAAA,UAONS,YAPM,eAONA,YAPM;AAAA,UAQNqE,SARM,eAQNA,SARM;AAAA,UASNC,QATM,eASNA,QATM;AAAA,UAUNC,QAVM,eAUNA,QAVM;AAAA,UAWNC,MAXM,eAWNA,MAXM;AAAA,UAYNtC,QAZM,eAYNA,QAZM;AAAA,8CAaNa,cAbM;AAAA,UAaNA,cAbM,sCAaW,EAbX;AAAA,UAcHpC,KAdG;;AAAA,wBAuBJ,KAAKS,KAvBD;AAAA,UAkBNb,YAlBM,eAkBNA,YAlBM;AAAA,UAmBNJ,OAnBM,eAmBNA,OAnBM;AAAA,UAoBNC,eApBM,eAoBNA,eApBM;AAAA,UAqBNE,kBArBM,eAqBNA,kBArBM;AAAA,UAsBNG,kBAtBM,eAsBNA,kBAtBM;AAyBR,UAAMsB,QAAQ,GAAGE,6BAAA,CACf,KAAKT,YADU,EAEfS,6BAFe,CAAjB;AAKA,UAAMwC,WAAW,GAAG1B,cAAc,CAACnC,MAAf,GAAwB,CAA5C;AACA,UAAMJ,OAAO,GACXiE,WAAW,IACVrE,eAAe,IAAIG,YAAY,CAACkC,IAAb,CAAkB,UAAAzB,IAAI;AAAA,eAAIA,IAAI,KAAK,OAAb;AAAA,OAAtB,CAFtB;AAGA,UAAM0D,WAAW,GAAGC,EAAE,CAAC;AACrB,sBAAcnE,OADO;AAErB,sBAAcL,OAFO;AAGrB,uBAAe4B;AAHM,OAAD,CAAtB;AAMA,UAAMrB,oBAAoB,GAAG,CAAC,CAACN,eAAD,IAAoBqE,WAApB,GAC1B1B,cAD0B,GAE1B,KAAKvB,YAAL,CACCG,MADD,CACQ,UAACiD,CAAD,EAAIC,CAAJ;AAAA,eAAUtE,YAAY,CAACsE,CAAD,CAAZ,KAAoB,SAA9B;AAAA,OADR,EAEClF,GAFD,CAEK;AAAA,YAAGoB,IAAH,SAAGA,IAAH;AAAA,eAAcA,IAAd;AAAA,OAFL,CAFyB,EAK3B+D,IAL2B,CAKtB,IALsB,CAA7B;AAOA,UAAM9F,EAAE,GAAG2B,KAAK,CAAC3B,EAAN,IAAY,KAAKA,EAA5B;AACA,UAAM+F,UAAU,GAAGR,QAAQ,aAAMvF,EAAN,iBAAsB,EAAjD;AACA,UAAMgG,UAAU,GAAGV,QAAQ,aAAMtF,EAAN,iBAAsB,EAAjD;AACA,UAAMiG,UAAU,GAAG3E,kBAAkB,IAAImE,WAAtB,aAAuCzF,EAAvC,iBAAuD,EAA1E;AACA;;;AAEA,UAAMkG,kBAAkB,GAAG,CAACH,UAAD,EAAaC,UAAb,EAAyBC,UAAzB,EACxBH,IADwB,CACnB,GADmB,EAExBK,IAFwB,EAA3B;AAIA,UAAMC,UAAU,GAAGZ,MAAM,IAAIa,qBAAqB,CAACb,MAAD,EAASxF,EAAT,CAAlD;AAEA,aACEC;AACE,QAAA,SAAS,EAAE0F,EAAE,CAAC,+BAAD,EAAkCD,WAAlC,EAA+CL,SAA/C;AADf,SAGGF,KAAK,IACJlF;AAAM,QAAA,SAAS,EAAC;AAAhB,SACEA,6BAACqG,aAAD;AAAO,QAAA,OAAO,EAAEtG,EAAhB;AAAoB,QAAA,SAAS,EAAC;AAA9B,SACGmF,KADH,CADF,EAIElF,6BAAC,YAAD;AAAc,QAAA,EAAE,EAAE+F;AAAlB,SAAkCV,QAAlC,EAJF,CAJJ,EAYGC,QAAQ,IACPtF,6BAACsG,iBAAD;AAAW,QAAA,EAAE,EAAER,UAAf;AAA2B,QAAA,IAAI,EAAC,GAAhC;AAAoC,QAAA,SAAS,EAAC;AAA9C,SACGR,QADH,CAbJ,EAkBEtF;AAAK,QAAA,SAAS,EAAC;AAAf,SACEA,6BAAC,SAAD,eACM0B,KADN;AAEE,QAAA,GAAG,EAAE,KAAKuB,QAFZ;AAGE,QAAA,EAAE,EAAElD,EAHN;AAIE,QAAA,IAAI,EAAEwG,iCAAuB,CAACtB,IAAD,EAAOC,KAAP,CAJ/B;AAKE,4BAAkBe,kBAAkB,IAAI,IAL1C;AAME,wBAAc1E,OANhB;AAOE,yBAAeuB,QAPjB;AAQE,QAAA,OAAO,EAAE0D,qBAAO,CAAC,KAAKC,WAAN,EAAmB,KAAK/E,KAAL,CAAWgF,OAA9B,CARlB;AASE,QAAA,QAAQ,EAAEF,qBAAO,CAAC,KAAKG,YAAN,EAAoB,KAAKjF,KAAL,CAAWkF,QAA/B,CATnB;AAUE,QAAA,MAAM,EAAEJ,qBAAO,CAAC,KAAKK,UAAN,EAAkB,KAAKnF,KAAL,CAAWoF,MAA7B,CAVjB;AAWE,QAAA,SAAS,EAAEpB,EAAE,CAACH,MAAM,IAAI,qCAAX;AAXf,SADF,EAcGY,UAdH,CAlBF,EAkCEnG,6BAAC,kBAAD;AACE,QAAA,EAAE,EAAEgG,UADN;AAEE,QAAA,kBAAkB,EAAE3E,kBAAkB,IAAImE,WAF5C;AAGE,QAAA,WAAW,EACT,CAACrE,eAAD,IAAoBqE,WAApB,GACI1B,cAAc,CAACpD,GAAf,CAAmB,UAAAoB,IAAI;AAAA,iBAAK;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WAAL;AAAA,SAAvB,CADJ,GAEI,KAAKS,YANb;AAQE,QAAA,YAAY,EACV,CAACpB,eAAD,IAAoBqE,WAApB,GACI1B,cAAc,CAACpD,GAAf,CAAmB;AAAA,iBAAM,OAAN;AAAA,SAAnB,CADJ,GAEIY,YAXR;AAaE,QAAA,OAAO,EAAEJ,OAbX;AAcE,QAAA,OAAO,EAAEK,OAdX;AAeE,QAAA,kBAAkB,EAAEC,kBAftB;AAgBE,QAAA,oBAAoB,EAAEC;AAhBxB,QAlCF,CADF;AAuDD;;;;EAzQqBzB,cAAK,CAAC+E;;AAmT9B9C,SAAS,CAAC8E,YAAV,GAAyB;AACvB/B,EAAAA,EAAE,EAAEgC,aADmB;AAEvB1G,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,SAAS8F,qBAAT,CAAgCb,MAAhC,EAAwC0B,OAAxC,EAAiD;AAC/C,MAAMC,UAAU,GAAGlH,cAAK,CAACmH,QAAN,CAAeC,IAAf,CAAoB7B,MAApB,CAAnB;AACA,MAAM8B,QAAQ,GAAGrH,cAAK,CAACmH,QAAN,CAAeC,IAAf,CAAoB7B,MAAM,CAAC7D,KAAP,CAAa4F,QAAjC,CAAjB;AAEA,SAAOtH,cAAK,CAACuH,YAAN,CAAmBL,UAAnB,oBACFA,UAAU,CAACxF,KADT;AAELK,IAAAA,IAAI,EAAE,UAFD;AAGLyF,IAAAA,IAAI,EAAE,QAHD;AAIL,qBAAiBP,OAJZ;AAKL7B,IAAAA,SAAS,EAAEM,EAAE,CAAC,0BAAD,EAA6BwB,UAAU,CAACxF,KAAX,CAAiB0D,SAA9C,CALR;AAMLkC,IAAAA,QAAQ,EAAEtH,cAAK,CAACuH,YAAN,CAAmBF,QAAnB,oBACLA,QAAQ,CAAC3F,KADJ;AAER+F,MAAAA,IAAI,EAAE,GAFE;AAGRrC,MAAAA,SAAS,EAAEM,EAAE,CAAC,oBAAD,EAAuB2B,QAAQ,CAAC3F,KAAT,CAAe0D,SAAtC,CAHL;AAIRsC,MAAAA,KAAK,EAAE;AAJC;AANL,KAAP;AAaD;;"}