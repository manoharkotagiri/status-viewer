{"version":3,"file":"AccordionGroup.js","sources":["kds-react/src/components/AccordionGroup/AccordionGroup.js"],"sourcesContent":["import React from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport SectionAccordion from '../Accordion/SectionAccordion/SectionAccordion'\n\n/**\n * `<AccordionGroup>` renders a `<ul>` element with `<SectionAccordion>` or `<ParagraphAccordion>` children as `<li>` elements.\n * > **Note:** `<SectionAccordion>` and `<ParagraphAccordion>` render a `<section>` element by default; `<AccordionGroup>` clones each child and passes `tag=\"li\"` as a prop to override this default. If you pass a `SectionAccordion` or a `<ParagraphAccordion>` child wrapped in a higher-order component, either it will need to accept this prop and pass it along, or you will need to explicitly specify the tag prop on the wrapped child.\n */\nconst AccordionGroup = ({ className, children, ...props }) => {\n  const renderChildren = () => {\n    return React.Children.map(children, (child, index) => {\n      const { className: childClassName } = child.props\n      const childClasses = cx(\n        {\n          'border-t border-default-400': child.type === SectionAccordion,\n          'border-b':\n            child.type === SectionAccordion && index === children.length - 1\n        },\n        childClassName\n      )\n\n      return React.cloneElement(child, {\n        tag: 'li',\n        className: childClasses,\n        key: child.key || `accordion-${index}`\n      })\n    })\n  }\n\n  return (\n    <ul\n      className={cx('kds-AccordionGroup list-reset', className)}\n      aria-label=\"Accordion Control Button Group\"\n      {...props}\n    >\n      {renderChildren()}\n    </ul>\n  )\n}\n\nAccordionGroup.propTypes = {\n  /** One or more [`<SectionAccordion>`](./sectionaccordion) components */\n  children: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: SectionAccordion\n    })\n  ),\n  /** Optional className to be applied to the container node */\n  className: PropTypes.string\n}\n\nAccordionGroup.defaultProps = {\n  className: ''\n}\n\nexport default AccordionGroup\n"],"names":["AccordionGroup","className","children","props","renderChildren","React","Children","map","child","index","childClassName","childClasses","cx","type","SectionAccordion","length","cloneElement","tag","key","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAKA;;;;;AAIA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAAuC;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAC5D,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WAAOC,cAAK,CAACC,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,EAA6B,UAACM,KAAD,EAAQC,KAAR,EAAkB;AAAA,UACjCC,cADiC,GACdF,KAAK,CAACL,KADQ,CAC5CF,SAD4C;AAEpD,UAAMU,YAAY,GAAGC,EAAE,CACrB;AACE,uCAA+BJ,KAAK,CAACK,IAAN,KAAeC,wBADhD;AAEE,oBACEN,KAAK,CAACK,IAAN,KAAeC,wBAAf,IAAmCL,KAAK,KAAKP,QAAQ,CAACa,MAAT,GAAkB;AAHnE,OADqB,EAMrBL,cANqB,CAAvB;AASA,aAAOL,cAAK,CAACW,YAAN,CAAmBR,KAAnB,EAA0B;AAC/BS,QAAAA,GAAG,EAAE,IAD0B;AAE/BhB,QAAAA,SAAS,EAAEU,YAFoB;AAG/BO,QAAAA,GAAG,EAAEV,KAAK,CAACU,GAAN,wBAA0BT,KAA1B;AAH0B,OAA1B,CAAP;AAKD,KAhBM,CAAP;AAiBD,GAlBD;;AAoBA,SACEJ;AACE,IAAA,SAAS,EAAEO,EAAE,CAAC,+BAAD,EAAkCX,SAAlC,CADf;AAEE,kBAAW;AAFb,KAGME,KAHN,GAKGC,cAAc,EALjB,CADF;AASD,CA9BD;;AA2CAJ,cAAc,CAACmB,YAAf,GAA8B;AAC5BlB,EAAAA,SAAS,EAAE;AADiB,CAA9B;;"}