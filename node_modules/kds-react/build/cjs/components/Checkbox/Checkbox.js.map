{"version":3,"file":"Checkbox.js","sources":["kds-react/src/components/Checkbox/Checkbox.js"],"sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport cx from 'classnames'\nimport { LabelContext } from '../Label/Label'\n\n/**\n * Checkboxes should be used when a User needs to select multiple options within a list, or opt in/out of something.\n *\n * > **Note:** `<Checkbox>` renders an `<input>` with all props spread on, like so: `<input type=\"checkbox\" {...props} />`.\n * You can pass [`HTMLInputElement`â€™s native props](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement#Properties) such as: `disabled`, `onChange`, `name`, `value`, etc.\n *\n * If adding a checkbox to a [`Form`](./form) then use [`FormCheckbox`](./formcheckbox).\n */\n\nconst Checkbox = (props, ref) => (\n  <LabelContext.ReverseProvider value={{ hasRadioOrCheckbox: true }}>\n    <input\n      ref={ref}\n      {...props}\n      type=\"checkbox\"\n      className={cx('kds-Checkbox', props.className)}\n    />\n  </LabelContext.ReverseProvider>\n)\n\n// this MUST be in this order because forwardRef requires a render function, not a component\nexport default memo(forwardRef(Checkbox))\n"],"names":["Checkbox","props","ref","React","LabelContext","hasRadioOrCheckbox","cx","className","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA;;;;;;;;;AASA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,GAAR;AAAA,SACfC,6BAACC,kBAAD,CAAc,eAAd;AAA8B,IAAA,KAAK,EAAE;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB;AAArC,KACEF;AACE,IAAA,GAAG,EAAED;AADP,KAEMD,KAFN;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,SAAS,EAAEK,EAAE,CAAC,cAAD,EAAiBL,KAAK,CAACM,SAAvB;AAJf,KADF,CADe;AAAA,CAAjB;;;AAYA,iBAAeC,UAAI,CAACC,gBAAU,CAACT,QAAD,CAAX,CAAnB;;"}