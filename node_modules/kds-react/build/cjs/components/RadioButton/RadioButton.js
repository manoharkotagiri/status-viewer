/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Wed Dec 09 2020 21:14:13 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _extends = _interopDefault(require('@babel/runtime/helpers/extends'));
var React = require('react');
var React__default = _interopDefault(React);
var cx = _interopDefault(require('classnames'));
var Label = require('../Label/Label.js');

/**
 * Typically, you'll use [`RadioGroup`](./radiogroup) because you'll need multiple radios.
 * Only use this component if you have a need to use a lower-level api.
 *
 * > **Note:** `<RadioButton />` renders a radio button with all props spread on, like so: `<input type="radio" {...props} />`.
 * So you can pass any relevant props such as: `disabled`, `onChange`, `name`, `value`, etc.
 */

var RadioButton = function RadioButton(props, ref) {
  return React__default.createElement(Label.LabelContext.ReverseProvider, {
    value: {
      disabled: props.disabled,
      hasRadioOrCheckbox: true
    }
  }, React__default.createElement("input", _extends({
    ref: ref
  }, props, {
    type: "radio",
    className: cx('kds-RadioButton', props.className)
  })));
};

var RadioButton$1 = React__default.forwardRef(RadioButton);

exports.default = RadioButton$1;
//# sourceMappingURL=RadioButton.js.map
