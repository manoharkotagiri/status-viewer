{"version":3,"file":"createReverseContext.js","sources":["kds-react/src/utils/createReverseContext.js"],"sourcesContent":["import React from 'react'\n\n/**\n * Similar to React.createContext() but instead of the ancestor passing data to it's descendant,\n * the descendant passes data to a single ancestor.\n *\n * @param defaultValue The default value for the reverse context\n * @returns {{ReverseConsumer: ReverseConsumer, ReverseProvider: ReverseProvider}}\n * @example\n const ClassNameContext = createReverseContext(false)\n\n const Parent = props => (\n   <ClassNameContext.ReverseConsumer>\n     {className => <div {...props} className={`Parent ${className}`} />}\n   </ClassNameContext.ReverseConsumer>\n )\n\n const Child = props => (\n   <ClassNameContext.ReverseProvider value={props.className}>\n     <div className={`Child ${props.className}`} />\n   </ClassNameContext.ReverseProvider>\n )\n\n // This will add the child className to the parent as well\n const Example = () =>\n   <Parent>\n     <Child className={`Child-${this.state.num}`} />\n   </Parent>\n */\nexport function createReverseContext (defaultValue) {\n  const NativeContext = React.createContext()\n\n  class ReverseProvider extends React.Component {\n    setParentState = () => {}\n    componentDidMount () {\n      this.setParentState(this.props.value)\n    }\n    componentDidUpdate () {\n      this.setParentState(this.props.value)\n    }\n\n    render () {\n      return (\n        <NativeContext.Consumer>\n          {setState => {\n            if (setState) this.setParentState = setState\n            return this.props.children\n          }}\n        </NativeContext.Consumer>\n      )\n    }\n  }\n\n  class ReverseConsumer extends React.Component {\n    state = { value: defaultValue }\n    setParentState = value =>\n      this.setState({ value: value === undefined ? defaultValue : value })\n    render () {\n      return (\n        <NativeContext.Provider value={this.setParentState}>\n          {this.props.children(this.state.value)}\n        </NativeContext.Provider>\n      )\n    }\n  }\n\n  return {\n    ReverseConsumer,\n    ReverseProvider\n  }\n}\n"],"names":["createReverseContext","defaultValue","NativeContext","React","createContext","ReverseProvider","setParentState","props","value","setState","children","Component","ReverseConsumer","undefined","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BO,SAASA,oBAAT,CAA+BC,YAA/B,EAA6C;AAClD,MAAMC,aAAa,GAAGC,cAAK,CAACC,aAAN,EAAtB;;AADkD,MAG5CC,eAH4C;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,uEAI/B,YAAM,EAJyB;;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAK3B;AACnB,aAAKC,cAAL,CAAoB,KAAKC,KAAL,CAAWC,KAA/B;AACD;AAP+C;AAAA;AAAA,2CAQ1B;AACpB,aAAKF,cAAL,CAAoB,KAAKC,KAAL,CAAWC,KAA/B;AACD;AAV+C;AAAA;AAAA,+BAYtC;AAAA;;AACR,eACEL,6BAAC,aAAD,CAAe,QAAf,QACG,UAAAM,QAAQ,EAAI;AACX,cAAIA,QAAJ,EAAc,MAAI,CAACH,cAAL,GAAsBG,QAAtB;AACd,iBAAO,MAAI,CAACF,KAAL,CAAWG,QAAlB;AACD,SAJH,CADF;AAQD;AArB+C;;AAAA;AAAA,IAGpBP,cAAK,CAACQ,SAHc;;AAAA,MAwB5CC,eAxB4C;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,+DAyBxC;AAAEJ,QAAAA,KAAK,EAAEP;AAAT,OAzBwC;;AAAA,wEA0B/B,UAAAO,KAAK;AAAA,eACpB,OAAKC,QAAL,CAAc;AAAED,UAAAA,KAAK,EAAEA,KAAK,KAAKK,SAAV,GAAsBZ,YAAtB,GAAqCO;AAA9C,SAAd,CADoB;AAAA,OA1B0B;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BA4BtC;AACR,eACEL,6BAAC,aAAD,CAAe,QAAf;AAAwB,UAAA,KAAK,EAAE,KAAKG;AAApC,WACG,KAAKC,KAAL,CAAWG,QAAX,CAAoB,KAAKI,KAAL,CAAWN,KAA/B,CADH,CADF;AAKD;AAlC+C;;AAAA;AAAA,IAwBpBL,cAAK,CAACQ,SAxBc;;AAqClD,SAAO;AACLC,IAAAA,eAAe,EAAfA,eADK;AAELP,IAAAA,eAAe,EAAfA;AAFK,GAAP;AAID;;"}