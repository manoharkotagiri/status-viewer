{"version":3,"file":"useOnResize.js","sources":["kds-react/src/hooks/useOnResize.js"],"sourcesContent":["import { useEffect } from 'react'\nimport { debounce, isFunction } from 'lodash/fp'\nimport { getWindow } from '../utils/windowUtils'\nimport { callSafely } from '../utils/functionUtils'\n\nconst useOnResize = ({ onResize, debounceDuration = 100 } = {}) => {\n  useEffect(() => {\n    let handleResize = () => {\n      window.requestAnimationFrame(() => {\n        onResize()\n      })\n    }\n    if (debounceDuration > 0) {\n      handleResize = debounce(debounceDuration)(handleResize)\n    }\n\n    if (getWindow() && isFunction(onResize)) {\n      window.addEventListener('resize', handleResize)\n    }\n\n    return () => {\n      if (getWindow() && isFunction(onResize)) {\n        callSafely(handleResize.cancel)()\n        window.removeEventListener('resize', handleResize)\n      }\n    }\n  }, [onResize, debounceDuration])\n}\n\nexport default useOnResize\n"],"names":["useOnResize","onResize","debounceDuration","useEffect","handleResize","window","requestAnimationFrame","getWindow","addEventListener","callSafely","cancel","removeEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAA+C;AAAA,iFAAP,EAAO;AAAA,MAA5CC,QAA4C,QAA5CA,QAA4C;AAAA,mCAAlCC,gBAAkC;AAAA,MAAlCA,gBAAkC,sCAAf,GAAe;;AACjEC,EAAAA,eAAS,CAAC,YAAM;AACd,QAAIC,YAAY,GAAG,wBAAM;AACvBC,MAAAA,MAAM,CAACC,qBAAP,CAA6B,YAAM;AACjCL,QAAAA,QAAQ;AACT,OAFD;AAGD,KAJD;;AAKA,QAAIC,gBAAgB,GAAG,CAAvB,EAA0B;AACxBE,MAAAA,YAAY,GAAG,UAASF,gBAAT,EAA2BE,YAA3B,CAAf;AACD;;AAED,QAAIG,qBAAS,MAAM,YAAWN,QAAX,CAAnB,EAAyC;AACvCI,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC;AACD;;AAED,WAAO,YAAM;AACX,UAAIG,qBAAS,MAAM,YAAWN,QAAX,CAAnB,EAAyC;AACvCQ,QAAAA,wBAAU,CAACL,YAAY,CAACM,MAAd,CAAV;AACAL,QAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCP,YAArC;AACD;AACF,KALD;AAMD,GApBQ,EAoBN,CAACH,QAAD,EAAWC,gBAAX,CApBM,CAAT;AAqBD,CAtBD;;"}