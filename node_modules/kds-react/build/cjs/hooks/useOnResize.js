/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Wed Dec 09 2020 21:14:13 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var windowUtils = require('../utils/windowUtils.js');
var functionUtils = require('../utils/functionUtils.js');
var _isFunction = _interopDefault(require('lodash/fp/isFunction'));
var _debounce = _interopDefault(require('lodash/fp/debounce'));

var useOnResize = function useOnResize() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      onResize = _ref.onResize,
      _ref$debounceDuration = _ref.debounceDuration,
      debounceDuration = _ref$debounceDuration === void 0 ? 100 : _ref$debounceDuration;

  React.useEffect(function () {
    var handleResize = function handleResize() {
      window.requestAnimationFrame(function () {
        onResize();
      });
    };

    if (debounceDuration > 0) {
      handleResize = _debounce(debounceDuration)(handleResize);
    }

    if (windowUtils.getWindow() && _isFunction(onResize)) {
      window.addEventListener('resize', handleResize);
    }

    return function () {
      if (windowUtils.getWindow() && _isFunction(onResize)) {
        functionUtils.callSafely(handleResize.cancel)();
        window.removeEventListener('resize', handleResize);
      }
    };
  }, [onResize, debounceDuration]);
};

exports.default = useOnResize;
//# sourceMappingURL=useOnResize.js.map
