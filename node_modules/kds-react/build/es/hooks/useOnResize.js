/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Wed Dec 09 2020 21:14:13 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

import { useEffect } from 'react';
import { getWindow } from '../utils/windowUtils.js';
import { callSafely } from '../utils/functionUtils.js';
import _isFunction from 'lodash/fp/isFunction';
import _debounce from 'lodash/fp/debounce';

var useOnResize = function useOnResize() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      onResize = _ref.onResize,
      _ref$debounceDuration = _ref.debounceDuration,
      debounceDuration = _ref$debounceDuration === void 0 ? 100 : _ref$debounceDuration;

  useEffect(function () {
    var handleResize = function handleResize() {
      window.requestAnimationFrame(function () {
        onResize();
      });
    };

    if (debounceDuration > 0) {
      handleResize = _debounce(debounceDuration)(handleResize);
    }

    if (getWindow() && _isFunction(onResize)) {
      window.addEventListener('resize', handleResize);
    }

    return function () {
      if (getWindow() && _isFunction(onResize)) {
        callSafely(handleResize.cancel)();
        window.removeEventListener('resize', handleResize);
      }
    };
  }, [onResize, debounceDuration]);
};

export default useOnResize;
//# sourceMappingURL=useOnResize.js.map
