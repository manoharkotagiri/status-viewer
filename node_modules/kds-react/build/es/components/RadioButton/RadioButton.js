/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Fri Nov 13 2020 21:58:49 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

import _extends from '@babel/runtime/helpers/extends';
import React from 'react';
import cx from 'classnames';
import { LabelContext } from '../Label/Label.js';

/**
 * Typically, you'll use [`RadioGroup`](./radiogroup) because you'll need multiple radios.
 * Only use this component if you have a need to use a lower-level api.
 *
 * > **Note:** `<RadioButton />` renders a radio button with all props spread on, like so: `<input type="radio" {...props} />`.
 * So you can pass any relevant props such as: `disabled`, `onChange`, `name`, `value`, etc.
 */

var RadioButton = function RadioButton(props, ref) {
  return React.createElement(LabelContext.ReverseProvider, {
    value: {
      disabled: props.disabled,
      hasRadioOrCheckbox: true
    }
  }, React.createElement("input", _extends({
    ref: ref
  }, props, {
    type: "radio",
    className: cx('kds-RadioButton', props.className)
  })));
};

var RadioButton$1 = React.forwardRef(RadioButton);

export default RadioButton$1;
//# sourceMappingURL=RadioButton.js.map
