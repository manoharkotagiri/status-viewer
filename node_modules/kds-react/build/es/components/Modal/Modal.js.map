{"version":3,"file":"Modal.js","sources":["kds-react/src/components/Modal/Modal.js"],"sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport ReactModal from 'react-modal'\nimport { generateUniqueString } from '../../utils/generationUtils'\nimport { getWindow } from '../../utils/windowUtils'\nimport { callSafely } from '../../utils/functionUtils'\nimport Heading from '../Heading/Heading'\nimport Button from '../Button/Button'\nimport Image from '../Image/Image'\nimport Text from '../Text/Text'\nimport { IconClose } from '../Icon'\nimport DismissalButton from '../DismissalButton/DismissalButton'\n\nconst validActionButtonKinds = {\n  primary: ['primary', 'primary-positive', 'primary-negative'],\n  secondary: ['secondary', 'secondary-positive', 'secondary-negative', 'cancel']\n}\n\n/**\n * Modal provides a focused view of important details, objects, or workflows.\n *\n * Use modal only when absolutely necessary, not for simple notifications or excessive confirmations. A modal always has a header. It does not have a disabled state.\n *\n * > **Note:** `<Modal>` renders a `react-modal` with most props spread on. Documentation about the API can be accessed [here](https://github.com/reactjs/react-modal#api-documentation). Additional props (for example, `data-*` attributes for testing ) can be provided through `data` prop, and will be added to the content div. See [General Usage](http://reactcommunity.org/react-modal/#general-usage) section for more details.\n */\n\nclass Modal extends PureComponent {\n  uniqueId = this.props.id || `kds-Modal-${generateUniqueString()}`\n\n  static propTypes = {\n    /** ID to be used instead of auto-generated id */\n    id,\n    /** Text for the modalâ€™s title bar. */\n    headingText: PropTypes.string,\n    /** When true, the modal will be displayed */\n    isOpen: PropTypes.bool,\n    /** Optional className to be applied to the container node */\n    className: PropTypes.string,\n    /** Kind of modal */\n    kind: PropTypes.oneOf([\n      'base',\n      'action',\n      'actionRequired',\n      'onboardingCover',\n      'onboardingStep'\n    ]),\n    /**  Must be a `<Button>` of one of the following kinds:\n     *\n     * [ `primary` (default), `primary-positive`, `primary-negative` ]\n     *\n     * It is not displayed when modal is of kind 'base'.\n     */\n    primaryActionButton: PropTypes.shape({\n      type: Button\n    }),\n    /**  Must be a `<Button>` of **one of** the following kinds:\n     *\n     * [ `secondary` (default), `secondary-positive`, `secondary-negative`, `cancel` ]\n     *\n     * It is not displayed when modal is of kind 'base' or 'onboardingCover'.\n     *\n     * ```Message { \"props\": { \"kind\": \"warning\", \"className\": \"mb-16\" } }\n     * Do not use for 'dismiss' or 'cancel' action, except when kind is 'actionRequired'. Please use `handleCloseModal` prop instead.\n     * ```\n     *  */\n    secondaryActionButton: PropTypes.shape({\n      type: Button\n    }),\n    /** Function to be called when the Close button is pressed. Should dismiss the modal.\n     * Will also be called when overlay is clicked or `Esc` key is pressed, except when kind is 'actionRequired'` */\n    handleCloseModal: PropTypes.func,\n    /** The contents of the Modal's body */\n    children: PropTypes.node,\n    /** Used to add an Icon to the left of the heading */\n    headerIcon: PropTypes.elementType,\n    /** Current step number in a series of onboardingStep modals, to be displayed as 'x' in the format \"x of y\" */\n    onboardingStepCurrent: PropTypes.number,\n    /** Total number of steps in a series of onboardingStep modals, to be displayed as 'y' in the format \"x of y\" */\n    onboardingStepTotal: PropTypes.number,\n    /** Image for Onboarding Modal Header, must be an `<Image />` component */\n    onboardingHeaderImage: PropTypes.shape({\n      type: Image\n    }),\n    /** Function to be called when the modal opens */\n    onAfterOpen: PropTypes.func,\n    /** `aria-label` for the modal content. If not provided, `headingText` will be used. */\n    contentLabel: PropTypes.string\n  }\n\n  static defaultProps = {\n    kind: 'base',\n    isOpen: false\n  }\n\n  getSnapshotBeforeUpdate (prevProps) {\n    const modalIsOpening = this.props.isOpen && !prevProps.isOpen\n\n    if (modalIsOpening) {\n      return getWindow().scrollY\n    }\n    return null\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    const modalHasClosed = !this.props.isOpen && prevProps.isOpen\n\n    if (modalHasClosed && snapshot !== null) {\n      getWindow().scrollTo(0, snapshot)\n    }\n  }\n\n  configureModal (kind) {\n    return {\n      // MODAL CONFIGURATION\n      isOnboarding: kind === 'onboardingCover' || kind === 'onboardingStep',\n      allowClose: kind !== 'actionRequired',\n      showProgressIndicator: kind === 'onboardingStep',\n      showSecondaryButton: kind !== 'onboardingCover',\n      showFooter: kind !== 'base'\n    }\n  }\n\n  render () {\n    const {\n      headingText,\n      isOpen,\n      className,\n      kind,\n      primaryActionButton: PrimaryActionButton,\n      secondaryActionButton: SecondaryActionButton,\n      handleCloseModal,\n      children,\n      headerIcon: HeaderIcon,\n      onboardingStepCurrent,\n      onboardingStepTotal,\n      onboardingHeaderImage,\n      onAfterOpen,\n      contentLabel = '',\n      aria = {},\n      ...props\n    } = this.props\n\n    // MODAL CONFIGURATION\n    const {\n      isOnboarding,\n      allowClose,\n      showProgressIndicator,\n      showSecondaryButton,\n      showFooter\n    } = this.configureModal(kind)\n\n    const heading = (\n      <>\n        {HeaderIcon && (\n          <HeaderIcon size=\"utility-l\" className=\"kds-Modal-headingIcon\" />\n        )}\n        <Heading\n          className=\"kds-Modal-heading\"\n          size=\"l\"\n          tag=\"h2\"\n          id={`${this.uniqueId}-heading`}\n        >\n          {headingText}\n        </Heading>\n      </>\n    )\n\n    const computeAria = () => {\n      // Drop labelledby from aria object because when aria-labelledby is present, it takes precedence over aria-label and some browsers don't focus on the dialog at all when using a screen reader.\n      const { labelledby, describedby, ...rest } = aria\n      const computedDescribedby =\n        this.props['aria-describedby'] || describedby || ''\n      let computedAria = {\n        modal: true,\n        ...rest\n      }\n\n      if (computedDescribedby.length) {\n        computedAria.describedby = computedDescribedby\n      }\n\n      return computedAria\n    }\n\n    return (\n      <ReactModal\n        isOpen={isOpen}\n        ariaHideApp={false}\n        onAfterOpen={callSafely(onAfterOpen)}\n        onRequestClose={callSafely(handleCloseModal)}\n        closeTimeoutMS={100}\n        overlayRef={overlayRef =>\n          overlayRef && overlayRef.setAttribute('role', 'presentation')\n        }\n        overlayClassName={{\n          base: 'kds-Modal-overlay',\n          afterOpen: 'kds-Modal-overlay--afterOpen is-open',\n          beforeClose: 'kds-Modal-overlay--beforeClose is-closed'\n        }}\n        // We want to make sure aria-label is always set, even if it is an empty string.\n        // Alternatively we could set aria-labelledby=\"id-for-heading\", but aria-label turns out be more accessible when using screen reader after testing.\n        // When aria-label=\"\", screen reader announces \"dialog\" by default\n        // When aria-labelledby is present, it takes precedence over aria-label and some browsers don't focus on the dialog when using a screen reader.\n        contentLabel={contentLabel.length ? contentLabel : headingText || ''}\n        aria={computeAria()}\n        id={`${this.uniqueId}`}\n        className={{\n          base: cx(\n            `kds-Modal kds-Modal--l ${\n              isOnboarding ? 'kds-Modal--onboarding ' : ''\n            }kds-Modal--${kind}`,\n            className\n          ),\n          afterOpen: 'kds-Modal--afterOpen is-open',\n          beforeClose: 'kds-Modal--beforeClose is-closed'\n        }}\n        bodyOpenClassName=\"overflow-hidden\"\n        htmlOpenClassName=\"overflow-hidden\"\n        shouldCloseOnOverlayClick={allowClose}\n        {...props}\n      >\n        {allowClose && (\n          <DismissalButton\n            className=\"kds-Modal-closeButton\"\n            aria-label=\"Close pop-up\"\n            onClick={callSafely(handleCloseModal)}\n          />\n        )}\n\n        {/* HEADER */}\n        <header className=\"kds-Modal-header\">\n          {isOnboarding ? (\n            <div className=\"kds-Modal-headerImage\">{onboardingHeaderImage}</div>\n          ) : (\n            heading\n          )}\n        </header>\n\n        {/* BODY */}\n        <div className=\"kds-Modal-body\">\n          <div className=\"kds-Modal-content\">\n            {isOnboarding && heading}\n            {children}\n          </div>\n        </div>\n        {showProgressIndicator && (\n          <Text size=\"l\" className=\"kds-Modal-progressIndicator\">\n            {`${onboardingStepCurrent} of ${onboardingStepTotal}`}\n          </Text>\n        )}\n        {showFooter && (PrimaryActionButton || SecondaryActionButton) && (\n          <footer\n            className={cx(\n              `kds-Modal-footer ${\n                showProgressIndicator ? 'kds-Modal-footer-columns' : ''\n              }`,\n              className\n            )}\n          >\n            <div className=\"kds-Modal-footer-buttons\">\n              {standardizeActionButton(PrimaryActionButton, 'primary')}\n              {showSecondaryButton &&\n                standardizeActionButton(\n                  SecondaryActionButton,\n                  `${PrimaryActionButton ? 'secondary' : 'primary'}`\n                )}\n            </div>\n          </footer>\n        )}\n      </ReactModal>\n    )\n  }\n}\n\nconst isValidButtonKind = (kind, validKinds) =>\n  validKinds.filter(k => k === kind).length > 0\n\nconst standardizeActionButton = (button, actionKind) => {\n  if (button && React.isValidElement(button) && button.type === Button) {\n    return React.cloneElement(button, {\n      // Make sure button kind is valid. If not use default for the action type\n      kind: isValidButtonKind(\n        button.props.kind,\n        validActionButtonKinds[actionKind]\n      )\n        ? button.props.kind\n        : actionKind,\n      className: cx(\n        button.props.className,\n        'kds-Modal-actionButton',\n        `kds-Modal-actionButton--${actionKind}`\n      )\n    })\n  }\n\n  return null\n}\n\nexport default Modal\n"],"names":["validActionButtonKinds","primary","secondary","Modal","props","id","generateUniqueString","prevProps","modalIsOpening","isOpen","getWindow","scrollY","prevState","snapshot","modalHasClosed","scrollTo","kind","isOnboarding","allowClose","showProgressIndicator","showSecondaryButton","showFooter","headingText","className","PrimaryActionButton","primaryActionButton","SecondaryActionButton","secondaryActionButton","handleCloseModal","children","HeaderIcon","headerIcon","onboardingStepCurrent","onboardingStepTotal","onboardingHeaderImage","onAfterOpen","contentLabel","aria","configureModal","heading","uniqueId","computeAria","labelledby","describedby","rest","computedDescribedby","computedAria","modal","length","callSafely","overlayRef","setAttribute","base","afterOpen","beforeClose","cx","standardizeActionButton","PureComponent","isValidButtonKind","validKinds","filter","k","button","actionKind","React","isValidElement","type","Button","cloneElement"],"mappings":"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"}