/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Fri Nov 13 2020 21:58:49 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

import _extends from '@babel/runtime/helpers/extends';
import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';
import React from 'react';
import cx from 'classnames';
import _classCallCheck from '@babel/runtime/helpers/classCallCheck';
import _createClass from '@babel/runtime/helpers/createClass';
import _inherits from '@babel/runtime/helpers/inherits';
import _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';
import _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { sizes as propOpts_1 } from './propOpts.js';

function _createSuper(Derived) {
  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  return function () {
    var Super = _getPrototypeOf(Derived),
        result;

    if (isNativeReflectConstruct()) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}
/**
 * Accent Icons act as entry points to additional information or content. They add color and life to the interface while visually expressing our product offerings.
 *
 * Each `AccentIcon` is exported as a named component. e.g. `AccentIconAccount`, `AccentIconAddToList`, etc.
 * This allows you to import only the icons you'll use, which helps to keep bundle size low.
 */

var AccentIcon =
/*#__PURE__*/
function (_React$Component) {
  _inherits(AccentIcon, _React$Component);

  var _super = _createSuper(AccentIcon);

  function AccentIcon() {
    _classCallCheck(this, AccentIcon);

    return _super.apply(this, arguments);
  }

  _createClass(AccentIcon, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          size = _this$props.size,
          props = _objectWithoutProperties(_this$props, ["className", "size"]);
      /** Get correct class based on provided size prop. */


      var fontSizeClass = propOpts_1[size];
      var classes = cx('kds-AccentIcon', fontSizeClass, className);
      return React.createElement("svg", _extends({
        className: classes,
        focusable: "false",
        width: "1em",
        height: "1em",
        viewBox: "0 0 48 48"
      }, props));
    }
  }]);

  return AccentIcon;
}(React.Component);

_defineProperty(AccentIcon, "defaultProps", {
  size: 's'
});

export default AccentIcon;
//# sourceMappingURL=AccentIcon.js.map
