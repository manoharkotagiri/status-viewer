/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Fri Nov 13 2020 21:58:49 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

import _extends from '@babel/runtime/helpers/extends';
import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';
import React from 'react';
import cx from 'classnames';
import PropTypes from 'prop-types';
import { LabelContext } from '../Label/Label.js';

/**
 * `<Select />` lets users choose from a list of items. Use them for things like:
 * - selecting an item from a list of 3&ndash;15 items
 *
 * > **Note:** `<Select />` renders a `<select>` with all props spread on, like so: `<select {...props} />`.
 * So you can pass any native props such as `id`, `className`, `aria-*` attributes, etc.
 */

var Select = function Select(_ref, ref) {
  var compact = _ref.compact,
      selectProps = _objectWithoutProperties(_ref, ["compact"]);

  return React.createElement(LabelContext.ReverseProvider, {
    value: {
      disabled: selectProps.disabled,
      hasField: true
    }
  }, React.createElement("select", _extends({
    ref: ref
  }, selectProps, {
    className: cx('kds-Select', {
      'kds-Select--compact': compact
    }, selectProps.className)
  })));
}; // we do this because forwardRef render functions do not support propTypes or defaultProps


var SelectWithForwardRef = React.forwardRef(Select);
SelectWithForwardRef.displayName = 'Select';
SelectWithForwardRef.propTypes = {
  /** Compact select size. */
  compact: PropTypes.bool
};
SelectWithForwardRef.defaultProps = {
  compact: false
};

export default SelectWithForwardRef;
//# sourceMappingURL=Select.js.map
