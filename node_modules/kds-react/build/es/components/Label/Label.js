/* eslint-disable */

/***********************************************************************************************
  THIS IS AN AUTO-GENERATED FILE. DO NOT MAKE CHANGES HERE

  Generated on: Fri Nov 13 2020 21:58:49 GMT+0000 (Coordinated Universal Time)
************************************************************************************************/

import _extends from '@babel/runtime/helpers/extends';
import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';
import React from 'react';
import cx from 'classnames';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { createReverseContext } from '../../utils/createReverseContext.js';

/**
 * `<Label>` is used to add an accessible name to [labelable elements](https://www.w3.org/TR/html5/sec-forms.html#labelable-element) like `<Checkbox>`, `<RadioButton>`, and most native form controls.
 *
 * > **Note:** This renders an HTML `<label>` with props spread on, like so: `<label {...props} />`.
 * You can pass any native props like `htmlFor`, `form`, `aria-*` attributes, and so on.
 *
 * If you are attempting to label a form control, use our pre-built [Form Controls](./form) that come with labelling capability.
 */

var Label = function Label(_ref) {
  var _ref$leftOfInput = _ref.leftOfInput,
      leftOfInput = _ref$leftOfInput === void 0 ? false : _ref$leftOfInput,
      labelProps = _objectWithoutProperties(_ref, ["leftOfInput"]);

  return React.createElement(LabelContext.ReverseConsumer, null, function (_ref2) {
    var hasField = _ref2.hasField,
        hasRadioOrCheckbox = _ref2.hasRadioOrCheckbox;
    return React.createElement("label", _extends({}, labelProps, {
      className: cx('kds-Label', leftOfInput && 'kds-Label--leftOfInput', hasField && 'kds-Label--hasField', hasRadioOrCheckbox && 'kds-Label--hasRadioOrCheckbox', labelProps.className, _defineProperty({}, "kds-Text--".concat(labelProps.size), labelProps.size))
    }));
  });
};

Label.defaultProps = {
  size: 'm'
};
var LabelContext = createReverseContext({
  hasField: false,
  hasRadioOrCheckbox: false
});

export default Label;
export { LabelContext };
//# sourceMappingURL=Label.js.map
