{"version":3,"file":"FormDate.js","sources":["kds-react/src/components/Form/FormDate/FormDate.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport FormField from '../FormField/FormField'\nimport {\n  contains,\n  required,\n  addRequiredToValidations\n} from '../validations/_prebuiltValidations'\n\n/**\n * `FormDate` lets users enter a date in MM/DD/YYYY format for submission via a form.\n *\n * `<FormDate />` renders a [`<FormField />`](./formfield) with most props spread on and `type` over-written to `date`.\n * For more details, see the [FormField](./formfield) component.\n *\n * It comes with accessible form features:\n *\n * - label and description\n * - validation messaging\n * - aria attributes\n *\n * **Requires *custom-event* polyfill for custom validations to work in IE11** [See Polyfills](./polyfills)\n */\n\nclass FormDate extends React.Component {\n  render () {\n    const {\n      required: requiredProp,\n      validations,\n      className,\n      ...props\n    } = this.props\n\n    return (\n      <FormField\n        {...props}\n        className={cx('kds-FormDate', className)}\n        type=\"date\"\n        placeholder=\"mm/dd/yyyy\"\n        title=\"Please enter a date in the format: MM/DD/YYYY\"\n        // We want to display the required valid date message when the field is required.\n        validations={\n          requiredProp && !contains(validations, required)\n            ? addRequiredToValidations(\n              validations,\n              'A valid date input is required.'\n            )\n            : validations\n        }\n      />\n    )\n  }\n}\n\nFormDate.defaultProps = {\n  validations: [],\n  required: false\n}\n\nFormDate.propTypes = {\n  /** Text for this field's label. */\n  label: PropTypes.string.isRequired,\n  /** Name for this field. Will be used as the key in the form data object passed to the `onSubmit` handler. Defaults to the value of the `label` prop. */\n  name: PropTypes.string,\n  /** Set to `true` if this date input is required. */\n  required: PropTypes.bool,\n  /** An array of pre-built [`Form.validations`](./forminput#Validations) and/or [custom validations](./forminput#Custom%20Validations),\n   * where `text` is the message to show, and `validate` is a predicate to test for the validation's\n   * success state. */\n  validations: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      validate: PropTypes.func.isRequired\n    })\n  )\n}\n\nexport default FormDate\n"],"names":["FormDate","props","requiredProp","required","validations","className","cx","contains","addRequiredToValidations","React","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;;;;;;;;;;;;;;;IAeMA;;;;;;;;;;;;;;;6BACM;AAAA,wBAMJ,KAAKC,KAND;AAAA,UAEIC,YAFJ,eAENC,QAFM;AAAA,UAGNC,WAHM,eAGNA,WAHM;AAAA,UAINC,SAJM,eAINA,SAJM;AAAA,UAKHJ,KALG;;AAQR,aACE,oBAAC,SAAD,eACMA,KADN;AAEE,QAAA,SAAS,EAAEK,EAAE,CAAC,cAAD,EAAiBD,SAAjB,CAFf;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,YAJd;AAKE,QAAA,KAAK,EAAC,+CALR;AAAA;AAOE,QAAA,WAAW,EACTH,YAAY,IAAI,CAACK,QAAQ,CAACH,WAAD,EAAcD,QAAd,CAAzB,GACIK,wBAAwB,CACxBJ,WADwB,EAExB,iCAFwB,CAD5B,GAKIA;AAbR,SADF;AAkBD;;;;EA3BoBK,KAAK,CAACC;;AA8B7BV,QAAQ,CAACW,YAAT,GAAwB;AACtBP,EAAAA,WAAW,EAAE,EADS;AAEtBD,EAAAA,QAAQ,EAAE;AAFY,CAAxB;;"}