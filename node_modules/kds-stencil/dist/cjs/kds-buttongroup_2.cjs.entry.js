'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-760a72a8.js');
const objectUtils = require('./objectUtils-82e3abdc.js');
const generateUniqueString = require('./generateUniqueString-50ca7b32.js');
const fragment = require('./fragment-438ef2f3.js');

const buttonGroupCss = ":root{--breakpoint-s:37.5em;--breakpoint-m:56.25em;--breakpoint-l:75em;--body-xs:0.625rem;--body-s:0.750rem;--body-m:0.844rem;--body-l:1.00rem;--heading-s:1.00rem;--heading-m:1.125rem;--heading-l:1.250rem;--heading-xl:2.00rem;--shadow-0:none;--shadow-2:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);--shadow-4:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2);--shadow-8:0 8px 10px 1px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2);--shadow-12:0 12px 7px 2px rgba(0,0,0,0.14),0 5px 22px 4px rgba(0,0,0,0.12),0 7px 8px -4px rgba(0,0,0,0.2);--shadow-16:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2);--shadow-24:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2);--font-base:-apple-system,BlinkMacSystemFont,Roboto,Segoe UI,system-ui,Helvetica Neue,Ubuntu,sans-serif;--font-secondary:Nunito,-apple-system,BlinkMacSystemFont,Roboto,Segoe UI,system-ui,Helvetica Neue,Ubuntu,sans-serif;--font-mono:Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;--font-weight-normal:400;--font-weight-medium:500;--font-weight-bold:700;--leading-body-xs:1.6;--leading-body-s:1.666666666666667;--leading-body-m:1.481481481481481;--leading-body-l:1.5;--leading-heading-s:1.25;--leading-heading-m:1.111111111111111;--leading-heading-l:1.2;--leading-heading-xl:1.25;--max-line-length-narrow-viewport:24.25rem;--min-line-length-wide-viewport:17.75rem;--max-line-length-wide-viewport:33rem;--border-style-default:solid;--border-style-callout:dashed;--border-width-thin:1px;--border-width-thick:2px;--border-radius-none:0;--border-radius-extra-small:0.125rem;--border-radius-small:0.25rem;--border-radius-medium:0.50rem;--border-radius-large:1.00rem;--border-radius-extra-large:1.25rem;--border-radius-full:625rem;--z-index-page-crucial:5;--z-index-page-alerts:4;--z-index-page-modals:3;--z-index-page-popovers:2;--z-index-page-navs:1;--z-index-stack-highest:3;--z-index-stack-higher:2;--z-index-stack-high:1;--z-index-stack-base:0;--z-index-stack-below:-1;--color-bakers-primary:#ed3024;--color-citymarket-primary:#ed3024;--color-dillons-primary:#ca1626;--color-fredmeyer-primary:#d9272e;--color-frysfood-primary:#e2231a;--color-gerbes-primary:#ca1626;--color-jaycfoods-primary:#d72a28;--color-kingsoopers-primary:#ed3024;--color-metromarket-primary:#678339;--color-owensmarket-primary:#ec1c24;--color-optup-primary:#95c93f;--color-pay-less-primary:#ec1c24;--color-pharmacy-primary:#238dc1;--color-picknsave-primary:#68944f;--color-ralphs-primary:#eb0029;--color-smiths-primary:#d21245;--color-kroger-primary:#084999;--color-kroger-sea:#4471b7;--color-kroger-sky:#418fde;--color-kroger-ice:#8dc8e8;--color-kroger-stone:#b3d7ed;--color-brand-primary:#084999;--color-default-900:#1d1e1f;--color-default-800:#3f4041;--color-default-700:#5d5e60;--color-default-600:#727374;--color-default-500:#9b9c9d;--color-default-400:#bbbcbe;--color-default-300:#dfe1e1;--color-default-200:#eff0f1;--color-default-100:#f8f9f9;--color-default-50:#fff;--color-brand-900:#084999;--color-brand-800:#1567b8;--color-brand-700:#1b77ca;--color-brand-600:#2389dc;--color-brand-500:#2997ea;--color-brand-400:#47a6ed;--color-brand-300:#67b5ef;--color-brand-200:#91caf4;--color-brand-100:#bbdef8;--color-brand-50:#e3f2fc;--color-neutral-900:#385397;--color-neutral-800:#4471b7;--color-neutral-700:#4b81c9;--color-neutral-600:#5493dc;--color-neutral-500:#5ba1ea;--color-neutral-400:#6aafed;--color-neutral-300:#80bdf0;--color-neutral-200:#a0d0f6;--color-neutral-100:#c3e2f9;--color-neutral-50:#e6f3fc;--color-action-900:#385397;--color-action-800:#4471b7;--color-action-700:#4b81c9;--color-action-600:#5493dc;--color-action-500:#5ba1ea;--color-action-400:#6aafed;--color-action-300:#80bdf0;--color-action-200:#a0d0f6;--color-action-100:#c3e2f9;--color-action-50:#e6f3fc;--color-special-900:#492d7c;--color-special-800:#64378c;--color-special-700:#733d97;--color-special-600:#8444a0;--color-special-500:#9149a8;--color-special-400:#a15eb5;--color-special-300:#b178c3;--color-special-200:#c79dd5;--color-special-100:#ddc4e5;--color-special-50:#f1e7f4;--color-callout-900:#ff6700;--color-callout-800:#ff8900;--color-callout-700:#ff9b00;--color-callout-600:#feae00;--color-callout-500:#febd00;--color-callout-400:#fec600;--color-callout-300:#fed241;--color-callout-200:#ffde7a;--color-callout-100:#ffebaf;--color-callout-50:#fff7df;--color-negative-900:#ca0013;--color-negative-800:#d70022;--color-negative-700:#e4002a;--color-negative-600:#f61930;--color-negative-500:#ff282f;--color-negative-400:#ff444d;--color-negative-300:#f36c71;--color-negative-200:#f99699;--color-negative-100:#ffcbd3;--color-negative-50:#ffeaee;--color-positive-900:#006334;--color-positive-800:#018249;--color-positive-700:#0c9455;--color-positive-600:#18a662;--color-positive-500:#21b56c;--color-positive-400:#4ec183;--color-positive-300:#71cc98;--color-positive-200:#9cdab5;--color-positive-100:#c3e8d2;--color-positive-50:#e6f6ed;--size-0:0;--size-1:0.0625rem;--size-2:0.125rem;--size-4:0.25rem;--size-8:0.5rem;--size-12:0.75rem;--size-16:1rem;--size-20:1.25rem;--size-24:1.5rem;--size-28:1.75rem;--size-32:2rem;--size-40:2.5rem;--size-48:3rem;--size-56:3.5rem;--size-64:4rem;--size-72:4.5rem;--size-80:5rem;--size-96:6rem;--size-144:9rem}.kds-ButtonGroup{background-color:#fff;border-radius:.5rem;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;z-index:0;position:relative}.kds-ButtonGroup--horizontal{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;vertical-align:middle}.kds-ButtonGroup--vertical{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.kds-ButtonGroup-member{position:relative;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:1px solid #4471b7;vertical-align:middle;min-height:2.5rem;font-size:.844rem;font-weight:500;-webkit-box-sizing:border-box;box-sizing:border-box;min-width:4rem;padding:0 1rem;background-color:#fff;color:#4471b7;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.kds-ButtonGroup--horizontal>.kds-ButtonGroup-member-wrapper:not(:first-of-type),.kds-ButtonGroup--horizontal>.kds-ButtonGroup-member:not(:first-of-type){margin-left:-1px}.kds-ButtonGroup--vertical>.kds-ButtonGroup-member-wrapper:not(:first-of-type),.kds-ButtonGroup--vertical>.kds-ButtonGroup-member:not(:first-of-type){margin-top:-1px}.kds-ButtonGroup-member-wrapper{display:inline-block}.kds-ButtonGroup-member-text[title]{position:absolute;top:0;bottom:0;right:0;left:0}.kds-ButtonGroup-member-wrapper>.kds-ButtonGroup-member{width:100%}.kds-ButtonGroup--horizontal .kds-ButtonGroup-member{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.kds-ButtonGroup-input{width:.0625rem;height:.0625rem;border:0;clip:rect(0 0 0 0);margin:-.0625rem;overflow:hidden;padding:0;position:absolute}.kds-ButtonGroup .kds-ButtonGroup-member--hasIconOnly{padding:0;min-width:2.5rem;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.kds-ButtonGroup.kds-ButtonGroup--vertical>.kds-ButtonGroup-member-wrapper:first-of-type .kds-ButtonGroup-member,.kds-ButtonGroup.kds-ButtonGroup--vertical>.kds-ButtonGroup-member:first-of-type{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.kds-ButtonGroup.kds-ButtonGroup--vertical>.kds-ButtonGroup-member-wrapper:last-of-type .kds-ButtonGroup-member,.kds-ButtonGroup.kds-ButtonGroup--vertical>.kds-ButtonGroup-member:last-of-type{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem;border-bottom-width:1px}.kds-ButtonGroup.kds-ButtonGroup--horizontal>.kds-ButtonGroup-member-wrapper:first-of-type .kds-ButtonGroup-member,.kds-ButtonGroup.kds-ButtonGroup--horizontal>.kds-ButtonGroup-member:first-of-type{border-top-left-radius:.5rem;border-bottom-left-radius:.5rem}.kds-ButtonGroup.kds-ButtonGroup--horizontal>.kds-ButtonGroup-member-wrapper:last-of-type .kds-ButtonGroup-member,.kds-ButtonGroup.kds-ButtonGroup--horizontal>.kds-ButtonGroup-member:last-of-type{border-top-right-radius:.5rem;border-bottom-right-radius:.5rem;border-right-width:1px}.kds-ButtonGroup-input:enabled:active+.kds-ButtonGroup-member,.kds-ButtonGroup-input:enabled:focus+.kds-ButtonGroup-member,.kds-ButtonGroup-member-wrapper[focus-within],.kds-ButtonGroup-member:enabled:active,.kds-ButtonGroup-member:enabled:focus{z-index:2}.kds-ButtonGroup-input:enabled:active+.kds-ButtonGroup-member,.kds-ButtonGroup-input:enabled:focus+.kds-ButtonGroup-member,.kds-ButtonGroup-member-wrapper[focus-within],.kds-ButtonGroup-member:enabled:active,.kds-ButtonGroup-member:enabled:focus{z-index:2}.kds-ButtonGroup-input:enabled:active+.kds-ButtonGroup-member,.kds-ButtonGroup-input:enabled:focus+.kds-ButtonGroup-member,.kds-ButtonGroup-member-wrapper:focus-within,.kds-ButtonGroup-member:enabled:active,.kds-ButtonGroup-member:enabled:focus{z-index:2}.kds-ButtonGroup-input:enabled:active+.kds-ButtonGroup-member,.kds-ButtonGroup-input:enabled:focus+.kds-ButtonGroup-member{outline:.0625rem dotted #4471b7;outline:5px auto -webkit-focus-ring-color}.kds-ButtonGroup-input:enabled:hover+.kds-ButtonGroup-member,.kds-ButtonGroup-member:enabled:hover{background-color:#f8f9f9}.kds-ButtonGroup-input:enabled:active+.kds-ButtonGroup-member,.kds-ButtonGroup-member:enabled:active{background-color:#eff0f1;border-color:#385397;color:#385397}.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member{background-color:#4471b7;color:#fff}.kds-ButtonGroup-input:enabled+.kds-ButtonGroup-member,.kds-ButtonGroup-member:enabled{position:relative;z-index:1}.kds-ButtonGroup--horizontal>.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member,.kds-ButtonGroup--horizontal>.kds-ButtonGroup-member-wrapper>.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member{border-left-color:#fff;border-right-color:#fff}.kds-ButtonGroup--horizontal>.kds-ButtonGroup-input:checked:first-of-type+.kds-ButtonGroup-member,.kds-ButtonGroup--horizontal>.kds-ButtonGroup-member-wrapper:first-of-type>.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member{border-left-color:#4471b7}.kds-ButtonGroup--horizontal>.kds-ButtonGroup-input:checked:last-of-type+.kds-ButtonGroup-member,.kds-ButtonGroup--horizontal>.kds-ButtonGroup-member-wrapper:last-of-type>.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member{border-right-color:#4471b7}.kds-ButtonGroup--vertical>.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member,.kds-ButtonGroup--vertical>.kds-ButtonGroup-member-wrapper>.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member{border-top-color:#fff;border-bottom-color:#fff}.kds-ButtonGroup--vertical>.kds-ButtonGroup-input:checked:first-of-type+.kds-ButtonGroup-member,.kds-ButtonGroup--vertical>.kds-ButtonGroup-member-wrapper:first-of-type>.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member{border-top-color:#4471b7}.kds-ButtonGroup--vertical>.kds-ButtonGroup-input:checked:last-of-type+.kds-ButtonGroup-member,.kds-ButtonGroup--vertical>.kds-ButtonGroup-member-wrapper:last-of-type>.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member{border-bottom-color:#4471b7}.kds-ButtonGroup-input:enabled:checked:active+.kds-ButtonGroup-member,.kds-ButtonGroup-input:enabled:checked:hover+.kds-ButtonGroup-member{background-color:#385397;color:#fff}.kds-ButtonGroup-member-badge .kds-Badge--pinned{-webkit-transform:translate(25%,-25%);transform:translate(25%,-25%)}.kds-ButtonGroup-member-icon+.kds-ButtonGroup-member-text:not([title]),.kds-ButtonGroup-member-text:not([title])+.kds-ButtonGroup-member-icon{margin-left:.5rem}.kds-ButtonGroup-input:checked+.kds-ButtonGroup-member .kds-Badge{fill:#fff;color:#4471b7}.kds-ButtonGroup-input:checked:checked:active+.kds-ButtonGroup-member .kds-Badge,.kds-ButtonGroup-input:checked:checked:hover+.kds-ButtonGroup-member .kds-Badge{color:#385397}.kds-ButtonGroup-input:disabled+.kds-ButtonGroup-member,.kds-ButtonGroup-member:disabled{opacity:.4;cursor:not-allowed}";

const KdsButtonGroup = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /** Displays toolbar horizontally if true */
    this.vertical = false;
    /** Sets type of button group. */
    this.groupType = "button";
    /** Sets radio group name to be used when groupType is "radio". Uniquely generated if not provided. */
    this.groupName = generateUniqueString.generateUniqueString();
  }
  render() {
    return (index.h(index.Host, { class: {
        "kds-ButtonGroup": true,
        "kds-ButtonGroup--horizontal": !this.vertical,
        "kds-ButtonGroup--vertical": this.vertical
      }, role: "toolbar" }, index.h("slot", null)));
  }
  get hostEl() { return index.getElement(this); }
};
KdsButtonGroup.style = buttonGroupCss;

const KdsButtonGroupMember = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /** Sets member to disabled state if true */
    this.disabled = false;
    /** Sets the placement of the icon in a member to the right or left of text. */
    this.iconPlacement = "left";
    this.tooltip = false;
    this.tooltipSide = "bottom";
    this.tooltipAlign = "center";
    this.tooltipType = "description";
    this.tooltipText = this.readerLabel;
    /** Custom Event Emitted when internal `input` or `button` is clicked. Detail contains click event from native element. */
    // @Event({ bubbles: true }) clicked: EventEmitter<SerializedEvent>;
    /** Emits when internal `input` is changed. Detail contains change event from native element. */
    // @Event({ bubbles: true }) changed: EventEmitter<SerializedEvent>;
    this.uniqueId = generateUniqueString.generateUniqueString();
  }
  componentWillLoad() {
    this.buttonGroup = this.hostEl.parentElement;
    this.validateReaderLabel(this.readerLabel);
  }
  validateReaderLabel(readerLabel) {
    if (readerLabel && readerLabel.length > 0) {
      return;
    }
    else {
      console.error(`🚨 Accessibility No-No: You must set a reader-label on kds-buttongroup-member for proper screen reader dictation.`);
    }
  }
  renderIcon(iconOnly) {
    const Icon = this.icon;
    if (objectUtils.isTruthyOrZero(this.badgeValue)) {
      return (index.h("kds-badge", { class: {
          "kds-ButtonGroup-member-icon": true,
          "kds-ButtonGroup-member-badge": true
        }, count: this.badgeValue }, index.h(Icon, { size: "m" })));
    }
    else {
      return (index.h(Icon, { size: "m", class: {
          "kds-ButtonGroup-member-icon": true,
          "kds-ButtonGroup-member-icon--onlyChild": iconOnly
        } }));
    }
  }
  renderText(iconOnly) {
    return iconOnly ? (index.h("span", { class: "kds-ButtonGroup-member-text", "aria-hidden": "true", title: this.readerLabel || "" })) : (index.h("span", { class: "kds-ButtonGroup-member-text" }, this.textLabel));
  }
  buildLabel() {
    let ariaLabel = this.readerLabel || this.textLabel || this.icon.replace("kds-icon-", "");
    ariaLabel = objectUtils.isTruthyOrZero(this.badgeValue)
      ? `${ariaLabel}: ${this.badgeValue}`
      : ariaLabel;
    return ariaLabel;
  }
  /** Selects member when called. Only valid for `checkbox` and `radio` group types. */
  async selectMember() {
    if (this.inputElement) {
      this.inputElement.checked = true;
    }
    else {
      this.defaultSelected = true;
    }
  }
  render() {
    let iconOnly = this.icon && !this.textLabel;
    const ariaLabel = this.buildLabel();
    const Type = this.buttonGroup.groupType === "button" ? "button" : "input";
    const TypeJSX = () => (index.h(Type, { type: this.buttonGroup.groupType !== "button" && this.buttonGroup.groupType, id: this.buttonGroup.groupType !== "button" &&
        `kds-ButtonGroup-input-${this.uniqueId}`, name: this.buttonGroup.groupType === "radio" && this.buttonGroup.groupName, "aria-label": ariaLabel, disabled: this.disabled, checked: this.inputElement ? this.inputElement.checked : this.defaultSelected,
      // onClick={(event: SerializedEvent) => this.clicked.emit(event)}
      // onChange={(event: SerializedEvent) => this.changed.emit(event)}
      ref: el => (this.inputElement = el instanceof HTMLInputElement && el), class: {
        "kds-ButtonGroup-member": this.buttonGroup.groupType === "button",
        "kds-ButtonGroup-input": this.buttonGroup.groupType !== "button",
        "kds-ButtonGroup-member--hasIconOnly": iconOnly,
        "kds-ButtonGroup-member-element": true
      } }, this.buttonGroup.groupType === "button" && (index.h(fragment.Fragment, null, this.icon &&
      this.iconPlacement === "left" &&
      this.renderIcon(iconOnly), this.renderText(iconOnly), index.h("slot", null), this.icon &&
      this.iconPlacement === "right" &&
      this.renderIcon(iconOnly)))));
    const LabelJSX = () => (index.h("label", { htmlFor: `kds-ButtonGroup-input-${this.uniqueId}`, class: {
        "kds-ButtonGroup-member": true,
        "kds-ButtonGroup-member--hasIconOnly": iconOnly
      }, "aria-hidden": "true", onClick: event => event.stopPropagation() }, this.icon &&
      this.iconPlacement === "left" &&
      this.renderIcon(iconOnly), this.renderText(iconOnly), index.h("slot", null), this.icon &&
      this.iconPlacement === "right" &&
      this.renderIcon(iconOnly)));
    return (index.h(index.Host, { class: "kds-ButtonGroup-member-wrapper", style: this.disabled && { "pointer-events": "none" } }, this.buttonGroup.groupType === "button" &&
      (this.tooltip ? (index.h("kds-tooltippable", { side: this.tooltipSide, align: this.tooltipAlign, tooltipText: this.tooltipText, tooltipType: this.tooltipType }, index.h(TypeJSX, null), index.h("slot", { name: "tooltipText" }))) : (index.h(TypeJSX, null))), this.buttonGroup.groupType !== "button" && (index.h(fragment.Fragment, null, index.h(TypeJSX, null), this.tooltip ? (index.h("kds-tooltippable", { side: this.tooltipSide, align: this.tooltipAlign, tooltipText: this.tooltipText, tooltipType: this.tooltipType }, index.h(LabelJSX, null), index.h("slot", { name: "tooltipText" }))) : (index.h(LabelJSX, null))))));
  }
  get hostEl() { return index.getElement(this); }
  static get watchers() { return {
    "readerLabel": ["validateReaderLabel"]
  }; }
};

exports.kds_buttongroup = KdsButtonGroup;
exports.kds_buttongroup_member = KdsButtonGroupMember;
