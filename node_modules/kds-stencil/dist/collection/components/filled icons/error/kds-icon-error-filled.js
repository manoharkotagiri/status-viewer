import { Component, Prop, Element, h } from "@stencil/core";
import { Fragment } from "../../../utils/fragment";
/**
 * Filled icons inherit most of their behavior from standard [KDS icons](/stencil/components/Icon) with one key difference:
 *
 * The color of the paths and the fill of the icon are static and cannot be changed via a `color` prop.
 *
 */
export class KdsIconErrorFilled {
  render() {
    const paths = (h(Fragment, null,
      h("circle", { class: "kds-FilledIcon-error", cx: "8", cy: "8", r: "5.75" }),
      h("path", { d: "M8.62,5.31,8.38,8.57A.36.36,0,0,1,8,8.93a.38.38,0,0,1-.38-.36L7.37,5.31A.67.67,0,0,1,8,4.64.65.65,0,0,1,8.62,5.31Z" }),
      h("circle", { cx: "8", cy: "10.56", r: "0.6" }),
      h("path", { d: "M8,14.12A6.12,6.12,0,1,1,14.12,8,6.12,6.12,0,0,1,8,14.12ZM8,2.62A5.38,5.38,0,1,0,13.38,8,5.38,5.38,0,0,0,8,2.62Z" })));
    return h("kds-icon", { class: "kds-FilledIcon", size: this.size, paths: paths });
  }
  static get is() { return "kds-icon-error-filled"; }
  static get originalStyleUrls() { return {
    "$": ["kds-icon-error-filled.css"]
  }; }
  static get styleUrls() { return {
    "$": ["kds-icon-error-filled.css"]
  }; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
        "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "KDS designated sizes."
      },
      "attribute": "size",
      "reflect": false
    }
  }; }
  static get elementRef() { return "hostEl"; }
}
