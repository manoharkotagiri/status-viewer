import { Component, Event, Prop, Element, h, Host } from "@stencil/core";
/**
 * Messages are a way to communicate with users through the UI.
 */
export class KdsMessage {
  constructor() {
    /** Sets the color scheme and icon. */
    this.kind = "info";
    /** Determines if closable. */
    this.closable = false;
    this.kindToIconMap = {
      info: "kds-icon-info",
      success: "kds-icon-success",
      warning: "kds-icon-warning",
      error: "kds-icon-error"
    };
    this.onCloseButtonClick = () => {
      this.messageClosed.emit();
      this.hostEl.remove();
    };
  }
  render() {
    const { kind, closable, onCloseButtonClick } = this;
    const MessageIcon = this.kindToIconMap[kind];
    return (h(Host, { class: {
        "kds-Message": true,
        [`kds-Message--${this.kind}`]: true
      } },
      h(MessageIcon, { class: "kds-Message-icon", size: "utility-s" }),
      h("kds-text", { class: "kds-Message-content", size: "s" },
        h("slot", null)),
      closable && (h("button", { "aria-label": "Close alert", "data-testid": "kds-Message-closeButton", onClick: onCloseButtonClick, class: {
          "kds-DismissalButton kds-Message-closeButton": true,
          "kds-DismissalButton--positive": this.kind === "success",
          "kds-DismissalButton--neutral": this.kind === "info",
          "kds-DismissalButton--callout": this.kind === "warning",
          "kds-DismissalButton--negative": this.kind === "error"
        } },
        h("kds-icon-close", { size: "xs" })))));
  }
  static get is() { return "kds-message"; }
  static get originalStyleUrls() { return {
    "$": ["kds-message.css"]
  }; }
  static get styleUrls() { return {
    "$": ["kds-message.css"]
  }; }
  static get properties() { return {
    "kind": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "\"success\" | \"info\" | \"warning\" | \"error\"",
        "resolved": "\"error\" | \"info\" | \"success\" | \"warning\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Sets the color scheme and icon."
      },
      "attribute": "kind",
      "reflect": false,
      "defaultValue": "\"info\""
    },
    "closable": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Determines if closable."
      },
      "attribute": "closable",
      "reflect": false,
      "defaultValue": "false"
    }
  }; }
  static get events() { return [{
      "method": "messageClosed",
      "name": "messageClosed",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": "An event fired when a user closes the message."
      },
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      }
    }]; }
  static get elementRef() { return "hostEl"; }
}
