import { Component, Prop, h } from '@stencil/core';
import { Fragment } from '../../../../utils/fragment';
export class KdsIconApproved {
  render() {
    const paths = (h(Fragment, null,
      h("path", { d: "M12.71 6.4A4.71 4.71 0 1 0 5 10v3.58a.74.74 0 0 0 .4.66.81.81 0 0 0 .34.08.76.76 0 0 0 .43-.14L8 12.87l1.84 1.3a.76.76 0 0 0 .77.06.74.74 0 0 0 .4-.66V10a4.66 4.66 0 0 0 1.7-3.6zM4 6.4a4 4 0 1 1 4 4 4 4 0 0 1-4-4zm6.24 7.16l-2.02-1.45a.36.36 0 0 0-.44 0l-2 1.46v-3.06a4.67 4.67 0 0 0 2.26.6 4.57 4.57 0 0 0 2.26-.61z" }),
      h("path", { d: "M6.86 8a.39.39 0 0 0 .27.11.38.38 0 0 0 .26-.11L10 5.35a.37.37 0 0 0 0-.53.39.39 0 0 0-.53 0L7.13 7.18l-.72-.71a.38.38 0 0 0-.53 0 .39.39 0 0 0 0 .53z" })));
    return (h("kds-icon", { size: this.size, color: this.color, paths: paths }));
  }
  static get is() { return "kds-icon-approved"; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
        "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "size",
      "reflect": false
    },
    "color": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'subdued' |\n    'supportive' |\n    'inverse' |\n    'interactive' |\n    'destructive' |\n    'favorable' |\n    'destructive-inverse' |\n    'favorable-inverse' |\n    'neutral-inverse' |\n    'callout-inverse'",
        "resolved": "\"callout-inverse\" | \"destructive\" | \"destructive-inverse\" | \"favorable\" | \"favorable-inverse\" | \"interactive\" | \"inverse\" | \"neutral-inverse\" | \"subdued\" | \"supportive\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color",
      "reflect": false
    }
  }; }
}
