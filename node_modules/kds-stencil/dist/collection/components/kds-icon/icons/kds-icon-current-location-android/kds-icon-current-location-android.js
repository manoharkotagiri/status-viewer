import { Component, Prop, h } from '@stencil/core';
import { Fragment } from '../../../../utils/fragment';
export class KdsIconCurrentLocationAndroid {
  render() {
    const paths = (h(Fragment, null,
      h("path", { d: "M8.025 5.634A2.366 2.366 0 1 0 10.39 8a2.369 2.369 0 0 0-2.366-2.366zm0 3.982A1.616 1.616 0 1 1 9.64 8a1.617 1.617 0 0 1-1.616 1.616z" }),
      h("path", { d: "M13.9 7.625h-.737A5.152 5.152 0 0 0 8.4 2.862v-.737a.375.375 0 1 0-.75 0v.737a5.152 5.152 0 0 0-4.763 4.763H2.1a.375.375 0 1 0 0 .75h.787a5.152 5.152 0 0 0 4.763 4.763v.737a.375.375 0 1 0 .75 0v-.737a5.152 5.152 0 0 0 4.763-4.763h.737a.375.375 0 0 0 0-.75zm-5.875 4.8A4.426 4.426 0 1 1 12.45 8a4.43 4.43 0 0 1-4.426 4.426z" })));
    return (h("kds-icon", { size: this.size, color: this.color, paths: paths }));
  }
  static get is() { return "kds-icon-current-location-android"; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
        "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "size",
      "reflect": false
    },
    "color": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'subdued' |\n    'supportive' |\n    'inverse' |\n    'interactive' |\n    'destructive' |\n    'favorable' |\n    'destructive-inverse' |\n    'favorable-inverse' |\n    'neutral-inverse' |\n    'callout-inverse'",
        "resolved": "\"callout-inverse\" | \"destructive\" | \"destructive-inverse\" | \"favorable\" | \"favorable-inverse\" | \"interactive\" | \"inverse\" | \"neutral-inverse\" | \"subdued\" | \"supportive\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color",
      "reflect": false
    }
  }; }
}
