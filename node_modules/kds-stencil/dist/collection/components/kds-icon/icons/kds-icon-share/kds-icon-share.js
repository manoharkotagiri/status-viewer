import { Component, Prop, h } from '@stencil/core';
import { Fragment } from '../../../../utils/fragment';
export class KdsIconShare {
  render() {
    const paths = (h(Fragment, null,
      h("path", { d: "M10.167 9.554a2.047 2.047 0 0 0-1.377.539l-1.831-1.4a1.967 1.967 0 0 0 0-1.448l1.792-1.37a2.108 2.108 0 1 0-.44-.608L6.566 6.601a2.062 2.062 0 1 0 0 2.735l1.77 1.353a2.036 2.036 0 0 0-.232.928 2.063 2.063 0 1 0 2.063-2.063zm0-6.483a1.313 1.313 0 1 1-1.313 1.312 1.314 1.314 0 0 1 1.313-1.312zM5.034 9.28a1.312 1.312 0 1 1 1.313-1.31 1.314 1.314 0 0 1-1.313 1.31zm5.133 3.648a1.313 1.313 0 1 1 1.313-1.312 1.314 1.314 0 0 1-1.313 1.312z" })));
    return (h("kds-icon", { size: this.size, color: this.color, paths: paths }));
  }
  static get is() { return "kds-icon-share"; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
        "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "size",
      "reflect": false
    },
    "color": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'subdued' |\n    'supportive' |\n    'inverse' |\n    'interactive' |\n    'destructive' |\n    'favorable' |\n    'destructive-inverse' |\n    'favorable-inverse' |\n    'neutral-inverse' |\n    'callout-inverse'",
        "resolved": "\"callout-inverse\" | \"destructive\" | \"destructive-inverse\" | \"favorable\" | \"favorable-inverse\" | \"interactive\" | \"inverse\" | \"neutral-inverse\" | \"subdued\" | \"supportive\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color",
      "reflect": false
    }
  }; }
}
