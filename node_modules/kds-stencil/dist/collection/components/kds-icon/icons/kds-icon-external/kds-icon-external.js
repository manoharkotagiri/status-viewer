import { Component, Prop, h } from '@stencil/core';
import { Fragment } from '../../../../utils/fragment';
export class KdsIconExternal {
  render() {
    const paths = (h(Fragment, null,
      h("path", { d: "M11.86 8.503a.375.375 0 0 0-.376.375v3.355a.436.436 0 0 1-.435.436h-7.25a.467.467 0 0 1-.466-.467V4.983a.466.466 0 0 1 .466-.465h3.324a.375.375 0 0 0 0-.75H3.799a1.218 1.218 0 0 0-1.216 1.215v7.22a1.218 1.218 0 0 0 1.216 1.216h7.25a1.187 1.187 0 0 0 1.185-1.186V8.878a.375.375 0 0 0-.375-.375z" }),
      h("path", { d: "M13.412 3.233a.654.654 0 0 0-.652-.652H9.012a.375.375 0 0 0 0 .75h3.119L7.007 8.455a.376.376 0 0 0 .531.531l5.125-5.124.004 3.118a.375.375 0 0 0 .375.374h.001a.374.374 0 0 0 .374-.376z" })));
    return (h("kds-icon", { size: this.size, color: this.color, paths: paths }));
  }
  static get is() { return "kds-icon-external"; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
        "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "size",
      "reflect": false
    },
    "color": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'subdued' |\n    'supportive' |\n    'inverse' |\n    'interactive' |\n    'destructive' |\n    'favorable' |\n    'destructive-inverse' |\n    'favorable-inverse' |\n    'neutral-inverse' |\n    'callout-inverse'",
        "resolved": "\"callout-inverse\" | \"destructive\" | \"destructive-inverse\" | \"favorable\" | \"favorable-inverse\" | \"interactive\" | \"inverse\" | \"neutral-inverse\" | \"subdued\" | \"supportive\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color",
      "reflect": false
    }
  }; }
}
