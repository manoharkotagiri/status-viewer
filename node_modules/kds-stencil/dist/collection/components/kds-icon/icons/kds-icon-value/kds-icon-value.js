import { Component, Prop, h } from '@stencil/core';
import { Fragment } from '../../../../utils/fragment';
export class KdsIconValue {
  render() {
    const paths = (h(Fragment, null,
      h("circle", { cx: "4.89835", cy: "4.89835", r: "0.52951", transform: "rotate(-45 4.898 4.898)" }),
      h("path", { d: "M13.055 8.096L8.27 3.312a2.392 2.392 0 0 0-1.678-.695H6.57L4 2.637A1.383 1.383 0 0 0 2.637 4l-.02 2.57a2.387 2.387 0 0 0 .695 1.699l4.785 4.785a1.127 1.127 0 0 0 1.59 0l3.368-3.367a1.13 1.13 0 0 0 0-1.592zm-.53 1.061l-3.369 3.367a.377.377 0 0 1-.53 0L3.843 7.737a1.627 1.627 0 0 1-.476-1.16l.02-2.571a.629.629 0 0 1 .62-.62l2.57-.02a1.641 1.641 0 0 1 1.162.476l4.784 4.783a.377.377 0 0 1 .001.531z" })));
    return (h("kds-icon", { size: this.size, color: this.color, paths: paths }));
  }
  static get is() { return "kds-icon-value"; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
        "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "size",
      "reflect": false
    },
    "color": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'subdued' |\n    'supportive' |\n    'inverse' |\n    'interactive' |\n    'destructive' |\n    'favorable' |\n    'destructive-inverse' |\n    'favorable-inverse' |\n    'neutral-inverse' |\n    'callout-inverse'",
        "resolved": "\"callout-inverse\" | \"destructive\" | \"destructive-inverse\" | \"favorable\" | \"favorable-inverse\" | \"interactive\" | \"inverse\" | \"neutral-inverse\" | \"subdued\" | \"supportive\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color",
      "reflect": false
    }
  }; }
}
