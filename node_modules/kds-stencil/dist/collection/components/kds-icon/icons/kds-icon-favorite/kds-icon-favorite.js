import { Component, Prop, h } from '@stencil/core';
import { Fragment } from '../../../../utils/fragment';
export class KdsIconFavorite {
  render() {
    const paths = (h(Fragment, null,
      h("path", { d: "M12.64 4.13A3.34 3.34 0 0 0 8 5.07a3.34 3.34 0 0 0-4.64-.94 3.37 3.37 0 0 0-1.48 2.78 4.92 4.92 0 0 0 1.75 3.59 30.12 30.12 0 0 0 3.74 2.88 1.09 1.09 0 0 0 1.26 0 31.58 31.58 0 0 0 3.74-2.88 4.92 4.92 0 0 0 1.75-3.59 3.37 3.37 0 0 0-1.48-2.78zM11.83 10a30.21 30.21 0 0 1-3.62 2.78.36.36 0 0 1-.42 0A30.21 30.21 0 0 1 4.17 10a4.14 4.14 0 0 1-1.54-3.09 2.57 2.57 0 0 1 2.58-2.59 2.55 2.55 0 0 1 1.44.44A2.5 2.5 0 0 1 7.64 6a.4.4 0 0 0 .72 0 2.5 2.5 0 0 1 1-1.26 2.58 2.58 0 0 1 4 2.15A4.14 4.14 0 0 1 11.83 10z" })));
    return (h("kds-icon", { size: this.size, color: this.color, paths: paths }));
  }
  static get is() { return "kds-icon-favorite"; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
        "resolved": "\"l\" | \"m\" | \"s\" | \"xl\" | \"xs\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "size",
      "reflect": false
    },
    "color": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'subdued' |\n    'supportive' |\n    'inverse' |\n    'interactive' |\n    'destructive' |\n    'favorable' |\n    'destructive-inverse' |\n    'favorable-inverse' |\n    'neutral-inverse' |\n    'callout-inverse'",
        "resolved": "\"callout-inverse\" | \"destructive\" | \"destructive-inverse\" | \"favorable\" | \"favorable-inverse\" | \"interactive\" | \"inverse\" | \"neutral-inverse\" | \"subdued\" | \"supportive\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color",
      "reflect": false
    }
  }; }
}
