import { Toast } from "./toast";
/**
 * A toast controller is a global component that controls the position and behavior of dynamically rendering toast messages on a page.
 *
 * When present, the controller creates a top-level portal on the body of the page from which to create and render each toast message.
 */
export declare class KdsToastController {
  private lastId;
  private toasts;
  private toastGroup;
  private timeoutId;
  componentWillLoad(): void;
  createFromEvent({ detail }: {
    detail: any;
  }): void;
  /**
   * Creates an overlay container.
   *
   * @param options The options to use to create the toast.
   */
  createToast(options?: Toast): Promise<HTMLKdsToastElement>;
  /** Formula to calculate the length of time (ms) a Toast remains onscreen. */
  private readTime;
  private onDismiss;
  /**
   * Dismisses an open toast.
   * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.
   */
  dismiss(id: string): Promise<void>;
  render(): any;
}
