import { EventEmitter } from "../../stencil-public-runtime";
interface KdsLabelHostElement extends HTMLInputElement {
  nativeElement: HTMLLabelElement;
}
/**
 * Label is used to add an accessible name to [labelable elements](https://html.spec.whatwg.org/multipage/forms.html#category-label) like checkboxes, inputs, and most native form controls.
 *
 * > **Note:** `<kds-label />` is a [primitive web component](primitives/) that accepts all props listed below and any attributes prefixed with `inner-`.
 * `inner-*` attributes are stripped of their `inner-` prefix and placed onto the native `<label>` element.
 *
 */
export declare class KdsLabel {
  hostEl: KdsLabelHostElement;
  /** Places label to left of input. */
  leftOfInput?: boolean;
  /** Sets the `for` attribute. */
  for?: string;
  /** Associates a field to a form element. */
  form?: string;
  /** Sets the font size. */
  size: "l" | "m" | "s" | "xs";
  hasField: boolean;
  hasRadioOrCheckbox: boolean;
  innerAttrs: any;
  /**
   * Emits when the component has been loaded. Event's `detail` contains a reference to the inner label element.
   */
  ready: EventEmitter;
  private observer;
  private labelObserver;
  private labelElement;
  private sizeOpts;
  getValidSize(size: string): string;
  componentWillLoad(): void;
  checkChildren(parent: HTMLElement): void;
  componentDidLoad(): void;
  disconnectedCallback(): void;
  /**
   * Returns the native `<label>` element used under the hood.
   */
  getNativeElement(): Promise<HTMLLabelElement>;
  render(): any;
}
export {};
