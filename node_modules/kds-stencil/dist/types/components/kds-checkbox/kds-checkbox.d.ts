import { EventEmitter } from "../../stencil-public-runtime";
interface KdsCheckboxHostElement extends HTMLInputElement {
  nativeElement: HTMLInputElement;
}
/**
 * Checkboxes should be used when a user needs to make a selection or select multiple options within a list. They can be used to opt in or out of something.
 *
 * > **Note:** `<kds-checkbox />` is a [primitive web component](primitives/) that accepts all props listed below and any attributes prefixed with `inner-`.
 * `inner-*` attributes are stripped of their `inner-` prefix and placed onto a rendered native `<input type="checkbox">` element.
 *
 * ```Message { "props": { "kind": "warning", "className": "mb-16" } }
 * **Angular Consumers:** This component requires at least version 1.0.0 of kds-stencil-accessors for use with Angular Forms.
 * Refer to our [getting started documentation](/stencil/getting-started#Angular%20Accessors) for installation and usage instructions.
 * ```
 */
export declare class KdsCheckBox {
  hostEl: KdsCheckboxHostElement;
  /** Takes focus when the form is presented. */
  autofocus: boolean;
  /** Indicates currently-selected item. */
  checked?: boolean;
  /** Disables if present. */
  disabled?: boolean;
  /** Sets indeterminate state. */
  indeterminate?: boolean;
  /** Sets the name. */
  name?: string;
  /** Requires value before submission. */
  required?: boolean;
  /** Contains the current value. */
  value?: string | string[] | number;
  /** Applies the compact size. */
  compact?: boolean;
  innerAttrs: any;
  private observer;
  private checkboxElement;
  /**
   * Emits when the component has been loaded.
   * Event's `detail` contains a reference to the inner input element.
   */
  ready: EventEmitter<HTMLInputElement>;
  componentWillLoad(): void;
  componentDidLoad(): void;
  disconnectedCallback(): void;
  /**
   * Returns the native `<input>` element used under the hood.
   */
  getNativeElement(): Promise<HTMLInputElement>;
  private onChange;
  render(): any;
}
export {};
